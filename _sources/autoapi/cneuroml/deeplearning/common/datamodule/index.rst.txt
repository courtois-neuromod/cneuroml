:py:mod:`cneuroml.deeplearning.common.datamodule`
=================================================

.. py:module:: cneuroml.deeplearning.common.datamodule

.. autoapi-nested-parse::

   Lightning Data Modules.



Subpackages
-----------
.. toctree::
   :titlesonly:
   :maxdepth: 3

   vision/index.rst


Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   base/index.rst
   base_test/index.rst


Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   cneuroml.deeplearning.common.datamodule.BaseDataModule
   cneuroml.deeplearning.common.datamodule.BaseDataModuleConfig




.. py:class:: BaseDataModule(config: BaseDataModuleConfig)


   Bases: :py:obj:`lightning.pytorch.LightningDataModule`

   .

   With ``stage`` being any of ``"train"``, ``"val"``, ``"test"`` or
   ``"predict"``, children of this class need to properly define
   ``dataset[stage]`` instance attribute(s) for each desired ``stage``.

   .. attribute:: config

      .

      :type: ``BaseDataModuleConfig``

   .. attribute:: dataset (``dict[Literal["train", "val", "test", "predict"],

      Dataset]``): .

   Calls parent constructor.

   :param config: .

   .. py:method:: load_state_dict(state_dict: dict[str, int]) -> None

      Sets the instance's batch size from a dictionary value.

      :param state_dict: .


   .. py:method:: state_dict() -> dict[str, int]

      .

      :returns: The instance's batch size inside a dictionary.


   .. py:method:: train_dataloader() -> torch.utils.data.DataLoader[torch.Tensor]

      .

      :returns: A new training PyTorch ``DataLoader`` instance.

      :raises AttributeError: If the instance's ``dataset["train"]``
      :raises attribute is not defined.:


   .. py:method:: val_dataloader() -> torch.utils.data.DataLoader[torch.Tensor]

      .

      :returns: A new validation PyTorch ``DataLoader`` instance.

      :raises AttributeError: If the instance's ``dataset["val"]``
      :raises attribute is not defined.:


   .. py:method:: test_dataloader() -> torch.utils.data.DataLoader[torch.Tensor]

      .

      :returns: A new testing PyTorch ``DataLoader`` instance.

      :raises AttributeError: If the instance's ``dataset["test"]``
      :raises attribute is not defined.:


   .. py:method:: predict_dataloader() -> torch.utils.data.DataLoader[torch.Tensor]

      .

      The predict PyTorch ``DataLoader`` instance does not shuffle the
      dataset.

      :returns: A new prediction PyTorch ``DataLoader`` instance.

      :raises AttributeError: If the instance's ``dataset["predict"]``
      :raises attribute is not defined.:



.. py:class:: BaseDataModuleConfig


   .

   .. attribute:: data_dir

      Path to the data directory.

   .. attribute:: per_device_batch_size

      Per-device number of samples to load
      per iteration.

   .. attribute:: per_device_num_workers

      Per-device number of CPU processes to
      use for data loading (``0`` means that the data will be
      loaded by each device's assigned CPU process)

   .. attribute:: device_type

      The compute device type to use (``cpu`` or
      ``gpu``).

   .. attribute:: pin_memory

      Whether to copy tensors into device pinned
      memory before returning them (is set to ``True`` by default
      if using GPUs).

   .. py:attribute:: data_dir
      :type: str

      

   .. py:attribute:: per_device_batch_size
      :type: int
      :value: 1

      

   .. py:attribute:: per_device_num_workers
      :type: int
      :value: 0

      

   .. py:attribute:: device_type
      :type: Literal[cpu, gpu]
      :value: 'gpu'

      

   .. py:attribute:: pin_memory
      :type: bool

      


