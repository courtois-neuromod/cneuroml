:py:mod:`cneuroml.deeplearning.common.datamodule.base_test`
===========================================================

.. py:module:: cneuroml.deeplearning.common.datamodule.base_test

.. autoapi-nested-parse::

   .



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   cneuroml.deeplearning.common.datamodule.base_test.test_constructor_default_arguments
   cneuroml.deeplearning.common.datamodule.base_test.test_constructor_non_default_arguments
   cneuroml.deeplearning.common.datamodule.base_test.datamodule
   cneuroml.deeplearning.common.datamodule.base_test.test_load_state_dict
   cneuroml.deeplearning.common.datamodule.base_test.dataset
   cneuroml.deeplearning.common.datamodule.base_test.dataloader
   cneuroml.deeplearning.common.datamodule.base_test.test_train_dataloader_with_required_dataset_attribute
   cneuroml.deeplearning.common.datamodule.base_test.test_train_dataloader_with_missing_dataset_attribute
   cneuroml.deeplearning.common.datamodule.base_test.test_val_dataloader_with_required_dataset_attribute
   cneuroml.deeplearning.common.datamodule.base_test.test_val_dataloader_with_missing_dataset_attribute
   cneuroml.deeplearning.common.datamodule.base_test.test_test_dataloader_with_required_dataset_attribute
   cneuroml.deeplearning.common.datamodule.base_test.test_test_dataloader_with_missing_dataset_attribute
   cneuroml.deeplearning.common.datamodule.base_test.predict_dataloader
   cneuroml.deeplearning.common.datamodule.base_test.test_predict_dataloader_with_required_dataset_attribute
   cneuroml.deeplearning.common.datamodule.base_test.test_predict_dataloader_with_missing_dataset_attribute



.. py:function:: test_constructor_default_arguments() -> None

   .


.. py:function:: test_constructor_non_default_arguments() -> None

   .


.. py:function:: datamodule() -> cneuroml.deeplearning.common.datamodule.BaseDataModule

   .

   :returns: A generic ``BaseDataModule`` instance.


.. py:function:: test_load_state_dict(datamodule: cneuroml.deeplearning.common.datamodule.BaseDataModule) -> None

   .

   :param datamodule: .


.. py:function:: dataset() -> torch.utils.data.Dataset[torch.Tensor]

   .

   :returns: A generic PyTorch ``Dataset`` instance.


.. py:function:: dataloader(datamodule: cneuroml.deeplearning.common.datamodule.BaseDataModule, dataset: torch.utils.data.Dataset[torch.Tensor]) -> torch.utils.data.DataLoader[torch.Tensor]

   .

   :param datamodule: .
   :param dataset: .

   :returns: A generic PyTorch ``DataLoader`` instance.


.. py:function:: test_train_dataloader_with_required_dataset_attribute(datamodule: cneuroml.deeplearning.common.datamodule.BaseDataModule, dataset: torch.utils.data.Dataset[torch.Tensor], dataloader: torch.utils.data.DataLoader[torch.Tensor]) -> None

   .

   :param datamodule: .
   :param dataset: .
   :param dataloader: .


.. py:function:: test_train_dataloader_with_missing_dataset_attribute(datamodule: cneuroml.deeplearning.common.datamodule.BaseDataModule) -> None

   .

   :param datamodule: .


.. py:function:: test_val_dataloader_with_required_dataset_attribute(datamodule: cneuroml.deeplearning.common.datamodule.BaseDataModule, dataset: torch.utils.data.Dataset[torch.Tensor], dataloader: torch.utils.data.DataLoader[torch.Tensor]) -> None

   .

   :param datamodule: .
   :param dataset: .
   :param dataloader: .


.. py:function:: test_val_dataloader_with_missing_dataset_attribute(datamodule: cneuroml.deeplearning.common.datamodule.BaseDataModule) -> None

   .

   :param datamodule: .


.. py:function:: test_test_dataloader_with_required_dataset_attribute(datamodule: cneuroml.deeplearning.common.datamodule.BaseDataModule, dataset: torch.utils.data.Dataset[torch.Tensor], dataloader: torch.utils.data.DataLoader[torch.Tensor]) -> None

   .

   :param datamodule: .
   :param dataset: .
   :param dataloader: .


.. py:function:: test_test_dataloader_with_missing_dataset_attribute(datamodule: cneuroml.deeplearning.common.datamodule.BaseDataModule) -> None

   .

   :param datamodule: .


.. py:function:: predict_dataloader(datamodule: cneuroml.deeplearning.common.datamodule.BaseDataModule, dataset: torch.utils.data.Dataset[torch.Tensor]) -> torch.utils.data.DataLoader[torch.Tensor]

   Returns a ``DataLoader``that does not shuffle the dataset.

   :param datamodule: .
   :param dataset: .

   :returns: .


.. py:function:: test_predict_dataloader_with_required_dataset_attribute(datamodule: cneuroml.deeplearning.common.datamodule.BaseDataModule, dataset: torch.utils.data.Dataset[torch.Tensor], predict_dataloader: torch.utils.data.DataLoader[torch.Tensor]) -> None

   .

   :param datamodule: .
   :param dataset: .
   :param predict_dataloader: .


.. py:function:: test_predict_dataloader_with_missing_dataset_attribute(datamodule: cneuroml.deeplearning.common.datamodule.BaseDataModule) -> None

   .

   :param datamodule: .


