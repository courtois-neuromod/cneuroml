Search.setIndex({"docnames": ["Contribution", "Execution", "Execution_On_a_Linux_machine", "Execution_On_a_Slurm_cluster", "Installation", "Installation_Common_to_all_machines", "Installation_On_a_Linux_machine", "Installation_On_a_Slurm_cluster", "autoapi/cneuromax/application/index", "autoapi/cneuromax/common/index", "autoapi/cneuromax/common/logger/index", "autoapi/cneuromax/common/logger/wandb/index", "autoapi/cneuromax/deeplearning/__main__/index", "autoapi/cneuromax/deeplearning/common/datamodule/base/index", "autoapi/cneuromax/deeplearning/common/datamodule/index", "autoapi/cneuromax/deeplearning/common/datamodule/vision/index", "autoapi/cneuromax/deeplearning/common/datamodule/vision/mnist/index", "autoapi/cneuromax/deeplearning/common/datamodule/vision/mnist_test/index", "autoapi/cneuromax/deeplearning/common/fitter/index", "autoapi/cneuromax/deeplearning/common/index", "autoapi/cneuromax/deeplearning/common/litmodule/base/index", "autoapi/cneuromax/deeplearning/common/litmodule/classification/base/index", "autoapi/cneuromax/deeplearning/common/litmodule/classification/index", "autoapi/cneuromax/deeplearning/common/litmodule/index", "autoapi/cneuromax/deeplearning/common/lrscheduler/base/index", "autoapi/cneuromax/deeplearning/common/lrscheduler/base_test/index", "autoapi/cneuromax/deeplearning/common/lrscheduler/index", "autoapi/cneuromax/deeplearning/common/lrscheduler/none_test/index", "autoapi/cneuromax/deeplearning/common/nnmodule/index", "autoapi/cneuromax/deeplearning/common/nnmodule/mlp/index", "autoapi/cneuromax/deeplearning/common/nnmodule/mlp_test/index", "autoapi/cneuromax/deeplearning/common/optimizer/adam/index", "autoapi/cneuromax/deeplearning/common/optimizer/adam_test/index", "autoapi/cneuromax/deeplearning/common/optimizer/adamw/index", "autoapi/cneuromax/deeplearning/common/optimizer/base/index", "autoapi/cneuromax/deeplearning/common/optimizer/base_test/index", "autoapi/cneuromax/deeplearning/common/optimizer/index", "autoapi/cneuromax/deeplearning/common/optimizer/sgd/index", "autoapi/cneuromax/deeplearning/common/optimizer/sgd_test/index", "autoapi/cneuromax/deeplearning/common/optimizer/w_test/index", "autoapi/cneuromax/deeplearning/common/utils/annotations/index", "autoapi/cneuromax/deeplearning/common/utils/index", "autoapi/cneuromax/deeplearning/common/utils/lightning/index", "autoapi/cneuromax/deeplearning/experiment/index", "autoapi/cneuromax/deeplearning/experiment/mnist_classification/index", "autoapi/cneuromax/deeplearning/experiment/mnist_classification/litmodule/index", "autoapi/cneuromax/deeplearning/index", "autoapi/cneuromax/index", "autoapi/cneuromax/neuroevolution/index", "autoapi/cneuromax/utils/annotations/index", "autoapi/cneuromax/utils/index", "autoapi/cneuromax/utils/test/index", "autoapi/index", "index"], "filenames": ["Contribution.rst", "Execution.rst", "Execution_On_a_Linux_machine.rst", "Execution_On_a_Slurm_cluster.rst", "Installation.rst", "Installation_Common_to_all_machines.rst", "Installation_On_a_Linux_machine.rst", "Installation_On_a_Slurm_cluster.rst", "autoapi/cneuromax/application/index.rst", "autoapi/cneuromax/common/index.rst", "autoapi/cneuromax/common/logger/index.rst", "autoapi/cneuromax/common/logger/wandb/index.rst", "autoapi/cneuromax/deeplearning/__main__/index.rst", "autoapi/cneuromax/deeplearning/common/datamodule/base/index.rst", "autoapi/cneuromax/deeplearning/common/datamodule/index.rst", "autoapi/cneuromax/deeplearning/common/datamodule/vision/index.rst", "autoapi/cneuromax/deeplearning/common/datamodule/vision/mnist/index.rst", "autoapi/cneuromax/deeplearning/common/datamodule/vision/mnist_test/index.rst", "autoapi/cneuromax/deeplearning/common/fitter/index.rst", "autoapi/cneuromax/deeplearning/common/index.rst", "autoapi/cneuromax/deeplearning/common/litmodule/base/index.rst", "autoapi/cneuromax/deeplearning/common/litmodule/classification/base/index.rst", "autoapi/cneuromax/deeplearning/common/litmodule/classification/index.rst", "autoapi/cneuromax/deeplearning/common/litmodule/index.rst", "autoapi/cneuromax/deeplearning/common/lrscheduler/base/index.rst", "autoapi/cneuromax/deeplearning/common/lrscheduler/base_test/index.rst", "autoapi/cneuromax/deeplearning/common/lrscheduler/index.rst", "autoapi/cneuromax/deeplearning/common/lrscheduler/none_test/index.rst", "autoapi/cneuromax/deeplearning/common/nnmodule/index.rst", "autoapi/cneuromax/deeplearning/common/nnmodule/mlp/index.rst", "autoapi/cneuromax/deeplearning/common/nnmodule/mlp_test/index.rst", "autoapi/cneuromax/deeplearning/common/optimizer/adam/index.rst", "autoapi/cneuromax/deeplearning/common/optimizer/adam_test/index.rst", "autoapi/cneuromax/deeplearning/common/optimizer/adamw/index.rst", "autoapi/cneuromax/deeplearning/common/optimizer/base/index.rst", "autoapi/cneuromax/deeplearning/common/optimizer/base_test/index.rst", "autoapi/cneuromax/deeplearning/common/optimizer/index.rst", "autoapi/cneuromax/deeplearning/common/optimizer/sgd/index.rst", "autoapi/cneuromax/deeplearning/common/optimizer/sgd_test/index.rst", "autoapi/cneuromax/deeplearning/common/optimizer/w_test/index.rst", "autoapi/cneuromax/deeplearning/common/utils/annotations/index.rst", "autoapi/cneuromax/deeplearning/common/utils/index.rst", "autoapi/cneuromax/deeplearning/common/utils/lightning/index.rst", "autoapi/cneuromax/deeplearning/experiment/index.rst", "autoapi/cneuromax/deeplearning/experiment/mnist_classification/index.rst", "autoapi/cneuromax/deeplearning/experiment/mnist_classification/litmodule/index.rst", "autoapi/cneuromax/deeplearning/index.rst", "autoapi/cneuromax/index.rst", "autoapi/cneuromax/neuroevolution/index.rst", "autoapi/cneuromax/utils/annotations/index.rst", "autoapi/cneuromax/utils/index.rst", "autoapi/cneuromax/utils/test/index.rst", "autoapi/index.rst", "index.rst"], "titles": ["Contribution", "Execution", "On a Linux machine", "On a Slurm cluster", "Installation", "Common to all machines", "On a Linux machine", "On a Slurm cluster", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.application</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.common</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.common.logger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.common.logger.wandb</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.__main__</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.datamodule.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.datamodule</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.datamodule.vision</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.datamodule.vision.mnist</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.datamodule.vision.mnist_test</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.fitter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.litmodule.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.litmodule.classification.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.litmodule.classification</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.litmodule</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.lrscheduler.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.lrscheduler.base_test</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.lrscheduler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.lrscheduler.none_test</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.nnmodule</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.nnmodule.mlp</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.nnmodule.mlp_test</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.optimizer.adam</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.optimizer.adam_test</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.optimizer.adamw</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.optimizer.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.optimizer.base_test</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.optimizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.optimizer.sgd</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.optimizer.sgd_test</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.optimizer.w_test</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.utils.annotations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.utils.lightning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.experiment</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.experiment.mnist_classification</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.experiment.mnist_classification.litmodule</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.neuroevolution</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.utils.annotations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.utils.test</span></code>", "API Reference", "Welcome to the cneuromax documentation!"], "terms": {"have": [0, 4, 5], "complet": 0, "instal": [0, 1, 3, 5, 53], "step": [0, 4, 5, 20, 21, 22, 23], "befor": [0, 13, 14], "move": [0, 4, 5], "thi": [0, 4, 5, 13, 14, 18, 19, 28, 29, 42, 46, 52, 53], "section": [0, 4, 6], "link": 0, "http": [0, 31, 33, 36, 37], "com": [0, 4, 5], "courtoi": [0, 4, 5], "neuromod": [0, 4, 5], "cneuromax": [0, 1, 2, 3, 4, 5, 6, 7, 52], "In": [0, 18], "order": 0, "you": [0, 4, 5, 42], "need": [0, 13, 14, 18, 20, 23, 31, 33, 34, 36, 37], "depend": [0, 18], "can": [0, 4, 5], "done": 0, "run": [0, 4, 5, 6, 7, 12, 18, 42], "follow": [0, 4, 5, 6, 42], "command": [0, 4, 5, 7], "cd": [0, 1, 3, 4, 5], "cneuromax_path": [0, 1, 2, 3, 4, 5, 7], "python": [0, 4, 7], "m": [0, 1, 2, 3, 4, 7], "venv": [0, 1, 3, 4, 7], "bin": [0, 1, 3, 4, 7], "activ": [0, 1, 3, 4, 7, 28, 29, 53], "openmpi": 0, "": [0, 4, 13, 14, 20, 23], "alreadi": [0, 4, 5], "sudo": [0, 4, 5, 6], "apt": [0, 4, 5, 6], "y": [0, 4, 5, 6], "libopenmpi": 0, "dev": 0, "pip": [0, 4, 7], "extra": 0, "index": [0, 24], "url": 0, "download": [0, 15, 16], "pytorch": [0, 13, 14, 19, 20, 23, 31, 33, 36, 37, 42, 45, 46], "org": [0, 31, 33, 36, 37], "whl": 0, "cpu": [0, 13, 14], "e": [0, 1, 2, 4, 5, 7, 42], "now": [0, 4, 5, 7], "all": [0, 7, 19, 53], "do": [0, 18], "note": [0, 18], "librari": [0, 1, 3, 4, 5, 8, 46, 47, 48], "version": [0, 4, 5, 6], "ar": [0, 4, 18, 42], "meant": 0, "actual": 0, "so": [0, 4, 42], "i": [0, 4, 5, 7, 13, 14, 18, 20, 23, 28, 29, 42, 46, 51, 53], "prefer": 0, "work": 0, "contain": [0, 1, 3, 5, 7, 19, 20, 23, 52], "reproduc": [0, 4], "purpos": 0, "The": [0, 4, 7, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 28, 29, 42, 45, 47, 51], "main": [0, 18], "branch": 0, "protect": 0, "mean": [0, 13, 14], "happen": 0, "through": [0, 4, 7, 28, 29, 42, 45], "pull": [0, 5, 7], "request": 0, "rather": [0, 4, 5, 42], "than": [0, 4, 5, 42], "direct": 0, "push": [0, 4, 5], "ani": [0, 12, 13, 14], "go": 0, "pass": [0, 28, 29, 42, 45], "number": [0, 13, 14, 28, 29, 42], "common": [0, 45, 46, 47, 52, 53], "standard": 0, "check": [0, 49, 51], "ensur": 0, "high": 0, "qualiti": 0, "doe": [0, 13, 14], "portion": 0, "exist": 0, "base": [0, 14, 15, 16, 19, 22, 23, 25, 26, 27, 28, 29, 31, 33, 36, 37, 42, 45, 46, 52], "those": 0, "clean": 0, "format": 0, "pep8": 0, "compliant": 0, "we": [0, 4, 7, 18], "us": [0, 13, 14, 15, 16, 18, 19, 42, 46], "black": 0, "79": 0, "line": 0, "72": 0, "comment": 0, "lint": 0, "ruff": 0, "rule": 0, "don": 0, "creat": [0, 1, 2, 3, 15, 16, 18, 21, 22, 52], "conflict": 0, "type": [0, 13, 14, 15, 16, 18, 20, 21, 22, 23, 28, 29, 42, 45, 49], "mypi": 0, "strict": 0, "unit": 0, "If": [0, 4, 5, 13, 14, 18, 20, 23, 42], "thei": 0, "your": [0, 1, 2, 3, 4, 5], "current": 0, "onli": 0, "leverag": 0, "pytest": 0, "most": 0, "like": 0, "eventu": 0, "broader": 0, "rest": 0, "document": [0, 18, 52], "file": [0, 4, 7], "doc8": 0, "yaml": [0, 1, 3], "yamllint": 0, "trail": 0, "whitespac": 0, "regardless": 0, "extens": 0, "end": 0, "newlin": 0, "chang": 0, "made": 0, "pyreq": 0, "folder": [0, 4, 5, 7], "docker": [0, 4, 6, 7], "podman": [0, 1, 2, 3], "imag": [0, 45], "still": 0, "built": 0, "doc": [0, 31, 33, 36, 37], "page": [0, 52], "wait": 0, "ci": 0, "continu": 0, "integr": 0, "finish": 0, "verifi": 0, "some": 0, "fast": 0, "sub": 0, "1": [0, 13, 14, 15, 16, 45, 52], "second": [0, 4, 7], "quick": 0, "wai": 0, "execut": [0, 53], "them": [0, 13, 14], "pre": 0, "commit": 0, "hook": 0, "which": [0, 4, 7], "after": 0, "being": [0, 13, 14], "upon": 0, "each": [0, 13, 14, 20, 23, 28, 29, 42], "prevent": 0, "from": [0, 1, 2, 3, 13, 14, 18, 20, 23, 42], "fail": 0, "automat": 0, "import": 0, "function": [0, 18, 20, 23, 28, 29, 45], "well": 0, "To": 0, "disabl": 0, "behaviour": 0, "instanc": [0, 13, 14, 17, 20, 23, 28, 29, 45], "when": [0, 4, 5, 24], "re": 0, "want": 0, "deal": 0, "valid": [0, 12, 13, 14, 15, 16, 18], "instead": 0, "slow": 0, "typecheck": 0, "slower": 0, "henc": 0, "suitabl": [0, 28, 29], "howev": 0, "pretti": 0, "save": [0, 18, 42], "time": 0, "right": 0, "merg": 0, "welcom": 0, "red": 0, "wave": 0, "error": 0, "warn": 0, "everi": [0, 4, 7], "suggest": 0, "editor": 0, "notifi": 0, "issu": 0, "On": [0, 53], "formatt": 0, "charliermarsh": 0, "lextudio": 0, "restructuredtext": 0, "enabl": [0, 4, 5], "fnando": 0, "linter": 0, "And": 0, "here": 0, "insert": 0, "config": [0, 4, 5, 7, 12, 13, 14, 15, 16, 18, 28, 29, 42], "user": [0, 1, 2, 3, 4, 5], "json": 0, "arg": 0, "pyproject": 0, "toml": 0, "defaultformatt": 0, "formatonsav": 0, "true": [0, 4, 5, 13, 14, 24, 34, 51], "codeactionsonsav": 0, "sourc": [0, 4, 5], "organizeimport": 0, "mypyen": 0, "mypyarg": 0, "esbonio": 0, "server": 0, "fals": [0, 51], "executablepath": 0, "home": [0, 4, 5], "max": 0, "syntaxhighlight": 0, "miscellan": 0, "insertfinalnewlin": 0, "trimtrailingwhitespac": 0, "pylanc": 0, "analysi": 0, "ignor": 0, "throw": 0, "incorrect": 0, "otherwis": [0, 51], "redund": 0, "due": 0, "its": 0, "even": 0, "though": 0, "call": [0, 13, 14, 15, 16, 20, 21, 22, 23, 28, 29, 45], "appli": 0, "uninstal": 0, "ha": [0, 42], "other": 0, "featur": [0, 4, 5], "syntax": 0, "highlight": 0, "termin": 0, "window": 0, "directori": [0, 13, 14], "new": [0, 13, 14, 18], "checkout": 0, "b": [0, 18], "your_branch_nam": 0, "remot": 0, "add": [0, 4, 5], "commit_messag": 0, "been": 0, "introduct": 0, "while": [0, 18], "were": 0, "updat": [0, 4, 5, 42], "latest": [0, 1, 2, 3, 4, 6, 7], "stash": 0, "option": 0, "uncommit": 0, "rebas": 0, "pop": 0, "back": 0, "previou": 0, "block": 0, "might": 0, "forc": 0, "flag": [0, 4, 5], "Then": 0, "onc": [0, 18], "approv": 0, "delet": [0, 4, 7], "d": 0, "For": 0, "remain": [0, 42], "fork": 0, "todo": 0, "prune": 0, "instruct": [0, 18], "exampl": [1, 2, 3, 4, 5, 6], "simpl": [1, 2, 3, 45], "mnist": [1, 2, 3, 14, 15, 19, 45, 52], "train": [1, 2, 3, 13, 14, 15, 16, 18, 21, 22, 24, 42], "pythonpath": [1, 2], "v": [1, 2, 3], "w": [1, 2, 3, 18, 42], "deps_onli": [1, 2, 3], "all_dep": [1, 2, 3], "python3": [1, 2, 3, 4, 7], "dl": [1, 2, 3], "task": [1, 2, 3, 42], "visual": [1, 2, 3], "tabular": [1, 2, 3], "classif": [1, 2, 3, 19, 23, 45, 46, 52], "mlp": [1, 2, 19, 28, 30, 46, 52], "own": [1, 2, 3], "ssh": [1, 2, 3], "tunnel": [1, 2, 3], "fill": [1, 2, 3], "appropri": [1, 2, 3, 42], "valu": [1, 2, 3, 13, 14, 18, 20, 23], "address": [1, 2, 3], "nl": [1, 2], "8888": [1, 2, 3], "localhost": [1, 2], "allow": [1, 2, 3, 28, 29], "root": [1, 2, 3], "ip": [1, 2, 3], "0": [1, 2, 13, 14, 15, 16, 18, 28, 29, 31, 32, 34, 35, 36, 37, 38, 42], "port": [1, 2, 3], "previous": [1, 3], "virtual": [1, 3], "environ": [1, 3], "mlp_slurm": [1, 3], "comput": [1, 3, 4, 7, 13, 14, 21, 22], "node": [1, 3, 4, 7], "sshuttl": [1, 3], "dn": [1, 3], "nr": [1, 3], "salloc": [1, 3], "account": [1, 3], "bash": [1, 3], "c": [1, 3, 12], "modul": [1, 3, 4, 7, 14, 19, 22, 23, 28, 46], "load": [1, 3, 4, 7, 13, 14, 42], "nvidia": [1, 3, 7], "ctk": [1, 3], "cdi": [1, 3], "gener": [1, 3, 17, 31, 33, 36, 37, 42, 52], "output": [1, 3, 28, 29, 45], "var": [1, 3], "tmp": [1, 3], "mkdir": [1, 3, 4, 7], "p": [1, 3], "slurm_tmpdir": [1, 3, 4, 7], "scratch": [1, 3, 4, 7], "cp": [1, 3], "tar": [1, 3, 4, 7], "xf": [1, 3], "hostnam": [1, 3], "f": [1, 3], "lab": 2, "jupyt": 2, "machin": [3, 53], "below": 4, "full": [4, 24], "cater": 4, "toward": 4, "ubuntu": [4, 6], "maxim": 4, "across": 4, "platform": 4, "util": [4, 13, 14, 15, 16, 19, 46, 47, 52], "technologi": 4, "desir": [4, 5, 13, 14], "clone": [4, 5], "git": [4, 5, 53], "github": [4, 5, 53], "haven": [4, 5], "t": [4, 5, 28, 29, 51, 53], "autosetupremot": [4, 5], "specifi": [4, 5, 34], "u": [4, 5], "origin": [4, 5], "branch_nam": [4, 5], "global": [4, 5], "make": [4, 5, 18, 42, 53], "sure": [4, 5, 53], "least": [4, 5, 19], "37": [4, 5], "take": [4, 5, 7], "advantag": [4, 5], "ppa": [4, 5], "core": [4, 5], "defin": [4, 5, 13, 14], "persist": [4, 5], "variabl": [4, 5, 28, 29], "system": [4, 5], "echo": [4, 5, 7], "nexport": [4, 5], "pwd": [4, 5], "bashrc": [4, 5], "either": [4, 5], "specif": [4, 5], "plan": [4, 5], "contribut": [4, 5, 53], "skip": [4, 5], "offici": [4, 6], "guid": [4, 6], "apr": [4, 6], "2023": [4, 6], "525": [4, 6], "maximilienlc": [4, 6, 7], "dep": [4, 6, 7], "10": [4, 7, 45], "r": [4, 7], "pipreq": [4, 7], "0_experiment_manag": [4, 7], "txt": [4, 7], "set": [4, 7, 13, 14, 15, 16, 18, 53], "up": [4, 7, 18, 53], "storag": [4, 7], "configur": [4, 7, 18, 42], "ndriver": [4, 7], "overlai": [4, 7], "n": [4, 7], "graphroot": [4, 7], "conf": [4, 7], "compress": [4, 7], "cvf": [4, 7], "bolt_stat": [4, 7], "db": [4, 7], "rm": [4, 7], "libpod": [4, 7], "readi": [4, 7], "At": [4, 7], "begin": [4, 7], "job": [4, 7], "hydra": [4, 7, 18, 42, 46], "submitit": [4, 7], "copi": [4, 7, 13, 14], "over": [4, 7], "local": [4, 7, 53], "drive": [4, 7], "decompress": [4, 7], "necessari": [4, 7], "start": [4, 7, 18], "averag": [4, 7], "around": [4, 7], "20": [4, 7], "2": 5, "linux": [5, 53], "slurm": [5, 18, 53], "3": 7, "toolkit": 7, "compon": [8, 46, 48], "logger": [9, 18, 46, 47, 52], "wandb": [9, 10, 46, 47, 52], "wandbloggerconfig": 11, "name": 11, "str": [11, 13, 14, 31, 33, 34, 36, 37, 51], "none": [11, 13, 14, 15, 16, 17, 18, 25, 27, 30, 32, 35, 38, 39, 42], "project": [11, 53], "default": [12, 13, 14], "list": [12, 20, 23, 28, 29, 31, 36], "omegaconf": [12, 18, 42, 46], "dictconfig": [12, 18, 42, 46], "float": [12, 15, 16, 18, 20, 21, 22, 23, 28, 29, 31, 34, 36, 37, 45, 46], "paramet": [12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 28, 29, 30, 31, 33, 34, 36, 37, 42, 45, 46, 51], "descript": 12, "return": [12, 13, 14, 17, 18, 20, 21, 22, 23, 28, 29, 42, 45, 51], "loss": [12, 18, 20, 21, 22, 23], "kei": 12, "basedataset": [13, 14], "val": [13, 14, 15, 16, 21, 22], "test": [13, 14, 15, 16, 21, 22, 25, 27, 30, 32, 35, 38, 39, 47, 50, 52, 53], "predict": [13, 14], "torch": [13, 14, 20, 21, 22, 23, 28, 29, 31, 33, 36, 37, 45, 46], "data": [13, 14, 42], "dataset": [13, 14, 15, 16], "tensor": [13, 14, 20, 21, 22, 23, 28, 29, 45, 46], "basedatamoduleconfig": [13, 14, 15, 16], "data_dir": [13, 14], "path": [13, 14, 17, 18], "per_device_batch_s": [13, 14], "per": [13, 14], "devic": [13, 14], "sampl": [13, 14], "iter": [13, 14, 42], "per_device_num_work": [13, 14], "process": [13, 14, 18, 42], "assign": [13, 14], "device_typ": [13, 14], "gpu": [13, 14, 18, 42], "annot": [13, 14, 15, 16, 19, 41, 46, 47, 50, 52], "int": [13, 14, 21, 22, 24, 28, 29, 42], "beartyp": [13, 14], "vale": [13, 14], "lambda": [13, 14], "x": [13, 14, 18, 28, 29, 45], "basedatamodul": [13, 14, 15, 16, 18], "lightn": [13, 14, 18, 19, 20, 23, 41, 46, 52], "lightningdatamodul": [13, 14, 46], "With": [13, 14], "stage": [13, 14, 15, 16, 21, 22], "children": [13, 14], "properli": [13, 14], "attribut": [13, 14, 20, 23], "dict": [13, 14], "liter": [13, 14, 21, 22], "pin_memori": [13, 14], "whether": [13, 14], "pin": [13, 14], "memori": [13, 14], "bool": [13, 14, 24, 34, 51], "parent": [13, 14, 15, 16, 20, 21, 22, 23, 28, 29, 45], "constructor": [13, 14, 15, 16, 20, 21, 22, 23, 28, 29, 45], "load_state_dict": [13, 14], "state_dict": [13, 14], "batch": [13, 14, 20, 21, 22, 23, 28, 29, 42, 45], "size": [13, 14, 42], "dictionari": [13, 14], "insid": [13, 14], "train_dataload": [13, 14], "dataload": [13, 14], "A": [13, 14, 17, 20, 23, 45], "rais": [13, 14, 20, 23], "attributeerror": [13, 14, 20, 23], "val_dataload": [13, 14], "test_dataload": [13, 14], "predict_dataload": [13, 14], "shuffl": [13, 14], "vision": [14, 19, 46, 52], "mnist_test": [14, 15, 19, 52], "mnistdatamodul": [15, 16, 17], "mnistdatamoduleconfig": [15, 16], "train_val_split": [15, 16], "split": [15, 16], "sum": [15, 16], "tupl": [15, 16, 20, 21, 22, 23], "transform": [15, 16, 18], "torchvis": [15, 16], "compos": [15, 16], "hint": [15, 16], "prepare_data": [15, 16], "setup": [15, 16], "str_fit_test": [15, 16, 40], "fit": [15, 16, 18, 42], "val_percentag": [15, 16], "percentag": [15, 16], "fit_dataset_mean": [15, 16], "fit_dataset_std": [15, 16], "float_gt0_lt1": [15, 16, 40], "1307": [15, 16], "3081": [15, 16], "tmp_path": 17, "pathlib": 17, "test_setup_fit": 17, "test_setup_test": 17, "torch_compile_minimum_cuda_vers": 18, "7": 18, "deep": [18, 19, 41, 46], "learn": [18, 19, 31, 33, 34, 36, 37, 41, 46], "entri": 18, "point": 18, "It": 18, "act": 18, "an": [18, 21, 22, 42], "interfac": 18, "between": 18, "launcher": 18, "sweeper": [18, 42], "trainer": [18, 42, 46], "instanti": [18, 20, 23, 24, 31, 33, 34, 36, 37], "num_nod": 18, "num_gpus_per_nod": 18, "wandblogg": [18, 46], "litmodul": [18, 19, 43, 44, 46, 47, 52], "baselitmodul": [18, 20, 21, 22, 23], "datamodul": [18, 19, 46, 47, 52], "object": [18, 24], "hardwar": 18, "checkpoint": [18, 42], "resum": [18, 24, 42], "applic": [18, 47, 52], "instantiate_lightning_object": 18, "offlin": 18, "mode": 18, "compil": 18, "cuda": 18, "set_batch_size_and_num_work": 18, "hpo": [18, 46], "find": [18, 42], "good": 18, "batch_siz": [18, 21, 22, 28, 29, 42, 45], "num_work": [18, 42], "see": 18, "find_good_batch_s": [18, 42], "find_good_num_work": [18, 42], "more": [18, 19], "detail": 18, "assumpt": [18, 42], "hyper": [18, 46], "optim": [18, 19, 20, 21, 22, 23, 24, 25, 27, 42, 45, 46, 47, 52], "same": [18, 42], "wa": 18, "therefor": 18, "again": 18, "look": 18, "set_checkpoint_path": 18, "three": 18, "case": [18, 28, 29], "consid": 18, "load_path_hpo": 18, "custom": [18, 49, 51], "connector": [18, 42], "overrid": 18, "load_path": 18, "regular": 18, "neither": 18, "nor": 18, "method": [18, 20, 23, 51], "model": [18, 28, 29, 31, 33, 34, 36, 37], "final": 18, "ought": 19, "two": [19, 30], "experi": [19, 46, 47, 52], "lrschedul": [19, 20, 21, 22, 23, 45, 46, 47, 52], "base_test": [19, 26, 36, 46, 52], "none_test": [19, 26, 46, 52], "nnmodul": [19, 20, 21, 22, 23, 45, 46, 47, 52], "mlp_test": [19, 28, 46, 52], "adam": [19, 36, 46, 52], "adam_test": [19, 36, 46, 52], "adamw": [19, 36, 46, 52], "sgd": [19, 36, 46, 52], "sgd_test": [19, 36, 46, 52], "w_test": [19, 36, 46, 52], "fitter": [19, 46, 47, 52], "nn": [20, 21, 22, 23, 28, 29, 45, 46], "optimizer_parti": [20, 21, 22, 23, 45], "functool": [20, 21, 22, 23, 45], "partial": [20, 21, 22, 23, 24, 45], "scheduler_parti": [20, 21, 22, 23, 45], "lr_schedul": [20, 21, 22, 23, 45, 46], "lightningmodul": [20, 23, 46], "subclass": [20, 23], "implement": [20, 23], "schedul": [20, 21, 22, 23, 45], "store": [20, 23, 28, 29], "argument": [20, 23], "training_step": [20, 23], "jaxtyp": [20, 21, 22, 23, 28, 29, 45, 46], "ellipsi": [20, 23, 51], "callabl": [20, 23, 51], "validation_step": [20, 23], "test_step": [20, 23], "configure_optim": [20, 23], "nest": [20, 23], "baseclasssificationlitmodul": [21, 22, 45], "num_class": [21, 22], "accuraci": [21, 22, 45], "metric": [21, 22, 45], "torchmetr": [21, 22, 45], "x_shape": [21, 22], "cross": [21, 22], "entropi": [21, 22], "baselrschedulerconfig": 24, "_partial_": [24, 31, 33, 34, 36, 37], "requir": 24, "last_epoch": [24, 25], "last": 24, "epoch": 24, "class": [25, 27], "mlpconfig": [28, 29], "multi": [28, 29], "layer": [28, 29], "perceptron": [28, 29], "dropout": [28, 29], "probabl": [28, 29], "initi": [28, 29, 42], "forward": [28, 29, 45], "d_input": [28, 29], "output_s": [28, 29], "flatten": [28, 29], "input": [28, 29], "dimens": [28, 29], "isn": [28, 29], "yet": [28, 29], "where": [28, 29], "multidimension": [28, 29], "vector": [28, 29], "dim": [28, 29], "activation_fn": [28, 29], "p_dropout": [28, 29], "mlp_1": 30, "mlp_2": 30, "test_constructor": 30, "differ": [30, 42], "test_forward": 30, "adamconfig": [31, 33, 36], "baseoptimizerconfig": [31, 34, 36, 37], "stabl": [31, 33, 36, 37], "html": [31, 33, 36, 37], "_target_": [31, 33, 34, 36, 37], "lr": [31, 33, 34, 35, 36, 37], "rate": [31, 33, 34, 36, 37], "weight_decai": [31, 33, 34, 35, 36, 37], "l2": [31, 33, 34, 36, 37], "penalti": [31, 33, 34, 36, 37], "beta": [31, 32, 33, 36], "exponenti": [31, 33, 36], "decai": [31, 33, 36], "1st": [31, 33, 36], "2nd": [31, 33, 36], "moment": [31, 33, 36], "estim": [31, 33, 36, 42], "ep": [31, 32, 33, 36], "small": [31, 33, 36, 42], "constant": [31, 33, 36], "numer": [31, 33, 36], "stabil": [31, 33, 36], "classvar": [31, 36], "9": [31, 32, 36], "999": [31, 32, 36], "1e": [31, 32, 36], "08": [31, 32, 36], "adamwconfig": [33, 36], "child": 34, "001": [34, 35], "01": [34, 35, 42], "sgdconfig": [36, 37], "momentum": [36, 37, 38], "alwai": 42, "correct": 42, "reason": 42, "As": 42, "long": 42, "dataset_s": 42, "ratio": 42, "g": 42, "benefit": 42, "stochast": 42, "gradient": 42, "larger": 42, "yield": 42, "faster": 42, "smaller": 42, "disk": 42, "ram": 42, "bottleneck": 42, "vram": 42, "multipl": 42, "roughli": 42, "amount": 42, "proper": 42, "max_num_data_pass": 42, "500": 42, "maximum": 42, "worker": 42, "initoptimparamscheckpointconnector": 42, "checkpoint_connector": 42, "_checkpointconnector": 42, "newli": 42, "pbt": 42, "restore_optim": 42, "restor": 42, "mnist_classif": [43, 46, 47, 52], "mnistclassificationlitmodul": 45, "28": 45, "logit": 45, "abbrevi": 46, "throughout": 46, "misc": 46, "short": 46, "__main__": [46, 47, 52], "deeplearn": [47, 52], "neuroevolut": [47, 52], "int_gt_0": 49, "int_ge_0": 49, "float_gt_0_lt_1": 49, "str_cpu_or_gpu": 49, "str_fit_or_test": 49, "str_per_device_batch_s": 49, "is_decorated_with": 51, "collect": 51, "abc": 51, "string": 51, "decor": 51, "auto": 52, "sphinx": 52, "autoapi": 52, "under": 53, "develop": 53, "cluster": 53, "code": 53, "doesn": 53, "break": 53, "vscode": 53, "workflow": 53, "freez": 53, "repositori": 53, "public": 53, "api": 53, "refer": 53}, "objects": {"": [[47, 0, 0, "-", "cneuromax"]], "cneuromax": [[8, 0, 0, "-", "application"], [9, 0, 0, "-", "common"], [46, 0, 0, "-", "deeplearning"], [48, 0, 0, "-", "neuroevolution"], [50, 0, 0, "-", "utils"]], "cneuromax.common": [[10, 0, 0, "-", "logger"]], "cneuromax.common.logger": [[11, 0, 0, "-", "wandb"]], "cneuromax.common.logger.wandb": [[11, 1, 1, "", "WandbLoggerConfig"]], "cneuromax.common.logger.wandb.WandbLoggerConfig": [[11, 2, 1, "", "name"], [11, 2, 1, "", "project"]], "cneuromax.deeplearning": [[12, 0, 0, "-", "__main__"], [19, 0, 0, "-", "common"], [43, 0, 0, "-", "experiment"]], "cneuromax.deeplearning.__main__": [[12, 1, 1, "", "Config"], [12, 3, 1, "", "cs"], [12, 3, 1, "", "key"], [12, 4, 1, "", "run"]], "cneuromax.deeplearning.__main__.Config": [[12, 2, 1, "", "defaults"]], "cneuromax.deeplearning.common": [[14, 0, 0, "-", "datamodule"], [18, 0, 0, "-", "fitter"], [23, 0, 0, "-", "litmodule"], [26, 0, 0, "-", "lrscheduler"], [28, 0, 0, "-", "nnmodule"], [36, 0, 0, "-", "optimizer"], [41, 0, 0, "-", "utils"]], "cneuromax.deeplearning.common.datamodule": [[14, 1, 1, "", "BaseDataModule"], [14, 1, 1, "", "BaseDataModuleConfig"], [14, 1, 1, "", "BaseDataset"], [13, 0, 0, "-", "base"], [15, 0, 0, "-", "vision"]], "cneuromax.deeplearning.common.datamodule.BaseDataModule": [[14, 2, 1, "", "config"], [14, 5, 1, "", "load_state_dict"], [14, 2, 1, "", "pin_memory"], [14, 5, 1, "", "predict_dataloader"], [14, 5, 1, "", "state_dict"], [14, 5, 1, "", "test_dataloader"], [14, 5, 1, "", "train_dataloader"], [14, 5, 1, "", "val_dataloader"]], "cneuromax.deeplearning.common.datamodule.BaseDataModuleConfig": [[14, 2, 1, "id0", "data_dir"], [14, 2, 1, "id3", "device_type"], [14, 2, 1, "id1", "per_device_batch_size"], [14, 2, 1, "id2", "per_device_num_workers"]], "cneuromax.deeplearning.common.datamodule.BaseDataset": [[14, 2, 1, "id7", "predict"], [14, 2, 1, "id6", "test"], [14, 2, 1, "id4", "train"], [14, 2, 1, "id5", "val"]], "cneuromax.deeplearning.common.datamodule.base": [[13, 1, 1, "", "BaseDataModule"], [13, 1, 1, "", "BaseDataModuleConfig"], [13, 1, 1, "", "BaseDataset"]], "cneuromax.deeplearning.common.datamodule.base.BaseDataModule": [[13, 2, 1, "", "config"], [13, 5, 1, "", "load_state_dict"], [13, 2, 1, "", "pin_memory"], [13, 5, 1, "", "predict_dataloader"], [13, 5, 1, "", "state_dict"], [13, 5, 1, "", "test_dataloader"], [13, 5, 1, "", "train_dataloader"], [13, 5, 1, "", "val_dataloader"]], "cneuromax.deeplearning.common.datamodule.base.BaseDataModuleConfig": [[13, 2, 1, "id4", "data_dir"], [13, 2, 1, "id7", "device_type"], [13, 2, 1, "id5", "per_device_batch_size"], [13, 2, 1, "id6", "per_device_num_workers"]], "cneuromax.deeplearning.common.datamodule.base.BaseDataset": [[13, 2, 1, "id3", "predict"], [13, 2, 1, "id2", "test"], [13, 2, 1, "id0", "train"], [13, 2, 1, "id1", "val"]], "cneuromax.deeplearning.common.datamodule.vision": [[15, 1, 1, "", "MNISTDataModule"], [15, 1, 1, "", "MNISTDataModuleConfig"], [16, 0, 0, "-", "mnist"], [17, 0, 0, "-", "mnist_test"]], "cneuromax.deeplearning.common.datamodule.vision.MNISTDataModule": [[15, 5, 1, "", "prepare_data"], [15, 5, 1, "", "setup"], [15, 2, 1, "", "train_val_split"], [15, 2, 1, "", "transform"]], "cneuromax.deeplearning.common.datamodule.vision.MNISTDataModuleConfig": [[15, 2, 1, "id1", "fit_dataset_mean"], [15, 2, 1, "id2", "fit_dataset_std"], [15, 2, 1, "id0", "val_percentage"]], "cneuromax.deeplearning.common.datamodule.vision.mnist": [[16, 1, 1, "", "MNISTDataModule"], [16, 1, 1, "", "MNISTDataModuleConfig"]], "cneuromax.deeplearning.common.datamodule.vision.mnist.MNISTDataModule": [[16, 5, 1, "", "prepare_data"], [16, 5, 1, "", "setup"], [16, 2, 1, "", "train_val_split"], [16, 2, 1, "", "transform"]], "cneuromax.deeplearning.common.datamodule.vision.mnist.MNISTDataModuleConfig": [[16, 2, 1, "id1", "fit_dataset_mean"], [16, 2, 1, "id2", "fit_dataset_std"], [16, 2, 1, "id0", "val_percentage"]], "cneuromax.deeplearning.common.datamodule.vision.mnist_test": [[17, 4, 1, "", "datamodule"], [17, 4, 1, "", "test_setup_fit"], [17, 4, 1, "", "test_setup_test"]], "cneuromax.deeplearning.common.fitter": [[18, 1, 1, "", "Fitter"], [18, 3, 1, "", "TORCH_COMPILE_MINIMUM_CUDA_VERSION"]], "cneuromax.deeplearning.common.fitter.Fitter": [[18, 2, 1, "", "config"], [18, 2, 1, "", "datamodule"], [18, 5, 1, "", "fit"], [18, 5, 1, "", "instantiate_lightning_objects"], [18, 2, 1, "", "litmodule"], [18, 2, 1, "", "logger"], [18, 5, 1, "", "set_batch_size_and_num_workers"], [18, 5, 1, "", "set_checkpoint_path"], [18, 2, 1, "", "trainer"]], "cneuromax.deeplearning.common.litmodule": [[23, 1, 1, "", "BaseLitModule"], [20, 0, 0, "-", "base"], [22, 0, 0, "-", "classification"]], "cneuromax.deeplearning.common.litmodule.BaseLitModule": [[23, 5, 1, "", "configure_optimizers"], [23, 2, 1, "", "nnmodule"], [23, 2, 1, "", "optimizer"], [23, 2, 1, "", "scheduler"], [23, 5, 1, "", "test_step"], [23, 5, 1, "", "training_step"], [23, 5, 1, "", "validation_step"]], "cneuromax.deeplearning.common.litmodule.base": [[20, 1, 1, "", "BaseLitModule"]], "cneuromax.deeplearning.common.litmodule.base.BaseLitModule": [[20, 5, 1, "", "configure_optimizers"], [20, 2, 1, "", "nnmodule"], [20, 2, 1, "", "optimizer"], [20, 2, 1, "", "scheduler"], [20, 5, 1, "", "test_step"], [20, 5, 1, "", "training_step"], [20, 5, 1, "", "validation_step"]], "cneuromax.deeplearning.common.litmodule.classification": [[22, 1, 1, "", "BaseClasssificationLitModule"], [21, 0, 0, "-", "base"]], "cneuromax.deeplearning.common.litmodule.classification.BaseClasssificationLitModule": [[22, 2, 1, "", "accuracy"], [22, 2, 1, "", "nnmodule"], [22, 2, 1, "", "optimizer"], [22, 2, 1, "", "scheduler"], [22, 5, 1, "", "step"]], "cneuromax.deeplearning.common.litmodule.classification.base": [[21, 1, 1, "", "BaseClasssificationLitModule"]], "cneuromax.deeplearning.common.litmodule.classification.base.BaseClasssificationLitModule": [[21, 2, 1, "", "accuracy"], [21, 2, 1, "", "nnmodule"], [21, 2, 1, "", "optimizer"], [21, 2, 1, "", "scheduler"], [21, 5, 1, "", "step"]], "cneuromax.deeplearning.common.lrscheduler": [[24, 0, 0, "-", "base"], [25, 0, 0, "-", "base_test"], [27, 0, 0, "-", "none_test"]], "cneuromax.deeplearning.common.lrscheduler.base": [[24, 1, 1, "", "BaseLRSchedulerConfig"]], "cneuromax.deeplearning.common.lrscheduler.base.BaseLRSchedulerConfig": [[24, 2, 1, "id0", "_partial_"], [24, 2, 1, "id1", "last_epoch"]], "cneuromax.deeplearning.common.lrscheduler.base_test": [[25, 3, 1, "", "LAST_EPOCH"], [25, 4, 1, "", "test"]], "cneuromax.deeplearning.common.lrscheduler.none_test": [[27, 4, 1, "", "test"]], "cneuromax.deeplearning.common.nnmodule": [[28, 1, 1, "", "MLP"], [28, 1, 1, "", "MLPConfig"], [29, 0, 0, "-", "mlp"], [30, 0, 0, "-", "mlp_test"]], "cneuromax.deeplearning.common.nnmodule.MLP": [[28, 2, 1, "", "config"], [28, 5, 1, "", "forward"], [28, 2, 1, "", "model"]], "cneuromax.deeplearning.common.nnmodule.MLPConfig": [[28, 2, 1, "id1", "activation_fn"], [28, 2, 1, "id0", "dims"], [28, 2, 1, "id2", "p_dropout"]], "cneuromax.deeplearning.common.nnmodule.mlp": [[29, 1, 1, "", "MLP"], [29, 1, 1, "", "MLPConfig"]], "cneuromax.deeplearning.common.nnmodule.mlp.MLP": [[29, 2, 1, "", "config"], [29, 5, 1, "", "forward"], [29, 2, 1, "", "model"]], "cneuromax.deeplearning.common.nnmodule.mlp.MLPConfig": [[29, 2, 1, "id1", "activation_fn"], [29, 2, 1, "id0", "dims"], [29, 2, 1, "id2", "p_dropout"]], "cneuromax.deeplearning.common.nnmodule.mlp_test": [[30, 4, 1, "", "mlp_1"], [30, 4, 1, "", "mlp_2"], [30, 4, 1, "", "test_constructor"], [30, 4, 1, "", "test_forward"]], "cneuromax.deeplearning.common.optimizer": [[36, 1, 1, "", "AdamConfig"], [36, 1, 1, "", "AdamWConfig"], [36, 1, 1, "", "SGDConfig"], [31, 0, 0, "-", "adam"], [32, 0, 0, "-", "adam_test"], [33, 0, 0, "-", "adamw"], [34, 0, 0, "-", "base"], [35, 0, 0, "-", "base_test"], [37, 0, 0, "-", "sgd"], [38, 0, 0, "-", "sgd_test"], [39, 0, 0, "-", "w_test"]], "cneuromax.deeplearning.common.optimizer.AdamConfig": [[36, 2, 1, "", "_partial_"], [36, 2, 1, "id0", "_target_"], [36, 2, 1, "id1", "betas"], [36, 2, 1, "id2", "eps"], [36, 2, 1, "", "lr"], [36, 2, 1, "", "weight_decay"]], "cneuromax.deeplearning.common.optimizer.AdamWConfig": [[36, 2, 1, "", "_partial_"], [36, 2, 1, "id3", "_target_"], [36, 2, 1, "", "betas"], [36, 2, 1, "", "eps"], [36, 2, 1, "", "lr"], [36, 2, 1, "", "weight_decay"]], "cneuromax.deeplearning.common.optimizer.SGDConfig": [[36, 2, 1, "", "_partial_"], [36, 2, 1, "id4", "_target_"], [36, 2, 1, "", "lr"], [36, 2, 1, "id5", "momentum"], [36, 2, 1, "", "weight_decay"]], "cneuromax.deeplearning.common.optimizer.adam": [[31, 1, 1, "", "AdamConfig"]], "cneuromax.deeplearning.common.optimizer.adam.AdamConfig": [[31, 2, 1, "", "_partial_"], [31, 2, 1, "id0", "_target_"], [31, 2, 1, "id1", "betas"], [31, 2, 1, "id2", "eps"], [31, 2, 1, "", "lr"], [31, 2, 1, "", "weight_decay"]], "cneuromax.deeplearning.common.optimizer.adam_test": [[32, 3, 1, "", "BETAS"], [32, 3, 1, "", "EPS"], [32, 4, 1, "", "test"]], "cneuromax.deeplearning.common.optimizer.adamw": [[33, 1, 1, "", "AdamWConfig"]], "cneuromax.deeplearning.common.optimizer.adamw.AdamWConfig": [[33, 2, 1, "", "_partial_"], [33, 2, 1, "id0", "_target_"], [33, 2, 1, "", "betas"], [33, 2, 1, "", "eps"], [33, 2, 1, "", "lr"], [33, 2, 1, "", "weight_decay"]], "cneuromax.deeplearning.common.optimizer.base": [[34, 1, 1, "", "BaseOptimizerConfig"]], "cneuromax.deeplearning.common.optimizer.base.BaseOptimizerConfig": [[34, 2, 1, "id1", "_partial_"], [34, 2, 1, "id0", "_target_"], [34, 2, 1, "id2", "lr"], [34, 2, 1, "id3", "weight_decay"]], "cneuromax.deeplearning.common.optimizer.base_test": [[35, 3, 1, "", "LR"], [35, 3, 1, "", "WEIGHT_DECAY"], [35, 4, 1, "", "test"]], "cneuromax.deeplearning.common.optimizer.sgd": [[37, 1, 1, "", "SGDConfig"]], "cneuromax.deeplearning.common.optimizer.sgd.SGDConfig": [[37, 2, 1, "", "_partial_"], [37, 2, 1, "id0", "_target_"], [37, 2, 1, "", "lr"], [37, 2, 1, "id1", "momentum"], [37, 2, 1, "", "weight_decay"]], "cneuromax.deeplearning.common.optimizer.sgd_test": [[38, 3, 1, "", "MOMENTUM"], [38, 4, 1, "", "test"]], "cneuromax.deeplearning.common.optimizer.w_test": [[39, 4, 1, "", "test"]], "cneuromax.deeplearning.common.utils": [[40, 0, 0, "-", "annotations"], [42, 0, 0, "-", "lightning"]], "cneuromax.deeplearning.common.utils.annotations": [[40, 3, 1, "", "float_gt0_lt1"], [40, 3, 1, "", "str_fit_test"]], "cneuromax.deeplearning.common.utils.lightning": [[42, 1, 1, "", "InitOptimParamsCheckpointConnector"], [42, 4, 1, "", "find_good_batch_size"], [42, 4, 1, "", "find_good_num_workers"]], "cneuromax.deeplearning.common.utils.lightning.InitOptimParamsCheckpointConnector": [[42, 5, 1, "", "restore_optimizers"], [42, 2, 1, "", "trainer"]], "cneuromax.deeplearning.experiment": [[44, 0, 0, "-", "mnist_classification"]], "cneuromax.deeplearning.experiment.mnist_classification": [[45, 0, 0, "-", "litmodule"]], "cneuromax.deeplearning.experiment.mnist_classification.litmodule": [[45, 1, 1, "", "MNISTClassificationLitModule"]], "cneuromax.deeplearning.experiment.mnist_classification.litmodule.MNISTClassificationLitModule": [[45, 2, 1, "", "accuracy"], [45, 5, 1, "", "forward"], [45, 2, 1, "", "nnmodule"], [45, 2, 1, "", "optimizer"], [45, 2, 1, "", "scheduler"]], "cneuromax.utils": [[49, 0, 0, "-", "annotations"], [51, 0, 0, "-", "test"]], "cneuromax.utils.annotations": [[49, 3, 1, "", "float_gt_0_lt_1"], [49, 3, 1, "", "int_ge_0"], [49, 3, 1, "", "int_gt_0"], [49, 3, 1, "", "str_cpu_or_gpu"], [49, 3, 1, "", "str_fit_or_test"], [49, 3, 1, "", "str_per_device_batch_size"]], "cneuromax.utils.test": [[51, 3, 1, "", "T"], [51, 4, 1, "", "is_decorated_with"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:data", "4": "py:function", "5": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "data", "Python data"], "4": ["py", "function", "Python function"], "5": ["py", "method", "Python method"]}, "titleterms": {"contribut": 0, "develop": 0, "local": 0, "make": 0, "sure": 0, "code": 0, "doesn": 0, "t": 0, "break": 0, "test": [0, 51], "set": 0, "up": 0, "vscode": 0, "git": 0, "github": 0, "workflow": 0, "freez": 0, "repositori": [0, 4, 5], "public": 0, "execut": 1, "On": [1, 2, 3, 4, 6, 7], "linux": [1, 2, 4, 6], "machin": [1, 2, 4, 5, 6], "run": [1, 2, 3], "python": [1, 2, 3], "script": [1, 2, 3], "notebook": [1, 2], "slurm": [1, 3, 4, 7], "cluster": [1, 3, 4, 7], "jupyt": [1, 3], "lab": [1, 3], "instal": [4, 6, 7], "common": [4, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "all": [4, 5], "1": [4, 5, 6, 7], "setup": [4, 5], "nvidia": [4, 6], "driver": [4, 6], "2": [4, 6, 7], "podman": [4, 6, 7], "3": [4, 6], "contain": [4, 6], "toolkit": [4, 6], "4": [4, 6], "pull": [4, 6], "imag": [4, 6, 7], "experi": [4, 7, 43, 44, 45], "manag": [4, 7], "packag": [4, 7, 14, 15, 22, 23, 28, 36], "prepar": [4, 7], "us": [4, 7], "cneuromax": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53], "applic": 8, "subpackag": [9, 14, 19, 23, 43, 46, 47], "logger": [10, 11], "submodul": [10, 14, 15, 19, 22, 23, 26, 28, 36, 41, 44, 46, 50], "wandb": 11, "modul": [11, 12, 13, 16, 17, 18, 20, 21, 24, 25, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 42, 45, 49, 51], "content": [11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 45, 49, 51, 53], "class": [11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 28, 29, 31, 33, 34, 36, 37, 42, 45], "deeplearn": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46], "__main__": 12, "function": [12, 17, 25, 27, 30, 32, 35, 38, 39, 42, 51], "attribut": [12, 18, 25, 32, 35, 38, 51], "datamodul": [13, 14, 15, 16, 17], "base": [13, 20, 21, 24, 34], "vision": [15, 16, 17], "mnist": 16, "mnist_test": 17, "fitter": 18, "litmodul": [20, 21, 22, 23, 45], "classif": [21, 22], "lrschedul": [24, 25, 26, 27], "base_test": [25, 35], "none_test": 27, "nnmodul": [28, 29, 30], "mlp": 29, "mlp_test": 30, "optim": [31, 32, 33, 34, 35, 36, 37, 38, 39], "adam": 31, "adam_test": 32, "adamw": 33, "sgd": 37, "sgd_test": 38, "w_test": 39, "util": [40, 41, 42, 49, 50, 51], "annot": [40, 49], "lightn": 42, "mnist_classif": [44, 45], "neuroevolut": 48, "api": 52, "refer": 52, "welcom": 53, "document": 53}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Contribution": [[0, "contribution"]], "Developping locally": [[0, "developping-locally"]], "Making sure the code doesn\u2019t break": [[0, "making-sure-the-code-doesn-t-break"]], "Testing locally": [[0, "testing-locally"]], "Setting up VSCode": [[0, "setting-up-vscode"]], "Git/GitHub workflow for contributing": [[0, "git-github-workflow-for-contributing"]], "Freezing the repositories for publication": [[0, "freezing-the-repositories-for-publication"]], "Execution": [[1, "execution"]], "On a Linux machine": [[1, "on-a-linux-machine"], [2, "on-a-linux-machine"], [4, "on-a-linux-machine"], [6, "on-a-linux-machine"]], "Run a python script": [[1, "run-a-python-script"], [1, "id1"], [2, "run-a-python-script"], [3, "run-a-python-script"]], "Run a notebook": [[1, "run-a-notebook"], [2, "run-a-notebook"]], "On a Slurm cluster": [[1, "on-a-slurm-cluster"], [3, "on-a-slurm-cluster"], [4, "on-a-slurm-cluster"], [7, "on-a-slurm-cluster"]], "Run Jupyter-lab": [[1, "run-jupyter-lab"], [3, "run-jupyter-lab"]], "Installation": [[4, "installation"]], "Common to all machines": [[4, "common-to-all-machines"], [5, "common-to-all-machines"]], "1. Setup the repository": [[4, "setup-the-repository"], [5, "setup-the-repository"]], "1. Install the NVIDIA driver": [[4, "install-the-nvidia-driver"], [6, "install-the-nvidia-driver"]], "2. Install Podman": [[4, "install-podman"], [6, "install-podman"]], "3. Install the NVIDIA Container Toolkit": [[4, "install-the-nvidia-container-toolkit"], [6, "install-the-nvidia-container-toolkit"]], "4. Pull the Podman image": [[4, "pull-the-podman-image"], [6, "pull-the-podman-image"]], "1. Install the experiment manager packages": [[4, "install-the-experiment-manager-packages"], [7, "install-the-experiment-manager-packages"]], "2. Prepare the Podman image for use on the cluster": [[4, "prepare-the-podman-image-for-use-on-the-cluster"], [7, "prepare-the-podman-image-for-use-on-the-cluster"]], "cneuromax.application": [[8, "module-cneuromax.application"]], "cneuromax.common": [[9, "module-cneuromax.common"]], "Subpackages": [[9, "subpackages"], [14, "subpackages"], [19, "subpackages"], [23, "subpackages"], [43, "subpackages"], [46, "subpackages"], [47, "subpackages"]], "cneuromax.common.logger": [[10, "module-cneuromax.common.logger"]], "Submodules": [[10, "submodules"], [14, "submodules"], [15, "submodules"], [19, "submodules"], [22, "submodules"], [23, "submodules"], [26, "submodules"], [28, "submodules"], [36, "submodules"], [41, "submodules"], [44, "submodules"], [46, "submodules"], [50, "submodules"]], "cneuromax.common.logger.wandb": [[11, "module-cneuromax.common.logger.wandb"]], "Module Contents": [[11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [20, "module-contents"], [21, "module-contents"], [24, "module-contents"], [25, "module-contents"], [27, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [33, "module-contents"], [34, "module-contents"], [35, "module-contents"], [37, "module-contents"], [38, "module-contents"], [39, "module-contents"], [40, "module-contents"], [42, "module-contents"], [45, "module-contents"], [49, "module-contents"], [51, "module-contents"]], "Classes": [[11, "classes"], [12, "classes"], [13, "classes"], [14, "classes"], [15, "classes"], [16, "classes"], [18, "classes"], [20, "classes"], [21, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [28, "classes"], [29, "classes"], [31, "classes"], [33, "classes"], [34, "classes"], [36, "classes"], [37, "classes"], [42, "classes"], [45, "classes"]], "cneuromax.deeplearning.__main__": [[12, "module-cneuromax.deeplearning.__main__"]], "Functions": [[12, "functions"], [17, "functions"], [25, "functions"], [27, "functions"], [30, "functions"], [32, "functions"], [35, "functions"], [38, "functions"], [39, "functions"], [42, "functions"], [51, "functions"]], "Attributes": [[12, "attributes"], [18, "attributes"], [25, "attributes"], [32, "attributes"], [35, "attributes"], [38, "attributes"], [51, "attributes"]], "cneuromax.deeplearning.common.datamodule.base": [[13, "module-cneuromax.deeplearning.common.datamodule.base"]], "cneuromax.deeplearning.common.datamodule": [[14, "module-cneuromax.deeplearning.common.datamodule"]], "Package Contents": [[14, "package-contents"], [15, "package-contents"], [22, "package-contents"], [23, "package-contents"], [28, "package-contents"], [36, "package-contents"]], "cneuromax.deeplearning.common.datamodule.vision": [[15, "module-cneuromax.deeplearning.common.datamodule.vision"]], "cneuromax.deeplearning.common.datamodule.vision.mnist": [[16, "module-cneuromax.deeplearning.common.datamodule.vision.mnist"]], "cneuromax.deeplearning.common.datamodule.vision.mnist_test": [[17, "module-cneuromax.deeplearning.common.datamodule.vision.mnist_test"]], "cneuromax.deeplearning.common.fitter": [[18, "module-cneuromax.deeplearning.common.fitter"]], "cneuromax.deeplearning.common": [[19, "module-cneuromax.deeplearning.common"]], "cneuromax.deeplearning.common.litmodule.base": [[20, "module-cneuromax.deeplearning.common.litmodule.base"]], "cneuromax.deeplearning.common.litmodule.classification.base": [[21, "module-cneuromax.deeplearning.common.litmodule.classification.base"]], "cneuromax.deeplearning.common.litmodule.classification": [[22, "module-cneuromax.deeplearning.common.litmodule.classification"]], "cneuromax.deeplearning.common.litmodule": [[23, "module-cneuromax.deeplearning.common.litmodule"]], "cneuromax.deeplearning.common.lrscheduler.base": [[24, "module-cneuromax.deeplearning.common.lrscheduler.base"]], "cneuromax.deeplearning.common.lrscheduler.base_test": [[25, "module-cneuromax.deeplearning.common.lrscheduler.base_test"]], "cneuromax.deeplearning.common.lrscheduler": [[26, "module-cneuromax.deeplearning.common.lrscheduler"]], "cneuromax.deeplearning.common.lrscheduler.none_test": [[27, "module-cneuromax.deeplearning.common.lrscheduler.none_test"]], "cneuromax.deeplearning.common.nnmodule": [[28, "module-cneuromax.deeplearning.common.nnmodule"]], "cneuromax.deeplearning.common.nnmodule.mlp": [[29, "module-cneuromax.deeplearning.common.nnmodule.mlp"]], "cneuromax.deeplearning.common.nnmodule.mlp_test": [[30, "module-cneuromax.deeplearning.common.nnmodule.mlp_test"]], "cneuromax.deeplearning.common.optimizer.adam": [[31, "module-cneuromax.deeplearning.common.optimizer.adam"]], "cneuromax.deeplearning.common.optimizer.adam_test": [[32, "module-cneuromax.deeplearning.common.optimizer.adam_test"]], "cneuromax.deeplearning.common.optimizer.adamw": [[33, "module-cneuromax.deeplearning.common.optimizer.adamw"]], "cneuromax.deeplearning.common.optimizer.base": [[34, "module-cneuromax.deeplearning.common.optimizer.base"]], "cneuromax.deeplearning.common.optimizer.base_test": [[35, "module-cneuromax.deeplearning.common.optimizer.base_test"]], "cneuromax.deeplearning.common.optimizer": [[36, "module-cneuromax.deeplearning.common.optimizer"]], "cneuromax.deeplearning.common.optimizer.sgd": [[37, "module-cneuromax.deeplearning.common.optimizer.sgd"]], "cneuromax.deeplearning.common.optimizer.sgd_test": [[38, "module-cneuromax.deeplearning.common.optimizer.sgd_test"]], "cneuromax.deeplearning.common.optimizer.w_test": [[39, "module-cneuromax.deeplearning.common.optimizer.w_test"]], "cneuromax.deeplearning.common.utils.annotations": [[40, "module-cneuromax.deeplearning.common.utils.annotations"]], "cneuromax.deeplearning.common.utils": [[41, "module-cneuromax.deeplearning.common.utils"]], "cneuromax.deeplearning.common.utils.lightning": [[42, "module-cneuromax.deeplearning.common.utils.lightning"]], "cneuromax.deeplearning.experiment": [[43, "module-cneuromax.deeplearning.experiment"]], "cneuromax.deeplearning.experiment.mnist_classification": [[44, "module-cneuromax.deeplearning.experiment.mnist_classification"]], "cneuromax.deeplearning.experiment.mnist_classification.litmodule": [[45, "module-cneuromax.deeplearning.experiment.mnist_classification.litmodule"]], "cneuromax.deeplearning": [[46, "module-cneuromax.deeplearning"]], "cneuromax": [[47, "module-cneuromax"]], "cneuromax.neuroevolution": [[48, "module-cneuromax.neuroevolution"]], "cneuromax.utils.annotations": [[49, "module-cneuromax.utils.annotations"]], "cneuromax.utils": [[50, "module-cneuromax.utils"]], "cneuromax.utils.test": [[51, "module-cneuromax.utils.test"]], "API Reference": [[52, "api-reference"]], "Welcome to the cneuromax documentation!": [[53, "welcome-to-the-cneuromax-documentation"]], "Contents": [[53, "contents"]]}, "indexentries": {"cneuromax.application": [[8, "module-cneuromax.application"]], "module": [[8, "module-cneuromax.application"], [9, "module-cneuromax.common"], [10, "module-cneuromax.common.logger"], [11, "module-cneuromax.common.logger.wandb"], [12, "module-cneuromax.deeplearning.__main__"], [13, "module-cneuromax.deeplearning.common.datamodule.base"], [14, "module-cneuromax.deeplearning.common.datamodule"], [15, "module-cneuromax.deeplearning.common.datamodule.vision"], [16, "module-cneuromax.deeplearning.common.datamodule.vision.mnist"], [17, "module-cneuromax.deeplearning.common.datamodule.vision.mnist_test"], [18, "module-cneuromax.deeplearning.common.fitter"], [19, "module-cneuromax.deeplearning.common"], [20, "module-cneuromax.deeplearning.common.litmodule.base"], [21, "module-cneuromax.deeplearning.common.litmodule.classification.base"], [22, "module-cneuromax.deeplearning.common.litmodule.classification"], [23, "module-cneuromax.deeplearning.common.litmodule"], [24, "module-cneuromax.deeplearning.common.lrscheduler.base"], [25, "module-cneuromax.deeplearning.common.lrscheduler.base_test"], [26, "module-cneuromax.deeplearning.common.lrscheduler"], [27, "module-cneuromax.deeplearning.common.lrscheduler.none_test"], [28, "module-cneuromax.deeplearning.common.nnmodule"], [29, "module-cneuromax.deeplearning.common.nnmodule.mlp"], [30, "module-cneuromax.deeplearning.common.nnmodule.mlp_test"], [31, "module-cneuromax.deeplearning.common.optimizer.adam"], [32, "module-cneuromax.deeplearning.common.optimizer.adam_test"], [33, "module-cneuromax.deeplearning.common.optimizer.adamw"], [34, "module-cneuromax.deeplearning.common.optimizer.base"], [35, "module-cneuromax.deeplearning.common.optimizer.base_test"], [36, "module-cneuromax.deeplearning.common.optimizer"], [37, "module-cneuromax.deeplearning.common.optimizer.sgd"], [38, "module-cneuromax.deeplearning.common.optimizer.sgd_test"], [39, "module-cneuromax.deeplearning.common.optimizer.w_test"], [40, "module-cneuromax.deeplearning.common.utils.annotations"], [41, "module-cneuromax.deeplearning.common.utils"], [42, "module-cneuromax.deeplearning.common.utils.lightning"], [43, "module-cneuromax.deeplearning.experiment"], [44, "module-cneuromax.deeplearning.experiment.mnist_classification"], [45, "module-cneuromax.deeplearning.experiment.mnist_classification.litmodule"], [46, "module-cneuromax.deeplearning"], [47, "module-cneuromax"], [48, "module-cneuromax.neuroevolution"], [49, "module-cneuromax.utils.annotations"], [50, "module-cneuromax.utils"], [51, "module-cneuromax.utils.test"]], "cneuromax.common": [[9, "module-cneuromax.common"]], "cneuromax.common.logger": [[10, "module-cneuromax.common.logger"]], "wandbloggerconfig (class in cneuromax.common.logger.wandb)": [[11, "cneuromax.common.logger.wandb.WandbLoggerConfig"]], "cneuromax.common.logger.wandb": [[11, "module-cneuromax.common.logger.wandb"]], "name (cneuromax.common.logger.wandb.wandbloggerconfig attribute)": [[11, "cneuromax.common.logger.wandb.WandbLoggerConfig.name"]], "project (cneuromax.common.logger.wandb.wandbloggerconfig attribute)": [[11, "cneuromax.common.logger.wandb.WandbLoggerConfig.project"]], "config (class in cneuromax.deeplearning.__main__)": [[12, "cneuromax.deeplearning.__main__.Config"]], "cneuromax.deeplearning.__main__": [[12, "module-cneuromax.deeplearning.__main__"]], "cs (in module cneuromax.deeplearning.__main__)": [[12, "cneuromax.deeplearning.__main__.cs"]], "defaults (cneuromax.deeplearning.__main__.config attribute)": [[12, "cneuromax.deeplearning.__main__.Config.defaults"]], "key (in module cneuromax.deeplearning.__main__)": [[12, "cneuromax.deeplearning.__main__.key"]], "run() (in module cneuromax.deeplearning.__main__)": [[12, "cneuromax.deeplearning.__main__.run"]], "basedatamodule (class in cneuromax.deeplearning.common.datamodule.base)": [[13, "cneuromax.deeplearning.common.datamodule.base.BaseDataModule"]], "basedatamoduleconfig (class in cneuromax.deeplearning.common.datamodule.base)": [[13, "cneuromax.deeplearning.common.datamodule.base.BaseDataModuleConfig"]], "basedataset (class in cneuromax.deeplearning.common.datamodule.base)": [[13, "cneuromax.deeplearning.common.datamodule.base.BaseDataset"]], "cneuromax.deeplearning.common.datamodule.base": [[13, "module-cneuromax.deeplearning.common.datamodule.base"]], "config (cneuromax.deeplearning.common.datamodule.base.basedatamodule attribute)": [[13, "cneuromax.deeplearning.common.datamodule.base.BaseDataModule.config"]], "data_dir (cneuromax.deeplearning.common.datamodule.base.basedatamoduleconfig attribute)": [[13, "cneuromax.deeplearning.common.datamodule.base.BaseDataModuleConfig.data_dir"], [13, "id4"]], "device_type (cneuromax.deeplearning.common.datamodule.base.basedatamoduleconfig attribute)": [[13, "cneuromax.deeplearning.common.datamodule.base.BaseDataModuleConfig.device_type"], [13, "id7"]], "load_state_dict() (cneuromax.deeplearning.common.datamodule.base.basedatamodule method)": [[13, "cneuromax.deeplearning.common.datamodule.base.BaseDataModule.load_state_dict"]], "per_device_batch_size (cneuromax.deeplearning.common.datamodule.base.basedatamoduleconfig attribute)": [[13, "cneuromax.deeplearning.common.datamodule.base.BaseDataModuleConfig.per_device_batch_size"], [13, "id5"]], "per_device_num_workers (cneuromax.deeplearning.common.datamodule.base.basedatamoduleconfig attribute)": [[13, "cneuromax.deeplearning.common.datamodule.base.BaseDataModuleConfig.per_device_num_workers"], [13, "id6"]], "pin_memory (cneuromax.deeplearning.common.datamodule.base.basedatamodule attribute)": [[13, "cneuromax.deeplearning.common.datamodule.base.BaseDataModule.pin_memory"]], "predict (cneuromax.deeplearning.common.datamodule.base.basedataset attribute)": [[13, "cneuromax.deeplearning.common.datamodule.base.BaseDataset.predict"], [13, "id3"]], "predict_dataloader() (cneuromax.deeplearning.common.datamodule.base.basedatamodule method)": [[13, "cneuromax.deeplearning.common.datamodule.base.BaseDataModule.predict_dataloader"]], "state_dict() (cneuromax.deeplearning.common.datamodule.base.basedatamodule method)": [[13, "cneuromax.deeplearning.common.datamodule.base.BaseDataModule.state_dict"]], "test (cneuromax.deeplearning.common.datamodule.base.basedataset attribute)": [[13, "cneuromax.deeplearning.common.datamodule.base.BaseDataset.test"], [13, "id2"]], "test_dataloader() (cneuromax.deeplearning.common.datamodule.base.basedatamodule method)": [[13, "cneuromax.deeplearning.common.datamodule.base.BaseDataModule.test_dataloader"]], "train (cneuromax.deeplearning.common.datamodule.base.basedataset attribute)": [[13, "cneuromax.deeplearning.common.datamodule.base.BaseDataset.train"], [13, "id0"]], "train_dataloader() (cneuromax.deeplearning.common.datamodule.base.basedatamodule method)": [[13, "cneuromax.deeplearning.common.datamodule.base.BaseDataModule.train_dataloader"]], "val (cneuromax.deeplearning.common.datamodule.base.basedataset attribute)": [[13, "cneuromax.deeplearning.common.datamodule.base.BaseDataset.val"], [13, "id1"]], "val_dataloader() (cneuromax.deeplearning.common.datamodule.base.basedatamodule method)": [[13, "cneuromax.deeplearning.common.datamodule.base.BaseDataModule.val_dataloader"]], "basedatamodule (class in cneuromax.deeplearning.common.datamodule)": [[14, "cneuromax.deeplearning.common.datamodule.BaseDataModule"]], "basedatamoduleconfig (class in cneuromax.deeplearning.common.datamodule)": [[14, "cneuromax.deeplearning.common.datamodule.BaseDataModuleConfig"]], "basedataset (class in cneuromax.deeplearning.common.datamodule)": [[14, "cneuromax.deeplearning.common.datamodule.BaseDataset"]], "cneuromax.deeplearning.common.datamodule": [[14, "module-cneuromax.deeplearning.common.datamodule"]], "config (cneuromax.deeplearning.common.datamodule.basedatamodule attribute)": [[14, "cneuromax.deeplearning.common.datamodule.BaseDataModule.config"]], "data_dir (cneuromax.deeplearning.common.datamodule.basedatamoduleconfig attribute)": [[14, "cneuromax.deeplearning.common.datamodule.BaseDataModuleConfig.data_dir"], [14, "id0"]], "device_type (cneuromax.deeplearning.common.datamodule.basedatamoduleconfig attribute)": [[14, "cneuromax.deeplearning.common.datamodule.BaseDataModuleConfig.device_type"], [14, "id3"]], "load_state_dict() (cneuromax.deeplearning.common.datamodule.basedatamodule method)": [[14, "cneuromax.deeplearning.common.datamodule.BaseDataModule.load_state_dict"]], "per_device_batch_size (cneuromax.deeplearning.common.datamodule.basedatamoduleconfig attribute)": [[14, "cneuromax.deeplearning.common.datamodule.BaseDataModuleConfig.per_device_batch_size"], [14, "id1"]], "per_device_num_workers (cneuromax.deeplearning.common.datamodule.basedatamoduleconfig attribute)": [[14, "cneuromax.deeplearning.common.datamodule.BaseDataModuleConfig.per_device_num_workers"], [14, "id2"]], "pin_memory (cneuromax.deeplearning.common.datamodule.basedatamodule attribute)": [[14, "cneuromax.deeplearning.common.datamodule.BaseDataModule.pin_memory"]], "predict (cneuromax.deeplearning.common.datamodule.basedataset attribute)": [[14, "cneuromax.deeplearning.common.datamodule.BaseDataset.predict"], [14, "id7"]], "predict_dataloader() (cneuromax.deeplearning.common.datamodule.basedatamodule method)": [[14, "cneuromax.deeplearning.common.datamodule.BaseDataModule.predict_dataloader"]], "state_dict() (cneuromax.deeplearning.common.datamodule.basedatamodule method)": [[14, "cneuromax.deeplearning.common.datamodule.BaseDataModule.state_dict"]], "test (cneuromax.deeplearning.common.datamodule.basedataset attribute)": [[14, "cneuromax.deeplearning.common.datamodule.BaseDataset.test"], [14, "id6"]], "test_dataloader() (cneuromax.deeplearning.common.datamodule.basedatamodule method)": [[14, "cneuromax.deeplearning.common.datamodule.BaseDataModule.test_dataloader"]], "train (cneuromax.deeplearning.common.datamodule.basedataset attribute)": [[14, "cneuromax.deeplearning.common.datamodule.BaseDataset.train"], [14, "id4"]], "train_dataloader() (cneuromax.deeplearning.common.datamodule.basedatamodule method)": [[14, "cneuromax.deeplearning.common.datamodule.BaseDataModule.train_dataloader"]], "val (cneuromax.deeplearning.common.datamodule.basedataset attribute)": [[14, "cneuromax.deeplearning.common.datamodule.BaseDataset.val"], [14, "id5"]], "val_dataloader() (cneuromax.deeplearning.common.datamodule.basedatamodule method)": [[14, "cneuromax.deeplearning.common.datamodule.BaseDataModule.val_dataloader"]], "mnistdatamodule (class in cneuromax.deeplearning.common.datamodule.vision)": [[15, "cneuromax.deeplearning.common.datamodule.vision.MNISTDataModule"]], "mnistdatamoduleconfig (class in cneuromax.deeplearning.common.datamodule.vision)": [[15, "cneuromax.deeplearning.common.datamodule.vision.MNISTDataModuleConfig"]], "cneuromax.deeplearning.common.datamodule.vision": [[15, "module-cneuromax.deeplearning.common.datamodule.vision"]], "fit_dataset_mean (cneuromax.deeplearning.common.datamodule.vision.mnistdatamoduleconfig attribute)": [[15, "cneuromax.deeplearning.common.datamodule.vision.MNISTDataModuleConfig.fit_dataset_mean"], [15, "id1"]], "fit_dataset_std (cneuromax.deeplearning.common.datamodule.vision.mnistdatamoduleconfig attribute)": [[15, "cneuromax.deeplearning.common.datamodule.vision.MNISTDataModuleConfig.fit_dataset_std"], [15, "id2"]], "prepare_data() (cneuromax.deeplearning.common.datamodule.vision.mnistdatamodule method)": [[15, "cneuromax.deeplearning.common.datamodule.vision.MNISTDataModule.prepare_data"]], "setup() (cneuromax.deeplearning.common.datamodule.vision.mnistdatamodule method)": [[15, "cneuromax.deeplearning.common.datamodule.vision.MNISTDataModule.setup"]], "train_val_split (cneuromax.deeplearning.common.datamodule.vision.mnistdatamodule attribute)": [[15, "cneuromax.deeplearning.common.datamodule.vision.MNISTDataModule.train_val_split"]], "transform (cneuromax.deeplearning.common.datamodule.vision.mnistdatamodule attribute)": [[15, "cneuromax.deeplearning.common.datamodule.vision.MNISTDataModule.transform"]], "val_percentage (cneuromax.deeplearning.common.datamodule.vision.mnistdatamoduleconfig attribute)": [[15, "cneuromax.deeplearning.common.datamodule.vision.MNISTDataModuleConfig.val_percentage"], [15, "id0"]], "mnistdatamodule (class in cneuromax.deeplearning.common.datamodule.vision.mnist)": [[16, "cneuromax.deeplearning.common.datamodule.vision.mnist.MNISTDataModule"]], "mnistdatamoduleconfig (class in cneuromax.deeplearning.common.datamodule.vision.mnist)": [[16, "cneuromax.deeplearning.common.datamodule.vision.mnist.MNISTDataModuleConfig"]], "cneuromax.deeplearning.common.datamodule.vision.mnist": [[16, "module-cneuromax.deeplearning.common.datamodule.vision.mnist"]], "fit_dataset_mean (cneuromax.deeplearning.common.datamodule.vision.mnist.mnistdatamoduleconfig attribute)": [[16, "cneuromax.deeplearning.common.datamodule.vision.mnist.MNISTDataModuleConfig.fit_dataset_mean"], [16, "id1"]], "fit_dataset_std (cneuromax.deeplearning.common.datamodule.vision.mnist.mnistdatamoduleconfig attribute)": [[16, "cneuromax.deeplearning.common.datamodule.vision.mnist.MNISTDataModuleConfig.fit_dataset_std"], [16, "id2"]], "prepare_data() (cneuromax.deeplearning.common.datamodule.vision.mnist.mnistdatamodule method)": [[16, "cneuromax.deeplearning.common.datamodule.vision.mnist.MNISTDataModule.prepare_data"]], "setup() (cneuromax.deeplearning.common.datamodule.vision.mnist.mnistdatamodule method)": [[16, "cneuromax.deeplearning.common.datamodule.vision.mnist.MNISTDataModule.setup"]], "train_val_split (cneuromax.deeplearning.common.datamodule.vision.mnist.mnistdatamodule attribute)": [[16, "cneuromax.deeplearning.common.datamodule.vision.mnist.MNISTDataModule.train_val_split"]], "transform (cneuromax.deeplearning.common.datamodule.vision.mnist.mnistdatamodule attribute)": [[16, "cneuromax.deeplearning.common.datamodule.vision.mnist.MNISTDataModule.transform"]], "val_percentage (cneuromax.deeplearning.common.datamodule.vision.mnist.mnistdatamoduleconfig attribute)": [[16, "cneuromax.deeplearning.common.datamodule.vision.mnist.MNISTDataModuleConfig.val_percentage"], [16, "id0"]], "cneuromax.deeplearning.common.datamodule.vision.mnist_test": [[17, "module-cneuromax.deeplearning.common.datamodule.vision.mnist_test"]], "datamodule() (in module cneuromax.deeplearning.common.datamodule.vision.mnist_test)": [[17, "cneuromax.deeplearning.common.datamodule.vision.mnist_test.datamodule"]], "test_setup_fit() (in module cneuromax.deeplearning.common.datamodule.vision.mnist_test)": [[17, "cneuromax.deeplearning.common.datamodule.vision.mnist_test.test_setup_fit"]], "test_setup_test() (in module cneuromax.deeplearning.common.datamodule.vision.mnist_test)": [[17, "cneuromax.deeplearning.common.datamodule.vision.mnist_test.test_setup_test"]], "fitter (class in cneuromax.deeplearning.common.fitter)": [[18, "cneuromax.deeplearning.common.fitter.Fitter"]], "torch_compile_minimum_cuda_version (in module cneuromax.deeplearning.common.fitter)": [[18, "cneuromax.deeplearning.common.fitter.TORCH_COMPILE_MINIMUM_CUDA_VERSION"]], "cneuromax.deeplearning.common.fitter": [[18, "module-cneuromax.deeplearning.common.fitter"]], "config (cneuromax.deeplearning.common.fitter.fitter attribute)": [[18, "cneuromax.deeplearning.common.fitter.Fitter.config"]], "datamodule (cneuromax.deeplearning.common.fitter.fitter attribute)": [[18, "cneuromax.deeplearning.common.fitter.Fitter.datamodule"]], "fit() (cneuromax.deeplearning.common.fitter.fitter method)": [[18, "cneuromax.deeplearning.common.fitter.Fitter.fit"]], "instantiate_lightning_objects() (cneuromax.deeplearning.common.fitter.fitter method)": [[18, "cneuromax.deeplearning.common.fitter.Fitter.instantiate_lightning_objects"]], "litmodule (cneuromax.deeplearning.common.fitter.fitter attribute)": [[18, "cneuromax.deeplearning.common.fitter.Fitter.litmodule"]], "logger (cneuromax.deeplearning.common.fitter.fitter attribute)": [[18, "cneuromax.deeplearning.common.fitter.Fitter.logger"]], "set_batch_size_and_num_workers() (cneuromax.deeplearning.common.fitter.fitter method)": [[18, "cneuromax.deeplearning.common.fitter.Fitter.set_batch_size_and_num_workers"]], "set_checkpoint_path() (cneuromax.deeplearning.common.fitter.fitter method)": [[18, "cneuromax.deeplearning.common.fitter.Fitter.set_checkpoint_path"]], "trainer (cneuromax.deeplearning.common.fitter.fitter attribute)": [[18, "cneuromax.deeplearning.common.fitter.Fitter.trainer"]], "cneuromax.deeplearning.common": [[19, "module-cneuromax.deeplearning.common"]], "baselitmodule (class in cneuromax.deeplearning.common.litmodule.base)": [[20, "cneuromax.deeplearning.common.litmodule.base.BaseLitModule"]], "cneuromax.deeplearning.common.litmodule.base": [[20, "module-cneuromax.deeplearning.common.litmodule.base"]], "configure_optimizers() (cneuromax.deeplearning.common.litmodule.base.baselitmodule method)": [[20, "cneuromax.deeplearning.common.litmodule.base.BaseLitModule.configure_optimizers"]], "nnmodule (cneuromax.deeplearning.common.litmodule.base.baselitmodule attribute)": [[20, "cneuromax.deeplearning.common.litmodule.base.BaseLitModule.nnmodule"]], "optimizer (cneuromax.deeplearning.common.litmodule.base.baselitmodule attribute)": [[20, "cneuromax.deeplearning.common.litmodule.base.BaseLitModule.optimizer"]], "scheduler (cneuromax.deeplearning.common.litmodule.base.baselitmodule attribute)": [[20, "cneuromax.deeplearning.common.litmodule.base.BaseLitModule.scheduler"]], "test_step() (cneuromax.deeplearning.common.litmodule.base.baselitmodule method)": [[20, "cneuromax.deeplearning.common.litmodule.base.BaseLitModule.test_step"]], "training_step() (cneuromax.deeplearning.common.litmodule.base.baselitmodule method)": [[20, "cneuromax.deeplearning.common.litmodule.base.BaseLitModule.training_step"]], "validation_step() (cneuromax.deeplearning.common.litmodule.base.baselitmodule method)": [[20, "cneuromax.deeplearning.common.litmodule.base.BaseLitModule.validation_step"]], "baseclasssificationlitmodule (class in cneuromax.deeplearning.common.litmodule.classification.base)": [[21, "cneuromax.deeplearning.common.litmodule.classification.base.BaseClasssificationLitModule"]], "accuracy (cneuromax.deeplearning.common.litmodule.classification.base.baseclasssificationlitmodule attribute)": [[21, "cneuromax.deeplearning.common.litmodule.classification.base.BaseClasssificationLitModule.accuracy"]], "cneuromax.deeplearning.common.litmodule.classification.base": [[21, "module-cneuromax.deeplearning.common.litmodule.classification.base"]], "nnmodule (cneuromax.deeplearning.common.litmodule.classification.base.baseclasssificationlitmodule attribute)": [[21, "cneuromax.deeplearning.common.litmodule.classification.base.BaseClasssificationLitModule.nnmodule"]], "optimizer (cneuromax.deeplearning.common.litmodule.classification.base.baseclasssificationlitmodule attribute)": [[21, "cneuromax.deeplearning.common.litmodule.classification.base.BaseClasssificationLitModule.optimizer"]], "scheduler (cneuromax.deeplearning.common.litmodule.classification.base.baseclasssificationlitmodule attribute)": [[21, "cneuromax.deeplearning.common.litmodule.classification.base.BaseClasssificationLitModule.scheduler"]], "step() (cneuromax.deeplearning.common.litmodule.classification.base.baseclasssificationlitmodule method)": [[21, "cneuromax.deeplearning.common.litmodule.classification.base.BaseClasssificationLitModule.step"]], "baseclasssificationlitmodule (class in cneuromax.deeplearning.common.litmodule.classification)": [[22, "cneuromax.deeplearning.common.litmodule.classification.BaseClasssificationLitModule"]], "accuracy (cneuromax.deeplearning.common.litmodule.classification.baseclasssificationlitmodule attribute)": [[22, "cneuromax.deeplearning.common.litmodule.classification.BaseClasssificationLitModule.accuracy"]], "cneuromax.deeplearning.common.litmodule.classification": [[22, "module-cneuromax.deeplearning.common.litmodule.classification"]], "nnmodule (cneuromax.deeplearning.common.litmodule.classification.baseclasssificationlitmodule attribute)": [[22, "cneuromax.deeplearning.common.litmodule.classification.BaseClasssificationLitModule.nnmodule"]], "optimizer (cneuromax.deeplearning.common.litmodule.classification.baseclasssificationlitmodule attribute)": [[22, "cneuromax.deeplearning.common.litmodule.classification.BaseClasssificationLitModule.optimizer"]], "scheduler (cneuromax.deeplearning.common.litmodule.classification.baseclasssificationlitmodule attribute)": [[22, "cneuromax.deeplearning.common.litmodule.classification.BaseClasssificationLitModule.scheduler"]], "step() (cneuromax.deeplearning.common.litmodule.classification.baseclasssificationlitmodule method)": [[22, "cneuromax.deeplearning.common.litmodule.classification.BaseClasssificationLitModule.step"]], "baselitmodule (class in cneuromax.deeplearning.common.litmodule)": [[23, "cneuromax.deeplearning.common.litmodule.BaseLitModule"]], "cneuromax.deeplearning.common.litmodule": [[23, "module-cneuromax.deeplearning.common.litmodule"]], "configure_optimizers() (cneuromax.deeplearning.common.litmodule.baselitmodule method)": [[23, "cneuromax.deeplearning.common.litmodule.BaseLitModule.configure_optimizers"]], "nnmodule (cneuromax.deeplearning.common.litmodule.baselitmodule attribute)": [[23, "cneuromax.deeplearning.common.litmodule.BaseLitModule.nnmodule"]], "optimizer (cneuromax.deeplearning.common.litmodule.baselitmodule attribute)": [[23, "cneuromax.deeplearning.common.litmodule.BaseLitModule.optimizer"]], "scheduler (cneuromax.deeplearning.common.litmodule.baselitmodule attribute)": [[23, "cneuromax.deeplearning.common.litmodule.BaseLitModule.scheduler"]], "test_step() (cneuromax.deeplearning.common.litmodule.baselitmodule method)": [[23, "cneuromax.deeplearning.common.litmodule.BaseLitModule.test_step"]], "training_step() (cneuromax.deeplearning.common.litmodule.baselitmodule method)": [[23, "cneuromax.deeplearning.common.litmodule.BaseLitModule.training_step"]], "validation_step() (cneuromax.deeplearning.common.litmodule.baselitmodule method)": [[23, "cneuromax.deeplearning.common.litmodule.BaseLitModule.validation_step"]], "baselrschedulerconfig (class in cneuromax.deeplearning.common.lrscheduler.base)": [[24, "cneuromax.deeplearning.common.lrscheduler.base.BaseLRSchedulerConfig"]], "_partial_ (cneuromax.deeplearning.common.lrscheduler.base.baselrschedulerconfig attribute)": [[24, "cneuromax.deeplearning.common.lrscheduler.base.BaseLRSchedulerConfig._partial_"], [24, "id0"]], "cneuromax.deeplearning.common.lrscheduler.base": [[24, "module-cneuromax.deeplearning.common.lrscheduler.base"]], "last_epoch (cneuromax.deeplearning.common.lrscheduler.base.baselrschedulerconfig attribute)": [[24, "cneuromax.deeplearning.common.lrscheduler.base.BaseLRSchedulerConfig.last_epoch"], [24, "id1"]], "last_epoch (in module cneuromax.deeplearning.common.lrscheduler.base_test)": [[25, "cneuromax.deeplearning.common.lrscheduler.base_test.LAST_EPOCH"]], "cneuromax.deeplearning.common.lrscheduler.base_test": [[25, "module-cneuromax.deeplearning.common.lrscheduler.base_test"]], "test() (in module cneuromax.deeplearning.common.lrscheduler.base_test)": [[25, "cneuromax.deeplearning.common.lrscheduler.base_test.test"]], "cneuromax.deeplearning.common.lrscheduler": [[26, "module-cneuromax.deeplearning.common.lrscheduler"]], "cneuromax.deeplearning.common.lrscheduler.none_test": [[27, "module-cneuromax.deeplearning.common.lrscheduler.none_test"]], "test() (in module cneuromax.deeplearning.common.lrscheduler.none_test)": [[27, "cneuromax.deeplearning.common.lrscheduler.none_test.test"]], "mlp (class in cneuromax.deeplearning.common.nnmodule)": [[28, "cneuromax.deeplearning.common.nnmodule.MLP"]], "mlpconfig (class in cneuromax.deeplearning.common.nnmodule)": [[28, "cneuromax.deeplearning.common.nnmodule.MLPConfig"]], "activation_fn (cneuromax.deeplearning.common.nnmodule.mlpconfig attribute)": [[28, "cneuromax.deeplearning.common.nnmodule.MLPConfig.activation_fn"], [28, "id1"]], "cneuromax.deeplearning.common.nnmodule": [[28, "module-cneuromax.deeplearning.common.nnmodule"]], "config (cneuromax.deeplearning.common.nnmodule.mlp attribute)": [[28, "cneuromax.deeplearning.common.nnmodule.MLP.config"]], "dims (cneuromax.deeplearning.common.nnmodule.mlpconfig attribute)": [[28, "cneuromax.deeplearning.common.nnmodule.MLPConfig.dims"], [28, "id0"]], "forward() (cneuromax.deeplearning.common.nnmodule.mlp method)": [[28, "cneuromax.deeplearning.common.nnmodule.MLP.forward"]], "model (cneuromax.deeplearning.common.nnmodule.mlp attribute)": [[28, "cneuromax.deeplearning.common.nnmodule.MLP.model"]], "p_dropout (cneuromax.deeplearning.common.nnmodule.mlpconfig attribute)": [[28, "cneuromax.deeplearning.common.nnmodule.MLPConfig.p_dropout"], [28, "id2"]], "mlp (class in cneuromax.deeplearning.common.nnmodule.mlp)": [[29, "cneuromax.deeplearning.common.nnmodule.mlp.MLP"]], "mlpconfig (class in cneuromax.deeplearning.common.nnmodule.mlp)": [[29, "cneuromax.deeplearning.common.nnmodule.mlp.MLPConfig"]], "activation_fn (cneuromax.deeplearning.common.nnmodule.mlp.mlpconfig attribute)": [[29, "cneuromax.deeplearning.common.nnmodule.mlp.MLPConfig.activation_fn"], [29, "id1"]], "cneuromax.deeplearning.common.nnmodule.mlp": [[29, "module-cneuromax.deeplearning.common.nnmodule.mlp"]], "config (cneuromax.deeplearning.common.nnmodule.mlp.mlp attribute)": [[29, "cneuromax.deeplearning.common.nnmodule.mlp.MLP.config"]], "dims (cneuromax.deeplearning.common.nnmodule.mlp.mlpconfig attribute)": [[29, "cneuromax.deeplearning.common.nnmodule.mlp.MLPConfig.dims"], [29, "id0"]], "forward() (cneuromax.deeplearning.common.nnmodule.mlp.mlp method)": [[29, "cneuromax.deeplearning.common.nnmodule.mlp.MLP.forward"]], "model (cneuromax.deeplearning.common.nnmodule.mlp.mlp attribute)": [[29, "cneuromax.deeplearning.common.nnmodule.mlp.MLP.model"]], "p_dropout (cneuromax.deeplearning.common.nnmodule.mlp.mlpconfig attribute)": [[29, "cneuromax.deeplearning.common.nnmodule.mlp.MLPConfig.p_dropout"], [29, "id2"]], "cneuromax.deeplearning.common.nnmodule.mlp_test": [[30, "module-cneuromax.deeplearning.common.nnmodule.mlp_test"]], "mlp_1() (in module cneuromax.deeplearning.common.nnmodule.mlp_test)": [[30, "cneuromax.deeplearning.common.nnmodule.mlp_test.mlp_1"]], "mlp_2() (in module cneuromax.deeplearning.common.nnmodule.mlp_test)": [[30, "cneuromax.deeplearning.common.nnmodule.mlp_test.mlp_2"]], "test_constructor() (in module cneuromax.deeplearning.common.nnmodule.mlp_test)": [[30, "cneuromax.deeplearning.common.nnmodule.mlp_test.test_constructor"]], "test_forward() (in module cneuromax.deeplearning.common.nnmodule.mlp_test)": [[30, "cneuromax.deeplearning.common.nnmodule.mlp_test.test_forward"]], "adamconfig (class in cneuromax.deeplearning.common.optimizer.adam)": [[31, "cneuromax.deeplearning.common.optimizer.adam.AdamConfig"]], "_partial_ (cneuromax.deeplearning.common.optimizer.adam.adamconfig attribute)": [[31, "cneuromax.deeplearning.common.optimizer.adam.AdamConfig._partial_"]], "_target_ (cneuromax.deeplearning.common.optimizer.adam.adamconfig attribute)": [[31, "cneuromax.deeplearning.common.optimizer.adam.AdamConfig._target_"], [31, "id0"]], "betas (cneuromax.deeplearning.common.optimizer.adam.adamconfig attribute)": [[31, "cneuromax.deeplearning.common.optimizer.adam.AdamConfig.betas"], [31, "id1"]], "cneuromax.deeplearning.common.optimizer.adam": [[31, "module-cneuromax.deeplearning.common.optimizer.adam"]], "eps (cneuromax.deeplearning.common.optimizer.adam.adamconfig attribute)": [[31, "cneuromax.deeplearning.common.optimizer.adam.AdamConfig.eps"], [31, "id2"]], "lr (cneuromax.deeplearning.common.optimizer.adam.adamconfig attribute)": [[31, "cneuromax.deeplearning.common.optimizer.adam.AdamConfig.lr"]], "weight_decay (cneuromax.deeplearning.common.optimizer.adam.adamconfig attribute)": [[31, "cneuromax.deeplearning.common.optimizer.adam.AdamConfig.weight_decay"]], "betas (in module cneuromax.deeplearning.common.optimizer.adam_test)": [[32, "cneuromax.deeplearning.common.optimizer.adam_test.BETAS"]], "eps (in module cneuromax.deeplearning.common.optimizer.adam_test)": [[32, "cneuromax.deeplearning.common.optimizer.adam_test.EPS"]], "cneuromax.deeplearning.common.optimizer.adam_test": [[32, "module-cneuromax.deeplearning.common.optimizer.adam_test"]], "test() (in module cneuromax.deeplearning.common.optimizer.adam_test)": [[32, "cneuromax.deeplearning.common.optimizer.adam_test.test"]], "adamwconfig (class in cneuromax.deeplearning.common.optimizer.adamw)": [[33, "cneuromax.deeplearning.common.optimizer.adamw.AdamWConfig"]], "_partial_ (cneuromax.deeplearning.common.optimizer.adamw.adamwconfig attribute)": [[33, "cneuromax.deeplearning.common.optimizer.adamw.AdamWConfig._partial_"]], "_target_ (cneuromax.deeplearning.common.optimizer.adamw.adamwconfig attribute)": [[33, "cneuromax.deeplearning.common.optimizer.adamw.AdamWConfig._target_"], [33, "id0"]], "betas (cneuromax.deeplearning.common.optimizer.adamw.adamwconfig attribute)": [[33, "cneuromax.deeplearning.common.optimizer.adamw.AdamWConfig.betas"]], "cneuromax.deeplearning.common.optimizer.adamw": [[33, "module-cneuromax.deeplearning.common.optimizer.adamw"]], "eps (cneuromax.deeplearning.common.optimizer.adamw.adamwconfig attribute)": [[33, "cneuromax.deeplearning.common.optimizer.adamw.AdamWConfig.eps"]], "lr (cneuromax.deeplearning.common.optimizer.adamw.adamwconfig attribute)": [[33, "cneuromax.deeplearning.common.optimizer.adamw.AdamWConfig.lr"]], "weight_decay (cneuromax.deeplearning.common.optimizer.adamw.adamwconfig attribute)": [[33, "cneuromax.deeplearning.common.optimizer.adamw.AdamWConfig.weight_decay"]], "baseoptimizerconfig (class in cneuromax.deeplearning.common.optimizer.base)": [[34, "cneuromax.deeplearning.common.optimizer.base.BaseOptimizerConfig"]], "_partial_ (cneuromax.deeplearning.common.optimizer.base.baseoptimizerconfig attribute)": [[34, "cneuromax.deeplearning.common.optimizer.base.BaseOptimizerConfig._partial_"], [34, "id1"]], "_target_ (cneuromax.deeplearning.common.optimizer.base.baseoptimizerconfig attribute)": [[34, "cneuromax.deeplearning.common.optimizer.base.BaseOptimizerConfig._target_"], [34, "id0"]], "cneuromax.deeplearning.common.optimizer.base": [[34, "module-cneuromax.deeplearning.common.optimizer.base"]], "lr (cneuromax.deeplearning.common.optimizer.base.baseoptimizerconfig attribute)": [[34, "cneuromax.deeplearning.common.optimizer.base.BaseOptimizerConfig.lr"], [34, "id2"]], "weight_decay (cneuromax.deeplearning.common.optimizer.base.baseoptimizerconfig attribute)": [[34, "cneuromax.deeplearning.common.optimizer.base.BaseOptimizerConfig.weight_decay"], [34, "id3"]], "lr (in module cneuromax.deeplearning.common.optimizer.base_test)": [[35, "cneuromax.deeplearning.common.optimizer.base_test.LR"]], "weight_decay (in module cneuromax.deeplearning.common.optimizer.base_test)": [[35, "cneuromax.deeplearning.common.optimizer.base_test.WEIGHT_DECAY"]], "cneuromax.deeplearning.common.optimizer.base_test": [[35, "module-cneuromax.deeplearning.common.optimizer.base_test"]], "test() (in module cneuromax.deeplearning.common.optimizer.base_test)": [[35, "cneuromax.deeplearning.common.optimizer.base_test.test"]], "adamconfig (class in cneuromax.deeplearning.common.optimizer)": [[36, "cneuromax.deeplearning.common.optimizer.AdamConfig"]], "adamwconfig (class in cneuromax.deeplearning.common.optimizer)": [[36, "cneuromax.deeplearning.common.optimizer.AdamWConfig"]], "sgdconfig (class in cneuromax.deeplearning.common.optimizer)": [[36, "cneuromax.deeplearning.common.optimizer.SGDConfig"]], "_partial_ (cneuromax.deeplearning.common.optimizer.adamconfig attribute)": [[36, "cneuromax.deeplearning.common.optimizer.AdamConfig._partial_"]], "_partial_ (cneuromax.deeplearning.common.optimizer.adamwconfig attribute)": [[36, "cneuromax.deeplearning.common.optimizer.AdamWConfig._partial_"]], "_partial_ (cneuromax.deeplearning.common.optimizer.sgdconfig attribute)": [[36, "cneuromax.deeplearning.common.optimizer.SGDConfig._partial_"]], "_target_ (cneuromax.deeplearning.common.optimizer.adamconfig attribute)": [[36, "cneuromax.deeplearning.common.optimizer.AdamConfig._target_"], [36, "id0"]], "_target_ (cneuromax.deeplearning.common.optimizer.adamwconfig attribute)": [[36, "cneuromax.deeplearning.common.optimizer.AdamWConfig._target_"], [36, "id3"]], "_target_ (cneuromax.deeplearning.common.optimizer.sgdconfig attribute)": [[36, "cneuromax.deeplearning.common.optimizer.SGDConfig._target_"], [36, "id4"]], "betas (cneuromax.deeplearning.common.optimizer.adamconfig attribute)": [[36, "cneuromax.deeplearning.common.optimizer.AdamConfig.betas"], [36, "id1"]], "betas (cneuromax.deeplearning.common.optimizer.adamwconfig attribute)": [[36, "cneuromax.deeplearning.common.optimizer.AdamWConfig.betas"]], "cneuromax.deeplearning.common.optimizer": [[36, "module-cneuromax.deeplearning.common.optimizer"]], "eps (cneuromax.deeplearning.common.optimizer.adamconfig attribute)": [[36, "cneuromax.deeplearning.common.optimizer.AdamConfig.eps"], [36, "id2"]], "eps (cneuromax.deeplearning.common.optimizer.adamwconfig attribute)": [[36, "cneuromax.deeplearning.common.optimizer.AdamWConfig.eps"]], "lr (cneuromax.deeplearning.common.optimizer.adamconfig attribute)": [[36, "cneuromax.deeplearning.common.optimizer.AdamConfig.lr"]], "lr (cneuromax.deeplearning.common.optimizer.adamwconfig attribute)": [[36, "cneuromax.deeplearning.common.optimizer.AdamWConfig.lr"]], "lr (cneuromax.deeplearning.common.optimizer.sgdconfig attribute)": [[36, "cneuromax.deeplearning.common.optimizer.SGDConfig.lr"]], "momentum (cneuromax.deeplearning.common.optimizer.sgdconfig attribute)": [[36, "cneuromax.deeplearning.common.optimizer.SGDConfig.momentum"], [36, "id5"]], "weight_decay (cneuromax.deeplearning.common.optimizer.adamconfig attribute)": [[36, "cneuromax.deeplearning.common.optimizer.AdamConfig.weight_decay"]], "weight_decay (cneuromax.deeplearning.common.optimizer.adamwconfig attribute)": [[36, "cneuromax.deeplearning.common.optimizer.AdamWConfig.weight_decay"]], "weight_decay (cneuromax.deeplearning.common.optimizer.sgdconfig attribute)": [[36, "cneuromax.deeplearning.common.optimizer.SGDConfig.weight_decay"]], "sgdconfig (class in cneuromax.deeplearning.common.optimizer.sgd)": [[37, "cneuromax.deeplearning.common.optimizer.sgd.SGDConfig"]], "_partial_ (cneuromax.deeplearning.common.optimizer.sgd.sgdconfig attribute)": [[37, "cneuromax.deeplearning.common.optimizer.sgd.SGDConfig._partial_"]], "_target_ (cneuromax.deeplearning.common.optimizer.sgd.sgdconfig attribute)": [[37, "cneuromax.deeplearning.common.optimizer.sgd.SGDConfig._target_"], [37, "id0"]], "cneuromax.deeplearning.common.optimizer.sgd": [[37, "module-cneuromax.deeplearning.common.optimizer.sgd"]], "lr (cneuromax.deeplearning.common.optimizer.sgd.sgdconfig attribute)": [[37, "cneuromax.deeplearning.common.optimizer.sgd.SGDConfig.lr"]], "momentum (cneuromax.deeplearning.common.optimizer.sgd.sgdconfig attribute)": [[37, "cneuromax.deeplearning.common.optimizer.sgd.SGDConfig.momentum"], [37, "id1"]], "weight_decay (cneuromax.deeplearning.common.optimizer.sgd.sgdconfig attribute)": [[37, "cneuromax.deeplearning.common.optimizer.sgd.SGDConfig.weight_decay"]], "momentum (in module cneuromax.deeplearning.common.optimizer.sgd_test)": [[38, "cneuromax.deeplearning.common.optimizer.sgd_test.MOMENTUM"]], "cneuromax.deeplearning.common.optimizer.sgd_test": [[38, "module-cneuromax.deeplearning.common.optimizer.sgd_test"]], "test() (in module cneuromax.deeplearning.common.optimizer.sgd_test)": [[38, "cneuromax.deeplearning.common.optimizer.sgd_test.test"]], "cneuromax.deeplearning.common.optimizer.w_test": [[39, "module-cneuromax.deeplearning.common.optimizer.w_test"]], "test() (in module cneuromax.deeplearning.common.optimizer.w_test)": [[39, "cneuromax.deeplearning.common.optimizer.w_test.test"]], "cneuromax.deeplearning.common.utils.annotations": [[40, "module-cneuromax.deeplearning.common.utils.annotations"]], "float_gt0_lt1 (in module cneuromax.deeplearning.common.utils.annotations)": [[40, "cneuromax.deeplearning.common.utils.annotations.float_gt0_lt1"]], "str_fit_test (in module cneuromax.deeplearning.common.utils.annotations)": [[40, "cneuromax.deeplearning.common.utils.annotations.str_fit_test"]], "cneuromax.deeplearning.common.utils": [[41, "module-cneuromax.deeplearning.common.utils"]], "initoptimparamscheckpointconnector (class in cneuromax.deeplearning.common.utils.lightning)": [[42, "cneuromax.deeplearning.common.utils.lightning.InitOptimParamsCheckpointConnector"]], "cneuromax.deeplearning.common.utils.lightning": [[42, "module-cneuromax.deeplearning.common.utils.lightning"]], "find_good_batch_size() (in module cneuromax.deeplearning.common.utils.lightning)": [[42, "cneuromax.deeplearning.common.utils.lightning.find_good_batch_size"]], "find_good_num_workers() (in module cneuromax.deeplearning.common.utils.lightning)": [[42, "cneuromax.deeplearning.common.utils.lightning.find_good_num_workers"]], "restore_optimizers() (cneuromax.deeplearning.common.utils.lightning.initoptimparamscheckpointconnector method)": [[42, "cneuromax.deeplearning.common.utils.lightning.InitOptimParamsCheckpointConnector.restore_optimizers"]], "trainer (cneuromax.deeplearning.common.utils.lightning.initoptimparamscheckpointconnector attribute)": [[42, "cneuromax.deeplearning.common.utils.lightning.InitOptimParamsCheckpointConnector.trainer"]], "cneuromax.deeplearning.experiment": [[43, "module-cneuromax.deeplearning.experiment"]], "cneuromax.deeplearning.experiment.mnist_classification": [[44, "module-cneuromax.deeplearning.experiment.mnist_classification"]], "mnistclassificationlitmodule (class in cneuromax.deeplearning.experiment.mnist_classification.litmodule)": [[45, "cneuromax.deeplearning.experiment.mnist_classification.litmodule.MNISTClassificationLitModule"]], "accuracy (cneuromax.deeplearning.experiment.mnist_classification.litmodule.mnistclassificationlitmodule attribute)": [[45, "cneuromax.deeplearning.experiment.mnist_classification.litmodule.MNISTClassificationLitModule.accuracy"]], "cneuromax.deeplearning.experiment.mnist_classification.litmodule": [[45, "module-cneuromax.deeplearning.experiment.mnist_classification.litmodule"]], "forward() (cneuromax.deeplearning.experiment.mnist_classification.litmodule.mnistclassificationlitmodule method)": [[45, "cneuromax.deeplearning.experiment.mnist_classification.litmodule.MNISTClassificationLitModule.forward"]], "nnmodule (cneuromax.deeplearning.experiment.mnist_classification.litmodule.mnistclassificationlitmodule attribute)": [[45, "cneuromax.deeplearning.experiment.mnist_classification.litmodule.MNISTClassificationLitModule.nnmodule"]], "optimizer (cneuromax.deeplearning.experiment.mnist_classification.litmodule.mnistclassificationlitmodule attribute)": [[45, "cneuromax.deeplearning.experiment.mnist_classification.litmodule.MNISTClassificationLitModule.optimizer"]], "scheduler (cneuromax.deeplearning.experiment.mnist_classification.litmodule.mnistclassificationlitmodule attribute)": [[45, "cneuromax.deeplearning.experiment.mnist_classification.litmodule.MNISTClassificationLitModule.scheduler"]], "cneuromax.deeplearning": [[46, "module-cneuromax.deeplearning"]], "cneuromax": [[47, "module-cneuromax"]], "cneuromax.neuroevolution": [[48, "module-cneuromax.neuroevolution"]], "cneuromax.utils.annotations": [[49, "module-cneuromax.utils.annotations"]], "float_gt_0_lt_1 (in module cneuromax.utils.annotations)": [[49, "cneuromax.utils.annotations.float_gt_0_lt_1"]], "int_ge_0 (in module cneuromax.utils.annotations)": [[49, "cneuromax.utils.annotations.int_ge_0"]], "int_gt_0 (in module cneuromax.utils.annotations)": [[49, "cneuromax.utils.annotations.int_gt_0"]], "str_cpu_or_gpu (in module cneuromax.utils.annotations)": [[49, "cneuromax.utils.annotations.str_cpu_or_gpu"]], "str_fit_or_test (in module cneuromax.utils.annotations)": [[49, "cneuromax.utils.annotations.str_fit_or_test"]], "str_per_device_batch_size (in module cneuromax.utils.annotations)": [[49, "cneuromax.utils.annotations.str_per_device_batch_size"]], "cneuromax.utils": [[50, "module-cneuromax.utils"]], "t (in module cneuromax.utils.test)": [[51, "cneuromax.utils.test.T"]], "cneuromax.utils.test": [[51, "module-cneuromax.utils.test"]], "is_decorated_with() (in module cneuromax.utils.test)": [[51, "cneuromax.utils.test.is_decorated_with"]]}})