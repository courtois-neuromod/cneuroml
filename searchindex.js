Search.setIndex({"docnames": ["Contribution", "Execution", "Execution_On_a_Linux_machine", "Execution_On_a_Slurm_cluster", "Installation", "Installation_Common_to_all_machines", "Installation_On_a_Linux_machine", "Installation_On_a_Slurm_cluster", "autoapi/cneuromax/application/index", "autoapi/cneuromax/common/fitter/index", "autoapi/cneuromax/common/index", "autoapi/cneuromax/common/utils/annotations/index", "autoapi/cneuromax/common/utils/index", "autoapi/cneuromax/deeplearning/__main__/index", "autoapi/cneuromax/deeplearning/common/datamodule/base/index", "autoapi/cneuromax/deeplearning/common/datamodule/index", "autoapi/cneuromax/deeplearning/common/fitter/index", "autoapi/cneuromax/deeplearning/common/index", "autoapi/cneuromax/deeplearning/common/litmodule/base/index", "autoapi/cneuromax/deeplearning/common/litmodule/classification/base/index", "autoapi/cneuromax/deeplearning/common/litmodule/classification/index", "autoapi/cneuromax/deeplearning/common/litmodule/index", "autoapi/cneuromax/deeplearning/common/nnmodule/index", "autoapi/cneuromax/deeplearning/common/nnmodule/mlp/index", "autoapi/cneuromax/deeplearning/common/utils/index", "autoapi/cneuromax/deeplearning/common/utils/lightning/index", "autoapi/cneuromax/deeplearning/experiment/index", "autoapi/cneuromax/deeplearning/experiment/mnist_classification/datamodule/index", "autoapi/cneuromax/deeplearning/experiment/mnist_classification/datamodule_test/index", "autoapi/cneuromax/deeplearning/experiment/mnist_classification/index", "autoapi/cneuromax/deeplearning/experiment/mnist_classification/litmodule/index", "autoapi/cneuromax/deeplearning/index", "autoapi/cneuromax/index", "autoapi/cneuromax/neuroevolution/index", "autoapi/index", "index"], "filenames": ["Contribution.rst", "Execution.rst", "Execution_On_a_Linux_machine.rst", "Execution_On_a_Slurm_cluster.rst", "Installation.rst", "Installation_Common_to_all_machines.rst", "Installation_On_a_Linux_machine.rst", "Installation_On_a_Slurm_cluster.rst", "autoapi/cneuromax/application/index.rst", "autoapi/cneuromax/common/fitter/index.rst", "autoapi/cneuromax/common/index.rst", "autoapi/cneuromax/common/utils/annotations/index.rst", "autoapi/cneuromax/common/utils/index.rst", "autoapi/cneuromax/deeplearning/__main__/index.rst", "autoapi/cneuromax/deeplearning/common/datamodule/base/index.rst", "autoapi/cneuromax/deeplearning/common/datamodule/index.rst", "autoapi/cneuromax/deeplearning/common/fitter/index.rst", "autoapi/cneuromax/deeplearning/common/index.rst", "autoapi/cneuromax/deeplearning/common/litmodule/base/index.rst", "autoapi/cneuromax/deeplearning/common/litmodule/classification/base/index.rst", "autoapi/cneuromax/deeplearning/common/litmodule/classification/index.rst", "autoapi/cneuromax/deeplearning/common/litmodule/index.rst", "autoapi/cneuromax/deeplearning/common/nnmodule/index.rst", "autoapi/cneuromax/deeplearning/common/nnmodule/mlp/index.rst", "autoapi/cneuromax/deeplearning/common/utils/index.rst", "autoapi/cneuromax/deeplearning/common/utils/lightning/index.rst", "autoapi/cneuromax/deeplearning/experiment/index.rst", "autoapi/cneuromax/deeplearning/experiment/mnist_classification/datamodule/index.rst", "autoapi/cneuromax/deeplearning/experiment/mnist_classification/datamodule_test/index.rst", "autoapi/cneuromax/deeplearning/experiment/mnist_classification/index.rst", "autoapi/cneuromax/deeplearning/experiment/mnist_classification/litmodule/index.rst", "autoapi/cneuromax/deeplearning/index.rst", "autoapi/cneuromax/index.rst", "autoapi/cneuromax/neuroevolution/index.rst", "autoapi/index.rst", "index.rst"], "titles": ["Contribution", "Execution", "On a Linux machine", "On a Slurm cluster", "Installation", "Common to all machines", "On a Linux machine", "On a Slurm cluster", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.application</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.common.fitter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.common</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.common.utils.annotations</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.common.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.__main__</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.datamodule.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.datamodule</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.fitter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.litmodule.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.litmodule.classification.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.litmodule.classification</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.litmodule</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.nnmodule</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.nnmodule.mlp</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.utils.lightning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.experiment</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.experiment.mnist_classification.datamodule</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.experiment.mnist_classification.datamodule_test</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.experiment.mnist_classification</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.experiment.mnist_classification.litmodule</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.neuroevolution</span></code>", "API Reference", "Welcome to the cneuromax documentation!"], "terms": {"have": [0, 4, 5], "complet": 0, "instal": [0, 1, 3, 5, 35], "step": [0, 4, 5, 18, 19, 20, 21], "befor": [0, 14, 15], "move": [0, 4, 5], "thi": [0, 4, 5, 14, 15, 16, 17, 22, 23, 25, 34, 35], "section": [0, 4, 6], "link": 0, "http": 0, "com": [0, 4, 5], "courtoi": [0, 4, 5], "neuromod": [0, 4, 5], "cneuromax": [0, 1, 2, 3, 4, 5, 6, 7, 34], "In": [0, 16, 17], "order": 0, "you": [0, 4, 5, 25], "need": [0, 14, 15, 16, 17, 18, 21], "depend": [0, 16, 17], "can": [0, 4, 5], "done": 0, "run": [0, 4, 5, 6, 7, 13, 16, 17, 25], "follow": [0, 4, 5, 6, 25], "command": [0, 4, 5, 7], "cd": [0, 1, 3, 4, 5], "cneuromax_path": [0, 1, 2, 3, 4, 5, 7], "python": [0, 4, 7], "m": [0, 1, 2, 3, 4, 7], "venv": [0, 1, 3, 4, 7], "bin": [0, 1, 3, 4, 7], "activ": [0, 1, 3, 4, 7, 22, 23, 35], "openmpi": 0, "": [0, 4, 14, 15, 18, 21], "alreadi": [0, 4, 5], "sudo": [0, 4, 5, 6], "apt": [0, 4, 5, 6], "y": [0, 4, 5, 6], "libopenmpi": 0, "dev": 0, "pip": [0, 4, 7], "extra": 0, "index": 0, "url": 0, "download": [0, 27, 29], "pytorch": [0, 14, 15, 18, 21, 25, 29, 30], "org": 0, "whl": 0, "cpu": [0, 11, 14, 15], "e": [0, 1, 2, 4, 5, 7, 25], "now": [0, 4, 5, 7], "all": [0, 7, 35], "do": [0, 16, 17], "note": [0, 16, 17], "librari": [0, 1, 3, 4, 5], "version": [0, 4, 5, 6], "ar": [0, 4, 16, 17, 25], "meant": 0, "actual": 0, "so": [0, 4, 25], "i": [0, 4, 5, 7, 11, 14, 15, 16, 17, 18, 21, 22, 23, 25, 35], "prefer": 0, "work": 0, "contain": [0, 1, 3, 5, 7, 18, 21, 34], "reproduc": [0, 4], "purpos": 0, "The": [0, 4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 29, 30], "main": [0, 16, 17], "branch": 0, "protect": 0, "mean": [0, 14, 15], "happen": 0, "through": [0, 4, 7, 22, 23, 25, 29, 30], "pull": [0, 5, 7], "request": 0, "rather": [0, 4, 5, 25], "than": [0, 4, 5, 25], "direct": 0, "push": [0, 4, 5], "ani": [0, 14, 15, 18, 21], "go": 0, "pass": [0, 22, 23, 25, 29, 30], "number": [0, 14, 15, 22, 23, 25], "common": [0, 27, 29, 30, 31, 32, 34, 35], "standard": 0, "check": 0, "ensur": 0, "high": 0, "qualiti": 0, "doe": [0, 14, 15], "portion": 0, "exist": 0, "base": [0, 15, 17, 20, 21, 22, 23, 25, 27, 29, 30, 31, 34], "those": 0, "clean": 0, "format": 0, "pep8": 0, "compliant": 0, "we": [0, 4, 7, 16, 17], "us": [0, 14, 15, 16, 17, 25], "black": 0, "79": 0, "line": 0, "72": 0, "comment": 0, "lint": 0, "ruff": 0, "rule": 0, "don": 0, "creat": [0, 1, 2, 3, 16, 17, 19, 20, 27, 29, 34], "conflict": 0, "type": [0, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 29, 30], "mypi": 0, "strict": 0, "unit": 0, "If": [0, 4, 5, 14, 15, 16, 17, 18, 21, 25], "thei": 0, "your": [0, 1, 2, 3, 4, 5], "current": 0, "onli": 0, "leverag": 0, "pytest": 0, "most": 0, "like": 0, "eventu": 0, "broader": 0, "rest": 0, "document": [0, 16, 17, 34], "file": [0, 4, 7], "doc8": 0, "yaml": [0, 1, 3], "yamllint": 0, "trail": 0, "whitespac": 0, "regardless": 0, "extens": 0, "end": 0, "newlin": 0, "chang": 0, "made": 0, "pyreq": 0, "folder": [0, 4, 5, 7], "docker": [0, 4, 6, 7], "podman": [0, 1, 2, 3], "imag": [0, 29, 30], "still": 0, "built": 0, "doc": 0, "page": [0, 34], "wait": 0, "ci": 0, "continu": 0, "integr": 0, "finish": 0, "verifi": 0, "some": 0, "fast": 0, "sub": 0, "1": [0, 11, 27, 29, 30, 34], "second": [0, 4, 7], "quick": 0, "wai": 0, "execut": [0, 35], "them": [0, 14, 15], "pre": 0, "commit": 0, "hook": 0, "which": [0, 4, 7], "after": 0, "being": [0, 14, 15], "upon": 0, "each": [0, 14, 15, 18, 21, 22, 23, 25], "prevent": 0, "from": [0, 1, 2, 3, 14, 15, 16, 17, 18, 21, 25], "fail": 0, "automat": 0, "import": 0, "function": [0, 16, 17, 18, 21, 22, 23, 29, 30], "well": 0, "To": 0, "disabl": 0, "behaviour": 0, "instanc": [0, 14, 15, 18, 21, 28, 29, 30], "when": [0, 4, 5], "re": 0, "want": 0, "deal": 0, "valid": [0, 13, 14, 15, 16, 17, 27, 29], "instead": 0, "slow": 0, "typecheck": 0, "slower": 0, "henc": 0, "suitabl": [0, 22, 23], "howev": 0, "pretti": 0, "save": [0, 16, 17], "time": 0, "right": 0, "merg": 0, "welcom": 0, "red": 0, "wave": 0, "error": 0, "warn": 0, "everi": [0, 4, 7], "suggest": 0, "editor": 0, "notifi": 0, "issu": 0, "On": [0, 35], "formatt": 0, "charliermarsh": 0, "lextudio": 0, "restructuredtext": 0, "enabl": [0, 4, 5], "fnando": 0, "linter": 0, "And": 0, "here": 0, "insert": 0, "config": [0, 4, 5, 7, 13, 14, 15, 16, 17, 19, 20, 22, 23, 25, 27, 29], "user": [0, 1, 2, 3, 4, 5], "json": 0, "arg": [0, 18, 21], "pyproject": 0, "toml": 0, "defaultformatt": 0, "formatonsav": 0, "true": [0, 4, 5, 14, 15], "codeactionsonsav": 0, "sourc": [0, 4, 5], "organizeimport": 0, "mypyen": 0, "mypyarg": 0, "esbonio": 0, "server": 0, "fals": 0, "executablepath": 0, "home": [0, 4, 5], "max": 0, "syntaxhighlight": 0, "miscellan": 0, "insertfinalnewlin": 0, "trimtrailingwhitespac": 0, "pylanc": 0, "analysi": 0, "ignor": 0, "throw": 0, "incorrect": 0, "otherwis": 0, "redund": 0, "due": 0, "its": 0, "even": 0, "though": 0, "call": [0, 14, 15, 18, 19, 20, 21, 22, 23, 27, 29, 30], "appli": 0, "uninstal": 0, "ha": [0, 25], "other": 0, "featur": [0, 4, 5], "syntax": 0, "highlight": 0, "termin": 0, "window": 0, "directori": [0, 14, 15], "new": [0, 14, 15, 16, 17], "checkout": 0, "b": [0, 16, 17], "your_branch_nam": 0, "remot": 0, "add": [0, 4, 5], "commit_messag": 0, "been": 0, "introduct": 0, "while": [0, 16, 17], "were": 0, "updat": [0, 4, 5, 25], "latest": [0, 1, 2, 3, 4, 6, 7], "stash": 0, "option": 0, "uncommit": 0, "rebas": 0, "forc": 0, "pop": 0, "back": 0, "previou": 0, "block": 0, "might": 0, "flag": [0, 4, 5], "Then": 0, "onc": [0, 16, 17], "approv": 0, "delet": [0, 4, 7], "d": 0, "For": 0, "remain": [0, 25], "fork": 0, "todo": 0, "prune": 0, "instruct": [0, 16, 17], "exampl": [1, 2, 3, 4, 5, 6], "simpl": [1, 2, 3, 29, 30], "mnist": [1, 2, 3, 27, 29, 30], "train": [1, 2, 3, 14, 15, 16, 17, 19, 20, 25, 27, 29], "pythonpath": [1, 2], "v": [1, 2, 3], "w": [1, 2, 3, 16, 17], "deps_onli": [1, 2, 3], "all_dep": [1, 2, 3], "python3": [1, 2, 3, 4, 7], "dl": [1, 2, 3], "task": [1, 2, 3], "visual": [1, 2, 3], "tabular": [1, 2, 3], "classif": [1, 2, 3, 17, 21, 29, 30, 31, 34], "mlp": [1, 2, 17, 22, 31, 34], "own": [1, 2, 3], "ssh": [1, 2, 3], "tunnel": [1, 2, 3], "fill": [1, 2, 3], "appropri": [1, 2, 3, 25], "valu": [1, 2, 3, 14, 15, 16, 17, 18, 21], "address": [1, 2, 3], "nl": [1, 2], "8888": [1, 2, 3], "localhost": [1, 2], "allow": [1, 2, 3, 22, 23], "root": [1, 2, 3], "ip": [1, 2, 3], "0": [1, 2, 11, 14, 15, 16, 17, 25, 27, 29], "port": [1, 2, 3], "previous": [1, 3], "virtual": [1, 3], "environ": [1, 3], "mlp_slurm": [1, 3], "comput": [1, 3, 4, 7, 14, 15, 19, 20], "node": [1, 3, 4, 7], "sshuttl": [1, 3], "dn": [1, 3], "nr": [1, 3], "salloc": [1, 3], "account": [1, 3], "bash": [1, 3], "c": [1, 3], "modul": [1, 3, 4, 7, 17, 20, 21, 22, 29], "load": [1, 3, 4, 7, 14, 15, 25], "nvidia": [1, 3, 7], "ctk": [1, 3], "cdi": [1, 3], "gener": [1, 3, 25, 28, 34], "output": [1, 3, 22, 23, 29, 30], "var": [1, 3], "tmp": [1, 3], "mkdir": [1, 3, 4, 7], "p": [1, 3], "slurm_tmpdir": [1, 3, 4, 7], "scratch": [1, 3, 4, 7], "cp": [1, 3], "tar": [1, 3, 4, 7], "xf": [1, 3], "hostnam": [1, 3], "f": [1, 3], "lab": 2, "jupyt": 2, "machin": [3, 35], "below": 4, "full": 4, "cater": 4, "toward": 4, "ubuntu": [4, 6], "maxim": 4, "across": 4, "platform": 4, "util": [4, 10, 14, 15, 17, 22, 23, 27, 29, 31, 32, 34], "technologi": 4, "desir": [4, 5, 14, 15], "clone": [4, 5], "git": [4, 5, 35], "github": [4, 5, 35], "haven": [4, 5], "t": [4, 5, 22, 23, 35], "autosetupremot": [4, 5], "specifi": [4, 5], "u": [4, 5], "origin": [4, 5], "branch_nam": [4, 5], "global": [4, 5, 25], "make": [4, 5, 16, 17, 25, 35], "sure": [4, 5, 35], "least": [4, 5], "37": [4, 5], "take": [4, 5, 7], "advantag": [4, 5], "ppa": [4, 5], "core": [4, 5], "defin": [4, 5, 14, 15], "persist": [4, 5], "variabl": [4, 5, 22, 23], "system": [4, 5], "echo": [4, 5, 7], "nexport": [4, 5], "pwd": [4, 5], "bashrc": [4, 5], "either": [4, 5], "specif": [4, 5], "plan": [4, 5], "contribut": [4, 5, 35], "skip": [4, 5], "offici": [4, 6], "guid": [4, 6], "apr": [4, 6], "2023": [4, 6], "525": [4, 6], "maximilienlc": [4, 6, 7], "dep": [4, 6, 7], "10": [4, 7, 29, 30], "r": [4, 7], "pipreq": [4, 7], "0_experiment_manag": [4, 7], "txt": [4, 7], "set": [4, 7, 14, 15, 16, 17, 27, 29, 35], "up": [4, 7, 16, 17, 35], "storag": [4, 7], "configur": [4, 7, 16, 17, 25], "ndriver": [4, 7], "overlai": [4, 7], "n": [4, 7], "graphroot": [4, 7], "conf": [4, 7], "compress": [4, 7], "cvf": [4, 7], "bolt_stat": [4, 7], "db": [4, 7], "rm": [4, 7], "libpod": [4, 7], "readi": [4, 7], "At": [4, 7], "begin": [4, 7], "job": [4, 7], "hydra": [4, 7, 16, 17, 25], "submitit": [4, 7], "copi": [4, 7, 14, 15], "over": [4, 7], "local": [4, 7, 35], "drive": [4, 7], "decompress": [4, 7], "necessari": [4, 7], "start": [4, 7, 16, 17], "averag": [4, 7], "around": [4, 7], "20": [4, 7], "2": 5, "linux": [5, 35], "slurm": [5, 16, 17, 35], "3": 7, "toolkit": 7, "annot": [10, 12, 14, 15, 22, 23, 27, 29, 32, 34], "fitter": [10, 17, 31, 32, 34], "non_empty_str": [11, 14, 15], "typealia": 11, "str_is_per_device_batch_s": [11, 14, 15], "string": 11, "per_device_batch_s": [11, 14, 15, 25], "str_is_fit_or_test": [11, 27, 29], "fit": [11, 16, 17, 25], "test": [11, 14, 15, 19, 20, 27, 29, 35], "str_is_cpu_or_gpu": [11, 14, 15], "gpu": [11, 14, 15, 16, 17, 25], "int_is_gt0": [11, 14, 15, 22, 23], "integ": 11, "int_is_ge0": [11, 14, 15], "float_is_ge0_le1": [11, 22, 23, 27, 29], "float": [11, 13, 16, 17, 19, 20, 22, 23, 27, 29, 30], "omegaconf": [13, 16, 17, 25], "dictconfig": [13, 16, 17, 25], "paramet": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30], "return": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 28, 29, 30], "loss": [13, 16, 17, 18, 19, 20, 21], "kei": 13, "basedataset": [14, 15], "val": [14, 15, 19, 20, 27, 29], "predict": [14, 15], "torch": [14, 15, 18, 19, 20, 21, 22, 23, 29, 30], "data": [14, 15, 25], "dataset": [14, 15, 27, 29], "tensor": [14, 15, 18, 19, 20, 21, 22, 23, 29, 30], "none": [14, 15, 16, 17, 25, 27, 28, 29], "basedatamoduleconfig": [14, 15, 27, 29], "data_dir": [14, 15], "path": [14, 15, 16, 17, 28], "per": [14, 15, 25], "devic": [14, 15, 25], "sampl": [14, 15], "iter": [14, 15, 25], "per_device_num_work": [14, 15], "process": [14, 15, 16, 17, 25], "assign": [14, 15], "device_typ": [14, 15], "basedatamodul": [14, 15, 16, 17, 27, 29], "lightn": [14, 15, 16, 17, 18, 21, 24, 31, 34], "lightningdatamodul": [14, 15], "With": [14, 15], "stage": [14, 15, 19, 20, 27, 29], "children": [14, 15], "properli": [14, 15], "attribut": [14, 15, 18, 21], "dict": [14, 15, 18, 21], "liter": [14, 15, 19, 20], "pin_memori": [14, 15], "whether": [14, 15], "pin": [14, 15], "memori": [14, 15], "default": [14, 15], "bool": [14, 15], "parent": [14, 15, 18, 19, 20, 21, 22, 23, 27, 29, 30], "constructor": [14, 15, 18, 19, 20, 21, 22, 23, 27, 29, 30], "load_state_dict": [14, 15], "state_dict": [14, 15], "batch": [14, 15, 18, 19, 20, 21, 22, 23, 25, 29, 30], "size": [14, 15, 25], "dictionari": [14, 15], "insid": [14, 15], "train_dataload": [14, 15], "dataload": [14, 15], "A": [14, 15, 18, 21, 28, 29, 30], "rais": [14, 15, 18, 21], "attributeerror": [14, 15, 18, 21], "val_dataload": [14, 15], "test_dataload": [14, 15], "predict_dataload": [14, 15], "shuffl": [14, 15], "torch_compile_minimum_cuda_vers": 16, "7": [16, 17], "deeplearningfitt": [16, 17], "deep": [16, 17], "learn": [16, 17], "entri": [16, 17], "point": [16, 17], "It": [16, 17], "act": [16, 17], "an": [16, 17, 19, 20, 25], "interfac": [16, 17], "between": [16, 17], "launcher": [16, 17], "sweeper": [16, 17, 25], "trainer": [16, 17, 25], "logger": [16, 17], "instanti": [16, 17, 18, 21, 25], "num_nod": [16, 17], "x": [16, 17, 22, 23, 29, 30], "num_gpus_per_nod": [16, 17], "deeplearningfitterconfig": [16, 17], "wandblogg": [16, 17], "litmodul": [16, 17, 26, 29, 31, 32, 34], "baselitmodul": [16, 17, 18, 19, 20, 21], "datamodul": [16, 17, 26, 28, 29, 31, 32, 34], "transform": [16, 17, 27, 29], "object": [16, 17], "hardwar": [16, 17], "checkpoint": [16, 17, 25], "resum": [16, 17, 25], "applic": [16, 17, 32, 34], "instantiate_lightning_object": [16, 17], "offlin": [16, 17], "mode": [16, 17], "compil": [16, 17], "cuda": [16, 17], "set_batch_size_and_num_work": [16, 17], "hpo": [16, 17], "find": [16, 17, 25], "good": [16, 17], "batch_siz": [16, 17, 19, 20, 22, 23, 29, 30], "num_work": [16, 17, 25], "see": [16, 17], "find_good_batch_s": [16, 17], "find_good_num_work": [16, 17, 25], "more": [16, 17], "detail": [16, 17], "assumpt": [16, 17, 25], "hyper": [16, 17, 25], "optim": [16, 17, 18, 19, 20, 21, 25, 29, 30], "same": [16, 17, 25], "wa": [16, 17], "therefor": [16, 17], "again": [16, 17], "look": [16, 17], "set_checkpoint_path": [16, 17], "three": [16, 17], "case": [16, 17, 22, 23], "consid": [16, 17], "load_path_hpo": [16, 17], "custom": [16, 17], "connector": [16, 17, 25], "overrid": [16, 17], "load_path": [16, 17], "regular": [16, 17], "neither": [16, 17], "nor": [16, 17], "method": [16, 17, 18, 21], "model": [16, 17, 22, 23], "final": [16, 17], "nnmodul": [17, 18, 19, 20, 21, 29, 30, 31, 32, 34], "nn": [18, 19, 20, 21, 22, 23, 29, 30], "functool": [18, 19, 20, 21, 29, 30], "partial": [18, 19, 20, 21, 29, 30], "lrschedul": [18, 19, 20, 21, 29, 30], "lr_schedul": [18, 19, 20, 21, 29, 30], "lightningmodul": [18, 21], "subclass": [18, 21], "implement": [18, 21], "store": [18, 21], "argument": [18, 21], "training_step": [18, 21], "jaxtyp": [18, 19, 20, 21, 22, 23, 29, 30], "num": [18, 21], "tupl": [18, 19, 20, 21, 22, 23, 27, 29], "ellipsi": [18, 21], "list": [18, 21, 22, 23], "callabl": [18, 21], "validation_step": [18, 21], "kwarg": [18, 21], "test_step": [18, 21], "configure_optim": [18, 21], "str": [18, 21], "int": [18, 19, 20, 21, 25, 30], "nest": [18, 21], "baseclassificationlitmoduleconfig": [19, 20, 30], "num_class": [19, 20, 30], "baseclassificationlitmodul": [19, 20, 29, 30], "accuraci": [19, 20, 29, 30], "metric": [19, 20, 29, 30], "torchmetr": [19, 20, 29, 30], "x_shape": [19, 20], "cross": [19, 20], "entropi": [19, 20], "mlpconfig": [22, 23], "activation_fn": [22, 23], "multi": [22, 23], "layer": [22, 23], "perceptron": [22, 23], "dropout": [22, 23], "probabl": [22, 23], "initi": [22, 23, 25], "forward": [22, 23, 29, 30], "d_input": [22, 23], "output_s": [22, 23], "flatten": [22, 23], "input": [22, 23], "dimens": [22, 23], "isn": [22, 23], "yet": [22, 23], "where": [22, 23], "multidimension": [22, 23], "vector": [22, 23], "dim": [22, 23], "p_dropout": [22, 23], "find_good_per_device_batch_s": 25, "alwai": 25, "correct": 25, "reason": 25, "As": 25, "long": 25, "total_batch_s": 25, "dataset_s": 25, "ratio": 25, "small": 25, "g": 25, "01": 25, "benefit": 25, "stochast": 25, "gradient": 25, "larger": 25, "yield": 25, "faster": 25, "smaller": 25, "disk": 25, "ram": 25, "bottleneck": 25, "vram": 25, "multipl": 25, "roughli": 25, "amount": 25, "estim": 25, "proper": 25, "max_num_data_pass": 25, "500": 25, "maximum": 25, "worker": 25, "initoptimparamscheckpointconnector": 25, "checkpoint_connector": 25, "_checkpointconnector": 25, "newli": 25, "differ": 25, "pbt": 25, "restore_optim": 25, "restor": 25, "preserv": 25, "param": 25, "mnist_classif": [26, 31, 32, 34], "datamodule_test": [26, 29, 31, 34], "mnistclassificationdatamoduleconfig": [27, 29], "val_percentag": [27, 29], "fit_dataset_mean": [27, 29], "1307": [27, 29], "fit_dataset_std": [27, 29], "3081": [27, 29], "mnistclassificationdatamodul": [27, 28, 29], "train_val_split": [27, 29], "split": [27, 29], "sum": [27, 29], "torchvis": [27, 29], "compos": [27, 29], "hint": [27, 29], "prepare_data": [27, 29], "setup": [27, 29], "tmp_path": 28, "pathlib": 28, "mnistdatamodul": 28, "test_setup_fit": 28, "test_setup_test": 28, "mnistclassificationlitmodul": [29, 30], "schedul": [29, 30], "28": [29, 30], "logit": [29, 30], "mnistclassificationlitmoduleconfig": 30, "experi": [31, 32, 34], "__main__": [31, 32, 34], "deeplearn": [32, 34], "neuroevolut": [32, 34], "auto": 34, "sphinx": 34, "autoapi": 34, "project": 35, "under": 35, "develop": 35, "cluster": 35, "code": 35, "doesn": 35, "break": 35, "vscode": 35, "workflow": 35, "freez": 35, "repositori": 35, "public": 35, "api": 35, "refer": 35}, "objects": {"": [[32, 0, 0, "-", "cneuromax"]], "cneuromax": [[8, 0, 0, "-", "application"], [10, 0, 0, "-", "common"], [31, 0, 0, "-", "deeplearning"], [33, 0, 0, "-", "neuroevolution"]], "cneuromax.common": [[9, 0, 0, "-", "fitter"], [12, 0, 0, "-", "utils"]], "cneuromax.common.utils": [[11, 0, 0, "-", "annotations"]], "cneuromax.common.utils.annotations": [[11, 1, 1, "", "float_is_ge0_le1"], [11, 1, 1, "", "int_is_ge0"], [11, 1, 1, "", "int_is_gt0"], [11, 1, 1, "", "non_empty_str"], [11, 1, 1, "", "str_is_cpu_or_gpu"], [11, 1, 1, "", "str_is_fit_or_test"], [11, 1, 1, "", "str_is_per_device_batch_size"]], "cneuromax.deeplearning": [[13, 0, 0, "-", "__main__"], [17, 0, 0, "-", "common"], [26, 0, 0, "-", "experiment"]], "cneuromax.deeplearning.__main__": [[13, 1, 1, "", "key"], [13, 2, 1, "", "run"]], "cneuromax.deeplearning.common": [[17, 3, 1, "", "DeepLearningFitter"], [15, 0, 0, "-", "datamodule"], [16, 0, 0, "-", "fitter"], [21, 0, 0, "-", "litmodule"], [22, 0, 0, "-", "nnmodule"], [24, 0, 0, "-", "utils"]], "cneuromax.deeplearning.common.DeepLearningFitter": [[17, 4, 1, "", "config"], [17, 4, 1, "", "datamodule"], [17, 5, 1, "", "fit"], [17, 5, 1, "", "instantiate_lightning_objects"], [17, 4, 1, "", "litmodule"], [17, 4, 1, "", "logger"], [17, 5, 1, "", "set_batch_size_and_num_workers"], [17, 5, 1, "", "set_checkpoint_path"], [17, 4, 1, "", "trainer"]], "cneuromax.deeplearning.common.datamodule": [[15, 3, 1, "", "BaseDataModule"], [15, 3, 1, "", "BaseDataModuleConfig"], [15, 3, 1, "", "BaseDataset"], [14, 0, 0, "-", "base"]], "cneuromax.deeplearning.common.datamodule.BaseDataModule": [[15, 4, 1, "", "config"], [15, 4, 1, "", "dataset"], [15, 5, 1, "", "load_state_dict"], [15, 4, 1, "", "pin_memory"], [15, 5, 1, "", "predict_dataloader"], [15, 5, 1, "", "state_dict"], [15, 5, 1, "", "test_dataloader"], [15, 5, 1, "", "train_dataloader"], [15, 5, 1, "", "val_dataloader"]], "cneuromax.deeplearning.common.datamodule.BaseDataModuleConfig": [[15, 4, 1, "id0", "data_dir"], [15, 4, 1, "id3", "device_type"], [15, 4, 1, "id1", "per_device_batch_size"], [15, 4, 1, "id2", "per_device_num_workers"]], "cneuromax.deeplearning.common.datamodule.BaseDataset": [[15, 4, 1, "id7", "predict"], [15, 4, 1, "id6", "test"], [15, 4, 1, "id4", "train"], [15, 4, 1, "id5", "val"]], "cneuromax.deeplearning.common.datamodule.base": [[14, 3, 1, "", "BaseDataModule"], [14, 3, 1, "", "BaseDataModuleConfig"], [14, 3, 1, "", "BaseDataset"]], "cneuromax.deeplearning.common.datamodule.base.BaseDataModule": [[14, 4, 1, "", "config"], [14, 4, 1, "", "dataset"], [14, 5, 1, "", "load_state_dict"], [14, 4, 1, "", "pin_memory"], [14, 5, 1, "", "predict_dataloader"], [14, 5, 1, "", "state_dict"], [14, 5, 1, "", "test_dataloader"], [14, 5, 1, "", "train_dataloader"], [14, 5, 1, "", "val_dataloader"]], "cneuromax.deeplearning.common.datamodule.base.BaseDataModuleConfig": [[14, 4, 1, "id4", "data_dir"], [14, 4, 1, "id7", "device_type"], [14, 4, 1, "id5", "per_device_batch_size"], [14, 4, 1, "id6", "per_device_num_workers"]], "cneuromax.deeplearning.common.datamodule.base.BaseDataset": [[14, 4, 1, "id3", "predict"], [14, 4, 1, "id2", "test"], [14, 4, 1, "id0", "train"], [14, 4, 1, "id1", "val"]], "cneuromax.deeplearning.common.fitter": [[16, 3, 1, "", "DeepLearningFitter"], [16, 1, 1, "", "TORCH_COMPILE_MINIMUM_CUDA_VERSION"]], "cneuromax.deeplearning.common.fitter.DeepLearningFitter": [[16, 4, 1, "", "config"], [16, 4, 1, "", "datamodule"], [16, 5, 1, "", "fit"], [16, 5, 1, "", "instantiate_lightning_objects"], [16, 4, 1, "", "litmodule"], [16, 4, 1, "", "logger"], [16, 5, 1, "", "set_batch_size_and_num_workers"], [16, 5, 1, "", "set_checkpoint_path"], [16, 4, 1, "", "trainer"]], "cneuromax.deeplearning.common.litmodule": [[21, 3, 1, "", "BaseLitModule"], [18, 0, 0, "-", "base"], [20, 0, 0, "-", "classification"]], "cneuromax.deeplearning.common.litmodule.BaseLitModule": [[21, 5, 1, "", "configure_optimizers"], [21, 4, 1, "", "lrscheduler"], [21, 4, 1, "", "nnmodule"], [21, 4, 1, "", "optimizer"], [21, 5, 1, "", "test_step"], [21, 5, 1, "", "training_step"], [21, 5, 1, "", "validation_step"]], "cneuromax.deeplearning.common.litmodule.base": [[18, 3, 1, "", "BaseLitModule"]], "cneuromax.deeplearning.common.litmodule.base.BaseLitModule": [[18, 5, 1, "", "configure_optimizers"], [18, 4, 1, "", "lrscheduler"], [18, 4, 1, "", "nnmodule"], [18, 4, 1, "", "optimizer"], [18, 5, 1, "", "test_step"], [18, 5, 1, "", "training_step"], [18, 5, 1, "", "validation_step"]], "cneuromax.deeplearning.common.litmodule.classification": [[20, 3, 1, "", "BaseClassificationLitModule"], [20, 3, 1, "", "BaseClassificationLitModuleConfig"], [19, 0, 0, "-", "base"]], "cneuromax.deeplearning.common.litmodule.classification.BaseClassificationLitModule": [[20, 4, 1, "", "accuracy"], [20, 4, 1, "", "config"], [20, 5, 1, "", "step"]], "cneuromax.deeplearning.common.litmodule.classification.BaseClassificationLitModuleConfig": [[20, 4, 1, "id0", "num_classes"]], "cneuromax.deeplearning.common.litmodule.classification.base": [[19, 3, 1, "", "BaseClassificationLitModule"], [19, 3, 1, "", "BaseClassificationLitModuleConfig"]], "cneuromax.deeplearning.common.litmodule.classification.base.BaseClassificationLitModule": [[19, 4, 1, "", "accuracy"], [19, 4, 1, "", "config"], [19, 5, 1, "", "step"]], "cneuromax.deeplearning.common.litmodule.classification.base.BaseClassificationLitModuleConfig": [[19, 4, 1, "id0", "num_classes"]], "cneuromax.deeplearning.common.nnmodule": [[22, 3, 1, "", "MLP"], [22, 3, 1, "", "MLPConfig"], [23, 0, 0, "-", "mlp"]], "cneuromax.deeplearning.common.nnmodule.MLP": [[22, 5, 1, "", "forward"], [22, 4, 1, "", "model"]], "cneuromax.deeplearning.common.nnmodule.MLPConfig": [[22, 4, 1, "id0", "dims"], [22, 4, 1, "id1", "p_dropout"]], "cneuromax.deeplearning.common.nnmodule.mlp": [[23, 3, 1, "", "MLP"], [23, 3, 1, "", "MLPConfig"]], "cneuromax.deeplearning.common.nnmodule.mlp.MLP": [[23, 5, 1, "", "forward"], [23, 4, 1, "", "model"]], "cneuromax.deeplearning.common.nnmodule.mlp.MLPConfig": [[23, 4, 1, "id0", "dims"], [23, 4, 1, "id1", "p_dropout"]], "cneuromax.deeplearning.common.utils": [[25, 0, 0, "-", "lightning"]], "cneuromax.deeplearning.common.utils.lightning": [[25, 3, 1, "", "InitOptimParamsCheckpointConnector"], [25, 2, 1, "", "find_good_num_workers"], [25, 2, 1, "", "find_good_per_device_batch_size"]], "cneuromax.deeplearning.common.utils.lightning.InitOptimParamsCheckpointConnector": [[25, 5, 1, "", "restore_optimizers"]], "cneuromax.deeplearning.experiment": [[29, 0, 0, "-", "mnist_classification"]], "cneuromax.deeplearning.experiment.mnist_classification": [[29, 3, 1, "", "MNISTClassificationDataModule"], [29, 3, 1, "", "MNISTClassificationDataModuleConfig"], [29, 3, 1, "", "MNISTClassificationLitModule"], [27, 0, 0, "-", "datamodule"], [28, 0, 0, "-", "datamodule_test"], [30, 0, 0, "-", "litmodule"]], "cneuromax.deeplearning.experiment.mnist_classification.MNISTClassificationDataModule": [[29, 5, 1, "", "prepare_data"], [29, 5, 1, "", "setup"], [29, 4, 1, "", "train_val_split"], [29, 4, 1, "", "transform"]], "cneuromax.deeplearning.experiment.mnist_classification.MNISTClassificationDataModuleConfig": [[29, 4, 1, "", "fit_dataset_mean"], [29, 4, 1, "", "fit_dataset_std"], [29, 4, 1, "", "val_percentage"]], "cneuromax.deeplearning.experiment.mnist_classification.MNISTClassificationLitModule": [[29, 4, 1, "", "accuracy"], [29, 5, 1, "", "forward"], [29, 4, 1, "", "nnmodule"], [29, 4, 1, "", "optimizer"], [29, 4, 1, "", "scheduler"]], "cneuromax.deeplearning.experiment.mnist_classification.datamodule": [[27, 3, 1, "", "MNISTClassificationDataModule"], [27, 3, 1, "", "MNISTClassificationDataModuleConfig"]], "cneuromax.deeplearning.experiment.mnist_classification.datamodule.MNISTClassificationDataModule": [[27, 5, 1, "", "prepare_data"], [27, 5, 1, "", "setup"], [27, 4, 1, "", "train_val_split"], [27, 4, 1, "", "transform"]], "cneuromax.deeplearning.experiment.mnist_classification.datamodule.MNISTClassificationDataModuleConfig": [[27, 4, 1, "", "fit_dataset_mean"], [27, 4, 1, "", "fit_dataset_std"], [27, 4, 1, "", "val_percentage"]], "cneuromax.deeplearning.experiment.mnist_classification.datamodule_test": [[28, 2, 1, "", "datamodule"], [28, 2, 1, "", "test_setup_fit"], [28, 2, 1, "", "test_setup_test"]], "cneuromax.deeplearning.experiment.mnist_classification.litmodule": [[30, 3, 1, "", "MNISTClassificationLitModule"], [30, 3, 1, "", "MNISTClassificationLitModuleConfig"]], "cneuromax.deeplearning.experiment.mnist_classification.litmodule.MNISTClassificationLitModule": [[30, 4, 1, "", "accuracy"], [30, 5, 1, "", "forward"], [30, 4, 1, "", "nnmodule"], [30, 4, 1, "", "optimizer"], [30, 4, 1, "", "scheduler"]], "cneuromax.deeplearning.experiment.mnist_classification.litmodule.MNISTClassificationLitModuleConfig": [[30, 4, 1, "id0", "num_classes"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:function", "3": "py:class", "4": "py:attribute", "5": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "function", "Python function"], "3": ["py", "class", "Python class"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "method", "Python method"]}, "titleterms": {"contribut": 0, "develop": 0, "local": 0, "make": 0, "sure": 0, "code": 0, "doesn": 0, "t": 0, "break": 0, "test": 0, "set": 0, "up": 0, "vscode": 0, "git": 0, "github": 0, "workflow": 0, "freez": 0, "repositori": [0, 4, 5], "public": 0, "execut": 1, "On": [1, 2, 3, 4, 6, 7], "linux": [1, 2, 4, 6], "machin": [1, 2, 4, 5, 6], "run": [1, 2, 3], "python": [1, 2, 3], "script": [1, 2, 3], "notebook": [1, 2], "slurm": [1, 3, 4, 7], "cluster": [1, 3, 4, 7], "jupyt": [1, 3], "lab": [1, 3], "instal": [4, 6, 7], "common": [4, 5, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "all": [4, 5], "1": [4, 5, 6, 7], "setup": [4, 5], "nvidia": [4, 6], "driver": [4, 6], "2": [4, 6, 7], "podman": [4, 6, 7], "3": [4, 6], "contain": [4, 6], "toolkit": [4, 6], "4": [4, 6], "pull": [4, 6], "imag": [4, 6, 7], "experi": [4, 7, 26, 27, 28, 29, 30], "manag": [4, 7], "packag": [4, 7, 15, 17, 20, 21, 22, 29], "prepar": [4, 7], "us": [4, 7], "cneuromax": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35], "applic": 8, "fitter": [9, 16], "subpackag": [10, 17, 21, 26, 31, 32], "submodul": [10, 12, 15, 17, 20, 21, 22, 24, 29, 31], "util": [11, 12, 24, 25], "annot": 11, "modul": [11, 13, 14, 16, 18, 19, 23, 25, 27, 28, 30], "content": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 35], "deeplearn": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "__main__": 13, "function": [13, 25, 28], "attribut": [13, 16], "datamodul": [14, 15, 27], "base": [14, 18, 19], "class": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 29, 30], "litmodul": [18, 19, 20, 21, 30], "classif": [19, 20], "nnmodul": [22, 23], "mlp": 23, "lightn": 25, "mnist_classif": [27, 28, 29, 30], "datamodule_test": 28, "neuroevolut": 33, "api": 34, "refer": 34, "welcom": 35, "document": 35}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Contribution": [[0, "contribution"]], "Developping locally": [[0, "developping-locally"]], "Making sure the code doesn\u2019t break": [[0, "making-sure-the-code-doesn-t-break"]], "Testing locally": [[0, "testing-locally"]], "Setting up VSCode": [[0, "setting-up-vscode"]], "Git/GitHub workflow for contributing": [[0, "git-github-workflow-for-contributing"]], "Freezing the repositories for publication": [[0, "freezing-the-repositories-for-publication"]], "Execution": [[1, "execution"]], "On a Linux machine": [[1, "on-a-linux-machine"], [2, "on-a-linux-machine"], [4, "on-a-linux-machine"], [6, "on-a-linux-machine"]], "Run a python script": [[1, "run-a-python-script"], [1, "id1"], [2, "run-a-python-script"], [3, "run-a-python-script"]], "Run a notebook": [[1, "run-a-notebook"], [2, "run-a-notebook"]], "On a Slurm cluster": [[1, "on-a-slurm-cluster"], [3, "on-a-slurm-cluster"], [4, "on-a-slurm-cluster"], [7, "on-a-slurm-cluster"]], "Run Jupyter-lab": [[1, "run-jupyter-lab"], [3, "run-jupyter-lab"]], "Installation": [[4, "installation"]], "Common to all machines": [[4, "common-to-all-machines"], [5, "common-to-all-machines"]], "1. Setup the repository": [[4, "setup-the-repository"], [5, "setup-the-repository"]], "1. Install the NVIDIA driver": [[4, "install-the-nvidia-driver"], [6, "install-the-nvidia-driver"]], "2. Install Podman": [[4, "install-podman"], [6, "install-podman"]], "3. Install the NVIDIA Container Toolkit": [[4, "install-the-nvidia-container-toolkit"], [6, "install-the-nvidia-container-toolkit"]], "4. Pull the Podman image": [[4, "pull-the-podman-image"], [6, "pull-the-podman-image"]], "1. Install the experiment manager packages": [[4, "install-the-experiment-manager-packages"], [7, "install-the-experiment-manager-packages"]], "2. Prepare the Podman image for use on the cluster": [[4, "prepare-the-podman-image-for-use-on-the-cluster"], [7, "prepare-the-podman-image-for-use-on-the-cluster"]], "cneuromax.application": [[8, "module-cneuromax.application"]], "cneuromax.common.fitter": [[9, "module-cneuromax.common.fitter"]], "cneuromax.common": [[10, "module-cneuromax.common"]], "Subpackages": [[10, "subpackages"], [17, "subpackages"], [21, "subpackages"], [26, "subpackages"], [31, "subpackages"], [32, "subpackages"]], "Submodules": [[10, "submodules"], [12, "submodules"], [15, "submodules"], [17, "submodules"], [20, "submodules"], [21, "submodules"], [22, "submodules"], [24, "submodules"], [29, "submodules"], [31, "submodules"]], "cneuromax.common.utils.annotations": [[11, "module-cneuromax.common.utils.annotations"]], "Module Contents": [[11, "module-contents"], [13, "module-contents"], [14, "module-contents"], [16, "module-contents"], [18, "module-contents"], [19, "module-contents"], [23, "module-contents"], [25, "module-contents"], [27, "module-contents"], [28, "module-contents"], [30, "module-contents"]], "cneuromax.common.utils": [[12, "module-cneuromax.common.utils"]], "cneuromax.deeplearning.__main__": [[13, "module-cneuromax.deeplearning.__main__"]], "Functions": [[13, "functions"], [25, "functions"], [28, "functions"]], "Attributes": [[13, "attributes"], [16, "attributes"]], "cneuromax.deeplearning.common.datamodule.base": [[14, "module-cneuromax.deeplearning.common.datamodule.base"]], "Classes": [[14, "classes"], [15, "classes"], [16, "classes"], [17, "classes"], [18, "classes"], [19, "classes"], [20, "classes"], [21, "classes"], [22, "classes"], [23, "classes"], [25, "classes"], [27, "classes"], [29, "classes"], [30, "classes"]], "cneuromax.deeplearning.common.datamodule": [[15, "module-cneuromax.deeplearning.common.datamodule"]], "Package Contents": [[15, "package-contents"], [17, "package-contents"], [20, "package-contents"], [21, "package-contents"], [22, "package-contents"], [29, "package-contents"]], "cneuromax.deeplearning.common.fitter": [[16, "module-cneuromax.deeplearning.common.fitter"]], "cneuromax.deeplearning.common": [[17, "module-cneuromax.deeplearning.common"]], "cneuromax.deeplearning.common.litmodule.base": [[18, "module-cneuromax.deeplearning.common.litmodule.base"]], "cneuromax.deeplearning.common.litmodule.classification.base": [[19, "module-cneuromax.deeplearning.common.litmodule.classification.base"]], "cneuromax.deeplearning.common.litmodule.classification": [[20, "module-cneuromax.deeplearning.common.litmodule.classification"]], "cneuromax.deeplearning.common.litmodule": [[21, "module-cneuromax.deeplearning.common.litmodule"]], "cneuromax.deeplearning.common.nnmodule": [[22, "module-cneuromax.deeplearning.common.nnmodule"]], "cneuromax.deeplearning.common.nnmodule.mlp": [[23, "module-cneuromax.deeplearning.common.nnmodule.mlp"]], "cneuromax.deeplearning.common.utils": [[24, "module-cneuromax.deeplearning.common.utils"]], "cneuromax.deeplearning.common.utils.lightning": [[25, "module-cneuromax.deeplearning.common.utils.lightning"]], "cneuromax.deeplearning.experiment": [[26, "module-cneuromax.deeplearning.experiment"]], "cneuromax.deeplearning.experiment.mnist_classification.datamodule": [[27, "module-cneuromax.deeplearning.experiment.mnist_classification.datamodule"]], "cneuromax.deeplearning.experiment.mnist_classification.datamodule_test": [[28, "module-cneuromax.deeplearning.experiment.mnist_classification.datamodule_test"]], "cneuromax.deeplearning.experiment.mnist_classification": [[29, "module-cneuromax.deeplearning.experiment.mnist_classification"]], "cneuromax.deeplearning.experiment.mnist_classification.litmodule": [[30, "module-cneuromax.deeplearning.experiment.mnist_classification.litmodule"]], "cneuromax.deeplearning": [[31, "module-cneuromax.deeplearning"]], "cneuromax": [[32, "module-cneuromax"]], "cneuromax.neuroevolution": [[33, "module-cneuromax.neuroevolution"]], "API Reference": [[34, "api-reference"]], "Welcome to the cneuromax documentation!": [[35, "welcome-to-the-cneuromax-documentation"]], "Contents": [[35, "contents"]]}, "indexentries": {"cneuromax.application": [[8, "module-cneuromax.application"]], "module": [[8, "module-cneuromax.application"], [9, "module-cneuromax.common.fitter"], [10, "module-cneuromax.common"], [11, "module-cneuromax.common.utils.annotations"], [12, "module-cneuromax.common.utils"], [13, "module-cneuromax.deeplearning.__main__"], [14, "module-cneuromax.deeplearning.common.datamodule.base"], [15, "module-cneuromax.deeplearning.common.datamodule"], [16, "module-cneuromax.deeplearning.common.fitter"], [17, "module-cneuromax.deeplearning.common"], [18, "module-cneuromax.deeplearning.common.litmodule.base"], [19, "module-cneuromax.deeplearning.common.litmodule.classification.base"], [20, "module-cneuromax.deeplearning.common.litmodule.classification"], [21, "module-cneuromax.deeplearning.common.litmodule"], [22, "module-cneuromax.deeplearning.common.nnmodule"], [23, "module-cneuromax.deeplearning.common.nnmodule.mlp"], [24, "module-cneuromax.deeplearning.common.utils"], [25, "module-cneuromax.deeplearning.common.utils.lightning"], [26, "module-cneuromax.deeplearning.experiment"], [27, "module-cneuromax.deeplearning.experiment.mnist_classification.datamodule"], [28, "module-cneuromax.deeplearning.experiment.mnist_classification.datamodule_test"], [29, "module-cneuromax.deeplearning.experiment.mnist_classification"], [30, "module-cneuromax.deeplearning.experiment.mnist_classification.litmodule"], [31, "module-cneuromax.deeplearning"], [32, "module-cneuromax"], [33, "module-cneuromax.neuroevolution"]], "cneuromax.common.fitter": [[9, "module-cneuromax.common.fitter"]], "cneuromax.common": [[10, "module-cneuromax.common"]], "cneuromax.common.utils.annotations": [[11, "module-cneuromax.common.utils.annotations"]], "float_is_ge0_le1 (in module cneuromax.common.utils.annotations)": [[11, "cneuromax.common.utils.annotations.float_is_ge0_le1"]], "int_is_ge0 (in module cneuromax.common.utils.annotations)": [[11, "cneuromax.common.utils.annotations.int_is_ge0"]], "int_is_gt0 (in module cneuromax.common.utils.annotations)": [[11, "cneuromax.common.utils.annotations.int_is_gt0"]], "non_empty_str (in module cneuromax.common.utils.annotations)": [[11, "cneuromax.common.utils.annotations.non_empty_str"]], "str_is_cpu_or_gpu (in module cneuromax.common.utils.annotations)": [[11, "cneuromax.common.utils.annotations.str_is_cpu_or_gpu"]], "str_is_fit_or_test (in module cneuromax.common.utils.annotations)": [[11, "cneuromax.common.utils.annotations.str_is_fit_or_test"]], "str_is_per_device_batch_size (in module cneuromax.common.utils.annotations)": [[11, "cneuromax.common.utils.annotations.str_is_per_device_batch_size"]], "cneuromax.common.utils": [[12, "module-cneuromax.common.utils"]], "cneuromax.deeplearning.__main__": [[13, "module-cneuromax.deeplearning.__main__"]], "key (in module cneuromax.deeplearning.__main__)": [[13, "cneuromax.deeplearning.__main__.key"]], "run() (in module cneuromax.deeplearning.__main__)": [[13, "cneuromax.deeplearning.__main__.run"]], "basedatamodule (class in cneuromax.deeplearning.common.datamodule.base)": [[14, "cneuromax.deeplearning.common.datamodule.base.BaseDataModule"]], "basedatamoduleconfig (class in cneuromax.deeplearning.common.datamodule.base)": [[14, "cneuromax.deeplearning.common.datamodule.base.BaseDataModuleConfig"]], "basedataset (class in cneuromax.deeplearning.common.datamodule.base)": [[14, "cneuromax.deeplearning.common.datamodule.base.BaseDataset"]], "cneuromax.deeplearning.common.datamodule.base": [[14, "module-cneuromax.deeplearning.common.datamodule.base"]], "config (cneuromax.deeplearning.common.datamodule.base.basedatamodule attribute)": [[14, "cneuromax.deeplearning.common.datamodule.base.BaseDataModule.config"]], "data_dir (cneuromax.deeplearning.common.datamodule.base.basedatamoduleconfig attribute)": [[14, "cneuromax.deeplearning.common.datamodule.base.BaseDataModuleConfig.data_dir"], [14, "id4"]], "dataset (cneuromax.deeplearning.common.datamodule.base.basedatamodule attribute)": [[14, "cneuromax.deeplearning.common.datamodule.base.BaseDataModule.dataset"]], "device_type (cneuromax.deeplearning.common.datamodule.base.basedatamoduleconfig attribute)": [[14, "cneuromax.deeplearning.common.datamodule.base.BaseDataModuleConfig.device_type"], [14, "id7"]], "load_state_dict() (cneuromax.deeplearning.common.datamodule.base.basedatamodule method)": [[14, "cneuromax.deeplearning.common.datamodule.base.BaseDataModule.load_state_dict"]], "per_device_batch_size (cneuromax.deeplearning.common.datamodule.base.basedatamoduleconfig attribute)": [[14, "cneuromax.deeplearning.common.datamodule.base.BaseDataModuleConfig.per_device_batch_size"], [14, "id5"]], "per_device_num_workers (cneuromax.deeplearning.common.datamodule.base.basedatamoduleconfig attribute)": [[14, "cneuromax.deeplearning.common.datamodule.base.BaseDataModuleConfig.per_device_num_workers"], [14, "id6"]], "pin_memory (cneuromax.deeplearning.common.datamodule.base.basedatamodule attribute)": [[14, "cneuromax.deeplearning.common.datamodule.base.BaseDataModule.pin_memory"]], "predict (cneuromax.deeplearning.common.datamodule.base.basedataset attribute)": [[14, "cneuromax.deeplearning.common.datamodule.base.BaseDataset.predict"], [14, "id3"]], "predict_dataloader() (cneuromax.deeplearning.common.datamodule.base.basedatamodule method)": [[14, "cneuromax.deeplearning.common.datamodule.base.BaseDataModule.predict_dataloader"]], "state_dict() (cneuromax.deeplearning.common.datamodule.base.basedatamodule method)": [[14, "cneuromax.deeplearning.common.datamodule.base.BaseDataModule.state_dict"]], "test (cneuromax.deeplearning.common.datamodule.base.basedataset attribute)": [[14, "cneuromax.deeplearning.common.datamodule.base.BaseDataset.test"], [14, "id2"]], "test_dataloader() (cneuromax.deeplearning.common.datamodule.base.basedatamodule method)": [[14, "cneuromax.deeplearning.common.datamodule.base.BaseDataModule.test_dataloader"]], "train (cneuromax.deeplearning.common.datamodule.base.basedataset attribute)": [[14, "cneuromax.deeplearning.common.datamodule.base.BaseDataset.train"], [14, "id0"]], "train_dataloader() (cneuromax.deeplearning.common.datamodule.base.basedatamodule method)": [[14, "cneuromax.deeplearning.common.datamodule.base.BaseDataModule.train_dataloader"]], "val (cneuromax.deeplearning.common.datamodule.base.basedataset attribute)": [[14, "cneuromax.deeplearning.common.datamodule.base.BaseDataset.val"], [14, "id1"]], "val_dataloader() (cneuromax.deeplearning.common.datamodule.base.basedatamodule method)": [[14, "cneuromax.deeplearning.common.datamodule.base.BaseDataModule.val_dataloader"]], "basedatamodule (class in cneuromax.deeplearning.common.datamodule)": [[15, "cneuromax.deeplearning.common.datamodule.BaseDataModule"]], "basedatamoduleconfig (class in cneuromax.deeplearning.common.datamodule)": [[15, "cneuromax.deeplearning.common.datamodule.BaseDataModuleConfig"]], "basedataset (class in cneuromax.deeplearning.common.datamodule)": [[15, "cneuromax.deeplearning.common.datamodule.BaseDataset"]], "cneuromax.deeplearning.common.datamodule": [[15, "module-cneuromax.deeplearning.common.datamodule"]], "config (cneuromax.deeplearning.common.datamodule.basedatamodule attribute)": [[15, "cneuromax.deeplearning.common.datamodule.BaseDataModule.config"]], "data_dir (cneuromax.deeplearning.common.datamodule.basedatamoduleconfig attribute)": [[15, "cneuromax.deeplearning.common.datamodule.BaseDataModuleConfig.data_dir"], [15, "id0"]], "dataset (cneuromax.deeplearning.common.datamodule.basedatamodule attribute)": [[15, "cneuromax.deeplearning.common.datamodule.BaseDataModule.dataset"]], "device_type (cneuromax.deeplearning.common.datamodule.basedatamoduleconfig attribute)": [[15, "cneuromax.deeplearning.common.datamodule.BaseDataModuleConfig.device_type"], [15, "id3"]], "load_state_dict() (cneuromax.deeplearning.common.datamodule.basedatamodule method)": [[15, "cneuromax.deeplearning.common.datamodule.BaseDataModule.load_state_dict"]], "per_device_batch_size (cneuromax.deeplearning.common.datamodule.basedatamoduleconfig attribute)": [[15, "cneuromax.deeplearning.common.datamodule.BaseDataModuleConfig.per_device_batch_size"], [15, "id1"]], "per_device_num_workers (cneuromax.deeplearning.common.datamodule.basedatamoduleconfig attribute)": [[15, "cneuromax.deeplearning.common.datamodule.BaseDataModuleConfig.per_device_num_workers"], [15, "id2"]], "pin_memory (cneuromax.deeplearning.common.datamodule.basedatamodule attribute)": [[15, "cneuromax.deeplearning.common.datamodule.BaseDataModule.pin_memory"]], "predict (cneuromax.deeplearning.common.datamodule.basedataset attribute)": [[15, "cneuromax.deeplearning.common.datamodule.BaseDataset.predict"], [15, "id7"]], "predict_dataloader() (cneuromax.deeplearning.common.datamodule.basedatamodule method)": [[15, "cneuromax.deeplearning.common.datamodule.BaseDataModule.predict_dataloader"]], "state_dict() (cneuromax.deeplearning.common.datamodule.basedatamodule method)": [[15, "cneuromax.deeplearning.common.datamodule.BaseDataModule.state_dict"]], "test (cneuromax.deeplearning.common.datamodule.basedataset attribute)": [[15, "cneuromax.deeplearning.common.datamodule.BaseDataset.test"], [15, "id6"]], "test_dataloader() (cneuromax.deeplearning.common.datamodule.basedatamodule method)": [[15, "cneuromax.deeplearning.common.datamodule.BaseDataModule.test_dataloader"]], "train (cneuromax.deeplearning.common.datamodule.basedataset attribute)": [[15, "cneuromax.deeplearning.common.datamodule.BaseDataset.train"], [15, "id4"]], "train_dataloader() (cneuromax.deeplearning.common.datamodule.basedatamodule method)": [[15, "cneuromax.deeplearning.common.datamodule.BaseDataModule.train_dataloader"]], "val (cneuromax.deeplearning.common.datamodule.basedataset attribute)": [[15, "cneuromax.deeplearning.common.datamodule.BaseDataset.val"], [15, "id5"]], "val_dataloader() (cneuromax.deeplearning.common.datamodule.basedatamodule method)": [[15, "cneuromax.deeplearning.common.datamodule.BaseDataModule.val_dataloader"]], "deeplearningfitter (class in cneuromax.deeplearning.common.fitter)": [[16, "cneuromax.deeplearning.common.fitter.DeepLearningFitter"]], "torch_compile_minimum_cuda_version (in module cneuromax.deeplearning.common.fitter)": [[16, "cneuromax.deeplearning.common.fitter.TORCH_COMPILE_MINIMUM_CUDA_VERSION"]], "cneuromax.deeplearning.common.fitter": [[16, "module-cneuromax.deeplearning.common.fitter"]], "config (cneuromax.deeplearning.common.fitter.deeplearningfitter attribute)": [[16, "cneuromax.deeplearning.common.fitter.DeepLearningFitter.config"]], "datamodule (cneuromax.deeplearning.common.fitter.deeplearningfitter attribute)": [[16, "cneuromax.deeplearning.common.fitter.DeepLearningFitter.datamodule"]], "fit() (cneuromax.deeplearning.common.fitter.deeplearningfitter method)": [[16, "cneuromax.deeplearning.common.fitter.DeepLearningFitter.fit"]], "instantiate_lightning_objects() (cneuromax.deeplearning.common.fitter.deeplearningfitter method)": [[16, "cneuromax.deeplearning.common.fitter.DeepLearningFitter.instantiate_lightning_objects"]], "litmodule (cneuromax.deeplearning.common.fitter.deeplearningfitter attribute)": [[16, "cneuromax.deeplearning.common.fitter.DeepLearningFitter.litmodule"]], "logger (cneuromax.deeplearning.common.fitter.deeplearningfitter attribute)": [[16, "cneuromax.deeplearning.common.fitter.DeepLearningFitter.logger"]], "set_batch_size_and_num_workers() (cneuromax.deeplearning.common.fitter.deeplearningfitter method)": [[16, "cneuromax.deeplearning.common.fitter.DeepLearningFitter.set_batch_size_and_num_workers"]], "set_checkpoint_path() (cneuromax.deeplearning.common.fitter.deeplearningfitter method)": [[16, "cneuromax.deeplearning.common.fitter.DeepLearningFitter.set_checkpoint_path"]], "trainer (cneuromax.deeplearning.common.fitter.deeplearningfitter attribute)": [[16, "cneuromax.deeplearning.common.fitter.DeepLearningFitter.trainer"]], "deeplearningfitter (class in cneuromax.deeplearning.common)": [[17, "cneuromax.deeplearning.common.DeepLearningFitter"]], "cneuromax.deeplearning.common": [[17, "module-cneuromax.deeplearning.common"]], "config (cneuromax.deeplearning.common.deeplearningfitter attribute)": [[17, "cneuromax.deeplearning.common.DeepLearningFitter.config"]], "datamodule (cneuromax.deeplearning.common.deeplearningfitter attribute)": [[17, "cneuromax.deeplearning.common.DeepLearningFitter.datamodule"]], "fit() (cneuromax.deeplearning.common.deeplearningfitter method)": [[17, "cneuromax.deeplearning.common.DeepLearningFitter.fit"]], "instantiate_lightning_objects() (cneuromax.deeplearning.common.deeplearningfitter method)": [[17, "cneuromax.deeplearning.common.DeepLearningFitter.instantiate_lightning_objects"]], "litmodule (cneuromax.deeplearning.common.deeplearningfitter attribute)": [[17, "cneuromax.deeplearning.common.DeepLearningFitter.litmodule"]], "logger (cneuromax.deeplearning.common.deeplearningfitter attribute)": [[17, "cneuromax.deeplearning.common.DeepLearningFitter.logger"]], "set_batch_size_and_num_workers() (cneuromax.deeplearning.common.deeplearningfitter method)": [[17, "cneuromax.deeplearning.common.DeepLearningFitter.set_batch_size_and_num_workers"]], "set_checkpoint_path() (cneuromax.deeplearning.common.deeplearningfitter method)": [[17, "cneuromax.deeplearning.common.DeepLearningFitter.set_checkpoint_path"]], "trainer (cneuromax.deeplearning.common.deeplearningfitter attribute)": [[17, "cneuromax.deeplearning.common.DeepLearningFitter.trainer"]], "baselitmodule (class in cneuromax.deeplearning.common.litmodule.base)": [[18, "cneuromax.deeplearning.common.litmodule.base.BaseLitModule"]], "cneuromax.deeplearning.common.litmodule.base": [[18, "module-cneuromax.deeplearning.common.litmodule.base"]], "configure_optimizers() (cneuromax.deeplearning.common.litmodule.base.baselitmodule method)": [[18, "cneuromax.deeplearning.common.litmodule.base.BaseLitModule.configure_optimizers"]], "lrscheduler (cneuromax.deeplearning.common.litmodule.base.baselitmodule attribute)": [[18, "cneuromax.deeplearning.common.litmodule.base.BaseLitModule.lrscheduler"]], "nnmodule (cneuromax.deeplearning.common.litmodule.base.baselitmodule attribute)": [[18, "cneuromax.deeplearning.common.litmodule.base.BaseLitModule.nnmodule"]], "optimizer (cneuromax.deeplearning.common.litmodule.base.baselitmodule attribute)": [[18, "cneuromax.deeplearning.common.litmodule.base.BaseLitModule.optimizer"]], "test_step() (cneuromax.deeplearning.common.litmodule.base.baselitmodule method)": [[18, "cneuromax.deeplearning.common.litmodule.base.BaseLitModule.test_step"]], "training_step() (cneuromax.deeplearning.common.litmodule.base.baselitmodule method)": [[18, "cneuromax.deeplearning.common.litmodule.base.BaseLitModule.training_step"]], "validation_step() (cneuromax.deeplearning.common.litmodule.base.baselitmodule method)": [[18, "cneuromax.deeplearning.common.litmodule.base.BaseLitModule.validation_step"]], "baseclassificationlitmodule (class in cneuromax.deeplearning.common.litmodule.classification.base)": [[19, "cneuromax.deeplearning.common.litmodule.classification.base.BaseClassificationLitModule"]], "baseclassificationlitmoduleconfig (class in cneuromax.deeplearning.common.litmodule.classification.base)": [[19, "cneuromax.deeplearning.common.litmodule.classification.base.BaseClassificationLitModuleConfig"]], "accuracy (cneuromax.deeplearning.common.litmodule.classification.base.baseclassificationlitmodule attribute)": [[19, "cneuromax.deeplearning.common.litmodule.classification.base.BaseClassificationLitModule.accuracy"]], "cneuromax.deeplearning.common.litmodule.classification.base": [[19, "module-cneuromax.deeplearning.common.litmodule.classification.base"]], "config (cneuromax.deeplearning.common.litmodule.classification.base.baseclassificationlitmodule attribute)": [[19, "cneuromax.deeplearning.common.litmodule.classification.base.BaseClassificationLitModule.config"]], "num_classes (cneuromax.deeplearning.common.litmodule.classification.base.baseclassificationlitmoduleconfig attribute)": [[19, "cneuromax.deeplearning.common.litmodule.classification.base.BaseClassificationLitModuleConfig.num_classes"], [19, "id0"]], "step() (cneuromax.deeplearning.common.litmodule.classification.base.baseclassificationlitmodule method)": [[19, "cneuromax.deeplearning.common.litmodule.classification.base.BaseClassificationLitModule.step"]], "baseclassificationlitmodule (class in cneuromax.deeplearning.common.litmodule.classification)": [[20, "cneuromax.deeplearning.common.litmodule.classification.BaseClassificationLitModule"]], "baseclassificationlitmoduleconfig (class in cneuromax.deeplearning.common.litmodule.classification)": [[20, "cneuromax.deeplearning.common.litmodule.classification.BaseClassificationLitModuleConfig"]], "accuracy (cneuromax.deeplearning.common.litmodule.classification.baseclassificationlitmodule attribute)": [[20, "cneuromax.deeplearning.common.litmodule.classification.BaseClassificationLitModule.accuracy"]], "cneuromax.deeplearning.common.litmodule.classification": [[20, "module-cneuromax.deeplearning.common.litmodule.classification"]], "config (cneuromax.deeplearning.common.litmodule.classification.baseclassificationlitmodule attribute)": [[20, "cneuromax.deeplearning.common.litmodule.classification.BaseClassificationLitModule.config"]], "num_classes (cneuromax.deeplearning.common.litmodule.classification.baseclassificationlitmoduleconfig attribute)": [[20, "cneuromax.deeplearning.common.litmodule.classification.BaseClassificationLitModuleConfig.num_classes"], [20, "id0"]], "step() (cneuromax.deeplearning.common.litmodule.classification.baseclassificationlitmodule method)": [[20, "cneuromax.deeplearning.common.litmodule.classification.BaseClassificationLitModule.step"]], "baselitmodule (class in cneuromax.deeplearning.common.litmodule)": [[21, "cneuromax.deeplearning.common.litmodule.BaseLitModule"]], "cneuromax.deeplearning.common.litmodule": [[21, "module-cneuromax.deeplearning.common.litmodule"]], "configure_optimizers() (cneuromax.deeplearning.common.litmodule.baselitmodule method)": [[21, "cneuromax.deeplearning.common.litmodule.BaseLitModule.configure_optimizers"]], "lrscheduler (cneuromax.deeplearning.common.litmodule.baselitmodule attribute)": [[21, "cneuromax.deeplearning.common.litmodule.BaseLitModule.lrscheduler"]], "nnmodule (cneuromax.deeplearning.common.litmodule.baselitmodule attribute)": [[21, "cneuromax.deeplearning.common.litmodule.BaseLitModule.nnmodule"]], "optimizer (cneuromax.deeplearning.common.litmodule.baselitmodule attribute)": [[21, "cneuromax.deeplearning.common.litmodule.BaseLitModule.optimizer"]], "test_step() (cneuromax.deeplearning.common.litmodule.baselitmodule method)": [[21, "cneuromax.deeplearning.common.litmodule.BaseLitModule.test_step"]], "training_step() (cneuromax.deeplearning.common.litmodule.baselitmodule method)": [[21, "cneuromax.deeplearning.common.litmodule.BaseLitModule.training_step"]], "validation_step() (cneuromax.deeplearning.common.litmodule.baselitmodule method)": [[21, "cneuromax.deeplearning.common.litmodule.BaseLitModule.validation_step"]], "mlp (class in cneuromax.deeplearning.common.nnmodule)": [[22, "cneuromax.deeplearning.common.nnmodule.MLP"]], "mlpconfig (class in cneuromax.deeplearning.common.nnmodule)": [[22, "cneuromax.deeplearning.common.nnmodule.MLPConfig"]], "cneuromax.deeplearning.common.nnmodule": [[22, "module-cneuromax.deeplearning.common.nnmodule"]], "dims (cneuromax.deeplearning.common.nnmodule.mlpconfig attribute)": [[22, "cneuromax.deeplearning.common.nnmodule.MLPConfig.dims"], [22, "id0"]], "forward() (cneuromax.deeplearning.common.nnmodule.mlp method)": [[22, "cneuromax.deeplearning.common.nnmodule.MLP.forward"]], "model (cneuromax.deeplearning.common.nnmodule.mlp attribute)": [[22, "cneuromax.deeplearning.common.nnmodule.MLP.model"]], "p_dropout (cneuromax.deeplearning.common.nnmodule.mlpconfig attribute)": [[22, "cneuromax.deeplearning.common.nnmodule.MLPConfig.p_dropout"], [22, "id1"]], "mlp (class in cneuromax.deeplearning.common.nnmodule.mlp)": [[23, "cneuromax.deeplearning.common.nnmodule.mlp.MLP"]], "mlpconfig (class in cneuromax.deeplearning.common.nnmodule.mlp)": [[23, "cneuromax.deeplearning.common.nnmodule.mlp.MLPConfig"]], "cneuromax.deeplearning.common.nnmodule.mlp": [[23, "module-cneuromax.deeplearning.common.nnmodule.mlp"]], "dims (cneuromax.deeplearning.common.nnmodule.mlp.mlpconfig attribute)": [[23, "cneuromax.deeplearning.common.nnmodule.mlp.MLPConfig.dims"], [23, "id0"]], "forward() (cneuromax.deeplearning.common.nnmodule.mlp.mlp method)": [[23, "cneuromax.deeplearning.common.nnmodule.mlp.MLP.forward"]], "model (cneuromax.deeplearning.common.nnmodule.mlp.mlp attribute)": [[23, "cneuromax.deeplearning.common.nnmodule.mlp.MLP.model"]], "p_dropout (cneuromax.deeplearning.common.nnmodule.mlp.mlpconfig attribute)": [[23, "cneuromax.deeplearning.common.nnmodule.mlp.MLPConfig.p_dropout"], [23, "id1"]], "cneuromax.deeplearning.common.utils": [[24, "module-cneuromax.deeplearning.common.utils"]], "initoptimparamscheckpointconnector (class in cneuromax.deeplearning.common.utils.lightning)": [[25, "cneuromax.deeplearning.common.utils.lightning.InitOptimParamsCheckpointConnector"]], "cneuromax.deeplearning.common.utils.lightning": [[25, "module-cneuromax.deeplearning.common.utils.lightning"]], "find_good_num_workers() (in module cneuromax.deeplearning.common.utils.lightning)": [[25, "cneuromax.deeplearning.common.utils.lightning.find_good_num_workers"]], "find_good_per_device_batch_size() (in module cneuromax.deeplearning.common.utils.lightning)": [[25, "cneuromax.deeplearning.common.utils.lightning.find_good_per_device_batch_size"]], "restore_optimizers() (cneuromax.deeplearning.common.utils.lightning.initoptimparamscheckpointconnector method)": [[25, "cneuromax.deeplearning.common.utils.lightning.InitOptimParamsCheckpointConnector.restore_optimizers"]], "cneuromax.deeplearning.experiment": [[26, "module-cneuromax.deeplearning.experiment"]], "mnistclassificationdatamodule (class in cneuromax.deeplearning.experiment.mnist_classification.datamodule)": [[27, "cneuromax.deeplearning.experiment.mnist_classification.datamodule.MNISTClassificationDataModule"]], "mnistclassificationdatamoduleconfig (class in cneuromax.deeplearning.experiment.mnist_classification.datamodule)": [[27, "cneuromax.deeplearning.experiment.mnist_classification.datamodule.MNISTClassificationDataModuleConfig"]], "cneuromax.deeplearning.experiment.mnist_classification.datamodule": [[27, "module-cneuromax.deeplearning.experiment.mnist_classification.datamodule"]], "fit_dataset_mean (cneuromax.deeplearning.experiment.mnist_classification.datamodule.mnistclassificationdatamoduleconfig attribute)": [[27, "cneuromax.deeplearning.experiment.mnist_classification.datamodule.MNISTClassificationDataModuleConfig.fit_dataset_mean"]], "fit_dataset_std (cneuromax.deeplearning.experiment.mnist_classification.datamodule.mnistclassificationdatamoduleconfig attribute)": [[27, "cneuromax.deeplearning.experiment.mnist_classification.datamodule.MNISTClassificationDataModuleConfig.fit_dataset_std"]], "prepare_data() (cneuromax.deeplearning.experiment.mnist_classification.datamodule.mnistclassificationdatamodule method)": [[27, "cneuromax.deeplearning.experiment.mnist_classification.datamodule.MNISTClassificationDataModule.prepare_data"]], "setup() (cneuromax.deeplearning.experiment.mnist_classification.datamodule.mnistclassificationdatamodule method)": [[27, "cneuromax.deeplearning.experiment.mnist_classification.datamodule.MNISTClassificationDataModule.setup"]], "train_val_split (cneuromax.deeplearning.experiment.mnist_classification.datamodule.mnistclassificationdatamodule attribute)": [[27, "cneuromax.deeplearning.experiment.mnist_classification.datamodule.MNISTClassificationDataModule.train_val_split"]], "transform (cneuromax.deeplearning.experiment.mnist_classification.datamodule.mnistclassificationdatamodule attribute)": [[27, "cneuromax.deeplearning.experiment.mnist_classification.datamodule.MNISTClassificationDataModule.transform"]], "val_percentage (cneuromax.deeplearning.experiment.mnist_classification.datamodule.mnistclassificationdatamoduleconfig attribute)": [[27, "cneuromax.deeplearning.experiment.mnist_classification.datamodule.MNISTClassificationDataModuleConfig.val_percentage"]], "cneuromax.deeplearning.experiment.mnist_classification.datamodule_test": [[28, "module-cneuromax.deeplearning.experiment.mnist_classification.datamodule_test"]], "datamodule() (in module cneuromax.deeplearning.experiment.mnist_classification.datamodule_test)": [[28, "cneuromax.deeplearning.experiment.mnist_classification.datamodule_test.datamodule"]], "test_setup_fit() (in module cneuromax.deeplearning.experiment.mnist_classification.datamodule_test)": [[28, "cneuromax.deeplearning.experiment.mnist_classification.datamodule_test.test_setup_fit"]], "test_setup_test() (in module cneuromax.deeplearning.experiment.mnist_classification.datamodule_test)": [[28, "cneuromax.deeplearning.experiment.mnist_classification.datamodule_test.test_setup_test"]], "mnistclassificationdatamodule (class in cneuromax.deeplearning.experiment.mnist_classification)": [[29, "cneuromax.deeplearning.experiment.mnist_classification.MNISTClassificationDataModule"]], "mnistclassificationdatamoduleconfig (class in cneuromax.deeplearning.experiment.mnist_classification)": [[29, "cneuromax.deeplearning.experiment.mnist_classification.MNISTClassificationDataModuleConfig"]], "mnistclassificationlitmodule (class in cneuromax.deeplearning.experiment.mnist_classification)": [[29, "cneuromax.deeplearning.experiment.mnist_classification.MNISTClassificationLitModule"]], "accuracy (cneuromax.deeplearning.experiment.mnist_classification.mnistclassificationlitmodule attribute)": [[29, "cneuromax.deeplearning.experiment.mnist_classification.MNISTClassificationLitModule.accuracy"]], "cneuromax.deeplearning.experiment.mnist_classification": [[29, "module-cneuromax.deeplearning.experiment.mnist_classification"]], "fit_dataset_mean (cneuromax.deeplearning.experiment.mnist_classification.mnistclassificationdatamoduleconfig attribute)": [[29, "cneuromax.deeplearning.experiment.mnist_classification.MNISTClassificationDataModuleConfig.fit_dataset_mean"]], "fit_dataset_std (cneuromax.deeplearning.experiment.mnist_classification.mnistclassificationdatamoduleconfig attribute)": [[29, "cneuromax.deeplearning.experiment.mnist_classification.MNISTClassificationDataModuleConfig.fit_dataset_std"]], "forward() (cneuromax.deeplearning.experiment.mnist_classification.mnistclassificationlitmodule method)": [[29, "cneuromax.deeplearning.experiment.mnist_classification.MNISTClassificationLitModule.forward"]], "nnmodule (cneuromax.deeplearning.experiment.mnist_classification.mnistclassificationlitmodule attribute)": [[29, "cneuromax.deeplearning.experiment.mnist_classification.MNISTClassificationLitModule.nnmodule"]], "optimizer (cneuromax.deeplearning.experiment.mnist_classification.mnistclassificationlitmodule attribute)": [[29, "cneuromax.deeplearning.experiment.mnist_classification.MNISTClassificationLitModule.optimizer"]], "prepare_data() (cneuromax.deeplearning.experiment.mnist_classification.mnistclassificationdatamodule method)": [[29, "cneuromax.deeplearning.experiment.mnist_classification.MNISTClassificationDataModule.prepare_data"]], "scheduler (cneuromax.deeplearning.experiment.mnist_classification.mnistclassificationlitmodule attribute)": [[29, "cneuromax.deeplearning.experiment.mnist_classification.MNISTClassificationLitModule.scheduler"]], "setup() (cneuromax.deeplearning.experiment.mnist_classification.mnistclassificationdatamodule method)": [[29, "cneuromax.deeplearning.experiment.mnist_classification.MNISTClassificationDataModule.setup"]], "train_val_split (cneuromax.deeplearning.experiment.mnist_classification.mnistclassificationdatamodule attribute)": [[29, "cneuromax.deeplearning.experiment.mnist_classification.MNISTClassificationDataModule.train_val_split"]], "transform (cneuromax.deeplearning.experiment.mnist_classification.mnistclassificationdatamodule attribute)": [[29, "cneuromax.deeplearning.experiment.mnist_classification.MNISTClassificationDataModule.transform"]], "val_percentage (cneuromax.deeplearning.experiment.mnist_classification.mnistclassificationdatamoduleconfig attribute)": [[29, "cneuromax.deeplearning.experiment.mnist_classification.MNISTClassificationDataModuleConfig.val_percentage"]], "mnistclassificationlitmodule (class in cneuromax.deeplearning.experiment.mnist_classification.litmodule)": [[30, "cneuromax.deeplearning.experiment.mnist_classification.litmodule.MNISTClassificationLitModule"]], "mnistclassificationlitmoduleconfig (class in cneuromax.deeplearning.experiment.mnist_classification.litmodule)": [[30, "cneuromax.deeplearning.experiment.mnist_classification.litmodule.MNISTClassificationLitModuleConfig"]], "accuracy (cneuromax.deeplearning.experiment.mnist_classification.litmodule.mnistclassificationlitmodule attribute)": [[30, "cneuromax.deeplearning.experiment.mnist_classification.litmodule.MNISTClassificationLitModule.accuracy"]], "cneuromax.deeplearning.experiment.mnist_classification.litmodule": [[30, "module-cneuromax.deeplearning.experiment.mnist_classification.litmodule"]], "forward() (cneuromax.deeplearning.experiment.mnist_classification.litmodule.mnistclassificationlitmodule method)": [[30, "cneuromax.deeplearning.experiment.mnist_classification.litmodule.MNISTClassificationLitModule.forward"]], "nnmodule (cneuromax.deeplearning.experiment.mnist_classification.litmodule.mnistclassificationlitmodule attribute)": [[30, "cneuromax.deeplearning.experiment.mnist_classification.litmodule.MNISTClassificationLitModule.nnmodule"]], "num_classes (cneuromax.deeplearning.experiment.mnist_classification.litmodule.mnistclassificationlitmoduleconfig attribute)": [[30, "cneuromax.deeplearning.experiment.mnist_classification.litmodule.MNISTClassificationLitModuleConfig.num_classes"], [30, "id0"]], "optimizer (cneuromax.deeplearning.experiment.mnist_classification.litmodule.mnistclassificationlitmodule attribute)": [[30, "cneuromax.deeplearning.experiment.mnist_classification.litmodule.MNISTClassificationLitModule.optimizer"]], "scheduler (cneuromax.deeplearning.experiment.mnist_classification.litmodule.mnistclassificationlitmodule attribute)": [[30, "cneuromax.deeplearning.experiment.mnist_classification.litmodule.MNISTClassificationLitModule.scheduler"]], "cneuromax.deeplearning": [[31, "module-cneuromax.deeplearning"]], "cneuromax": [[32, "module-cneuromax"]], "cneuromax.neuroevolution": [[33, "module-cneuromax.neuroevolution"]]}})