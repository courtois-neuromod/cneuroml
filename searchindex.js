Search.setIndex({"docnames": ["Contribution", "Execution", "Execution_On_a_Linux_machine", "Execution_On_a_Slurm_cluster", "Installation", "Installation_Common_to_all_machines", "Installation_On_a_Linux_machine", "Installation_On_a_Slurm_cluster", "autoapi/cneuromax/application/index", "autoapi/cneuromax/common/index", "autoapi/cneuromax/common/launcher/index", "autoapi/cneuromax/common/launcher/local/index", "autoapi/cneuromax/common/launcher/slurm/index", "autoapi/cneuromax/common/logger/index", "autoapi/cneuromax/common/logger/wandb/index", "autoapi/cneuromax/deeplearning/__main__/index", "autoapi/cneuromax/deeplearning/common/datamodule/base/index", "autoapi/cneuromax/deeplearning/common/datamodule/index", "autoapi/cneuromax/deeplearning/common/fitter/index", "autoapi/cneuromax/deeplearning/common/index", "autoapi/cneuromax/deeplearning/common/litmodule/base/index", "autoapi/cneuromax/deeplearning/common/litmodule/classification/base/index", "autoapi/cneuromax/deeplearning/common/litmodule/classification/index", "autoapi/cneuromax/deeplearning/common/litmodule/index", "autoapi/cneuromax/deeplearning/common/lrscheduler/base/index", "autoapi/cneuromax/deeplearning/common/lrscheduler/constant/index", "autoapi/cneuromax/deeplearning/common/lrscheduler/index", "autoapi/cneuromax/deeplearning/common/lrscheduler/linear_warmup/index", "autoapi/cneuromax/deeplearning/common/nnmodule/index", "autoapi/cneuromax/deeplearning/common/nnmodule/mlp/index", "autoapi/cneuromax/deeplearning/common/optimizer/adam/index", "autoapi/cneuromax/deeplearning/common/optimizer/adamw/index", "autoapi/cneuromax/deeplearning/common/optimizer/base/index", "autoapi/cneuromax/deeplearning/common/optimizer/index", "autoapi/cneuromax/deeplearning/common/optimizer/sgd/index", "autoapi/cneuromax/deeplearning/common/trainer/base/index", "autoapi/cneuromax/deeplearning/common/trainer/cpu/index", "autoapi/cneuromax/deeplearning/common/trainer/ddp/index", "autoapi/cneuromax/deeplearning/common/trainer/index", "autoapi/cneuromax/deeplearning/common/utils/index", "autoapi/cneuromax/deeplearning/common/utils/lightning/index", "autoapi/cneuromax/deeplearning/experiment/index", "autoapi/cneuromax/deeplearning/experiment/mnist_classification/config/index", "autoapi/cneuromax/deeplearning/experiment/mnist_classification/datamodule/index", "autoapi/cneuromax/deeplearning/experiment/mnist_classification/datamodule_test/index", "autoapi/cneuromax/deeplearning/experiment/mnist_classification/index", "autoapi/cneuromax/deeplearning/experiment/mnist_classification/litmodule/index", "autoapi/cneuromax/deeplearning/index", "autoapi/cneuromax/index", "autoapi/cneuromax/neuroevolution/index", "autoapi/index", "index"], "filenames": ["Contribution.rst", "Execution.rst", "Execution_On_a_Linux_machine.rst", "Execution_On_a_Slurm_cluster.rst", "Installation.rst", "Installation_Common_to_all_machines.rst", "Installation_On_a_Linux_machine.rst", "Installation_On_a_Slurm_cluster.rst", "autoapi/cneuromax/application/index.rst", "autoapi/cneuromax/common/index.rst", "autoapi/cneuromax/common/launcher/index.rst", "autoapi/cneuromax/common/launcher/local/index.rst", "autoapi/cneuromax/common/launcher/slurm/index.rst", "autoapi/cneuromax/common/logger/index.rst", "autoapi/cneuromax/common/logger/wandb/index.rst", "autoapi/cneuromax/deeplearning/__main__/index.rst", "autoapi/cneuromax/deeplearning/common/datamodule/base/index.rst", "autoapi/cneuromax/deeplearning/common/datamodule/index.rst", "autoapi/cneuromax/deeplearning/common/fitter/index.rst", "autoapi/cneuromax/deeplearning/common/index.rst", "autoapi/cneuromax/deeplearning/common/litmodule/base/index.rst", "autoapi/cneuromax/deeplearning/common/litmodule/classification/base/index.rst", "autoapi/cneuromax/deeplearning/common/litmodule/classification/index.rst", "autoapi/cneuromax/deeplearning/common/litmodule/index.rst", "autoapi/cneuromax/deeplearning/common/lrscheduler/base/index.rst", "autoapi/cneuromax/deeplearning/common/lrscheduler/constant/index.rst", "autoapi/cneuromax/deeplearning/common/lrscheduler/index.rst", "autoapi/cneuromax/deeplearning/common/lrscheduler/linear_warmup/index.rst", "autoapi/cneuromax/deeplearning/common/nnmodule/index.rst", "autoapi/cneuromax/deeplearning/common/nnmodule/mlp/index.rst", "autoapi/cneuromax/deeplearning/common/optimizer/adam/index.rst", "autoapi/cneuromax/deeplearning/common/optimizer/adamw/index.rst", "autoapi/cneuromax/deeplearning/common/optimizer/base/index.rst", "autoapi/cneuromax/deeplearning/common/optimizer/index.rst", "autoapi/cneuromax/deeplearning/common/optimizer/sgd/index.rst", "autoapi/cneuromax/deeplearning/common/trainer/base/index.rst", "autoapi/cneuromax/deeplearning/common/trainer/cpu/index.rst", "autoapi/cneuromax/deeplearning/common/trainer/ddp/index.rst", "autoapi/cneuromax/deeplearning/common/trainer/index.rst", "autoapi/cneuromax/deeplearning/common/utils/index.rst", "autoapi/cneuromax/deeplearning/common/utils/lightning/index.rst", "autoapi/cneuromax/deeplearning/experiment/index.rst", "autoapi/cneuromax/deeplearning/experiment/mnist_classification/config/index.rst", "autoapi/cneuromax/deeplearning/experiment/mnist_classification/datamodule/index.rst", "autoapi/cneuromax/deeplearning/experiment/mnist_classification/datamodule_test/index.rst", "autoapi/cneuromax/deeplearning/experiment/mnist_classification/index.rst", "autoapi/cneuromax/deeplearning/experiment/mnist_classification/litmodule/index.rst", "autoapi/cneuromax/deeplearning/index.rst", "autoapi/cneuromax/index.rst", "autoapi/cneuromax/neuroevolution/index.rst", "autoapi/index.rst", "index.rst"], "titles": ["Contribution", "Execution", "On a Linux machine", "On a Slurm cluster", "Installation", "Common to all machines", "On a Linux machine", "On a Slurm cluster", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.application</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.common</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.common.launcher</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.common.launcher.local</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.common.launcher.slurm</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.common.logger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.common.logger.wandb</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.__main__</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.datamodule.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.datamodule</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.fitter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.litmodule.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.litmodule.classification.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.litmodule.classification</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.litmodule</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.lrscheduler.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.lrscheduler.constant</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.lrscheduler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.lrscheduler.linear_warmup</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.nnmodule</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.nnmodule.mlp</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.optimizer.adam</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.optimizer.adamw</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.optimizer.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.optimizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.optimizer.sgd</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.trainer.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.trainer.cpu</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.trainer.ddp</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.trainer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.utils.lightning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.experiment</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.experiment.mnist_classification.config</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.experiment.mnist_classification.datamodule</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.experiment.mnist_classification.datamodule_test</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.experiment.mnist_classification</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.experiment.mnist_classification.litmodule</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.neuroevolution</span></code>", "API Reference", "Welcome to the cneuromax documentation!"], "terms": {"have": [0, 4, 5], "complet": 0, "instal": [0, 1, 3, 5, 51], "step": [0, 4, 5, 12, 20, 21, 22, 23], "befor": [0, 12, 16, 17], "move": [0, 4, 5], "thi": [0, 4, 5, 13, 14, 16, 17, 18, 19, 28, 29, 40, 47, 50, 51], "section": [0, 4, 6], "link": 0, "http": [0, 25, 26, 27, 30, 31, 33, 34], "com": [0, 4, 5], "courtoi": [0, 4, 5], "neuromod": [0, 4, 5], "cneuromax": [0, 1, 2, 3, 4, 5, 6, 7, 50], "In": [0, 18], "order": 0, "you": [0, 4, 5, 40], "need": [0, 16, 17, 18, 20, 23, 24, 32], "depend": [0, 18], "can": [0, 4, 5], "done": 0, "run": [0, 4, 5, 6, 7, 12, 13, 14, 18, 40], "follow": [0, 4, 5, 6, 40], "command": [0, 4, 5, 7], "cd": [0, 1, 3, 4, 5], "cneuromax_path": [0, 1, 2, 3, 4, 5, 7], "python": [0, 4, 7], "m": [0, 1, 2, 3, 4, 7], "venv": [0, 1, 3, 4, 7], "bin": [0, 1, 3, 4, 7], "activ": [0, 1, 3, 4, 7, 28, 29, 51], "openmpi": 0, "": [0, 4, 16, 17, 20, 23], "alreadi": [0, 4, 5], "sudo": [0, 4, 5, 6], "apt": [0, 4, 5, 6], "y": [0, 4, 5, 6], "libopenmpi": 0, "dev": 0, "pip": [0, 4, 7], "extra": 0, "index": [0, 24], "url": 0, "download": [0, 43, 45], "pytorch": [0, 13, 14, 16, 17, 19, 20, 23, 30, 31, 33, 34, 35, 38, 40, 46, 47], "org": [0, 30, 31, 33, 34], "whl": 0, "cpu": [0, 16, 17, 19, 35, 38, 47, 50], "e": [0, 1, 2, 4, 5, 7, 40], "now": [0, 4, 5, 7], "all": [0, 7, 19, 51], "do": [0, 18], "note": [0, 18], "librari": [0, 1, 3, 4, 5, 8, 47, 48, 49], "version": [0, 4, 5, 6], "ar": [0, 4, 18, 40], "meant": 0, "actual": 0, "so": [0, 4, 40], "i": [0, 4, 5, 7, 16, 17, 18, 20, 23, 28, 29, 35, 38, 40, 47, 51], "prefer": 0, "work": 0, "contain": [0, 1, 3, 5, 7, 12, 19, 20, 23, 50], "reproduc": [0, 4], "purpos": 0, "The": [0, 4, 7, 13, 14, 16, 17, 18, 20, 21, 22, 23, 28, 29, 40, 43, 45, 46, 48], "main": [0, 18], "branch": 0, "protect": 0, "mean": [0, 16, 17], "happen": 0, "through": [0, 4, 7, 28, 29, 40, 46], "pull": [0, 5, 7], "request": 0, "rather": [0, 4, 5, 40], "than": [0, 4, 5, 16, 40], "direct": 0, "push": [0, 4, 5], "ani": [0, 16, 17], "go": 0, "pass": [0, 28, 29, 40, 46], "number": [0, 16, 17, 28, 29, 35, 38, 40], "common": [0, 43, 45, 46, 47, 48, 50, 51], "standard": 0, "check": [0, 35, 38], "ensur": 0, "high": 0, "qualiti": 0, "doe": [0, 16, 17], "portion": 0, "exist": 0, "base": [0, 12, 17, 19, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 40, 43, 45, 46, 47, 50], "those": 0, "clean": 0, "format": 0, "pep8": 0, "compliant": 0, "we": [0, 4, 7, 18], "us": [0, 16, 17, 18, 19, 40, 43, 45, 47], "black": 0, "79": 0, "line": 0, "72": 0, "comment": 0, "lint": 0, "ruff": 0, "rule": 0, "don": 0, "creat": [0, 1, 2, 3, 18, 21, 22, 43, 45, 50], "conflict": 0, "type": [0, 16, 17, 18, 20, 21, 22, 23, 28, 29, 35, 36, 38, 40, 43, 45, 46], "mypi": 0, "strict": 0, "unit": 0, "If": [0, 4, 5, 16, 17, 18, 20, 23, 40], "thei": 0, "your": [0, 1, 2, 3, 4, 5], "current": 0, "onli": 0, "leverag": 0, "pytest": 0, "most": 0, "like": 0, "eventu": 0, "broader": 0, "rest": 0, "document": [0, 18, 50], "file": [0, 4, 7], "doc8": 0, "yaml": [0, 1, 3, 12], "yamllint": 0, "trail": 0, "whitespac": 0, "regardless": 0, "extens": 0, "end": 0, "newlin": 0, "chang": 0, "made": 0, "pyreq": 0, "folder": [0, 4, 5, 7], "docker": [0, 4, 6, 7], "podman": [0, 1, 2, 3, 12], "imag": [0, 46], "still": 0, "built": 0, "doc": [0, 25, 26, 27, 30, 31, 33, 34], "page": [0, 50], "wait": 0, "ci": 0, "continu": 0, "integr": 0, "finish": 0, "verifi": 0, "some": 0, "fast": 0, "sub": 0, "1": [0, 16, 17, 35, 38, 43, 45, 46, 50], "second": [0, 4, 7], "quick": 0, "wai": 0, "execut": [0, 51], "them": [0, 16, 17], "pre": 0, "commit": 0, "hook": 0, "which": [0, 4, 7, 13, 14], "after": 0, "being": [0, 16, 17], "upon": 0, "each": [0, 16, 17, 20, 23, 28, 29, 40], "prevent": 0, "from": [0, 1, 2, 3, 16, 17, 18, 20, 23, 40], "fail": 0, "automat": 0, "import": 0, "function": [0, 18, 20, 23, 28, 29, 46], "well": 0, "To": 0, "disabl": 0, "behaviour": 0, "instanc": [0, 16, 17, 20, 23, 28, 29, 44, 46], "when": [0, 4, 5, 24], "re": 0, "want": 0, "deal": 0, "valid": [0, 16, 17, 18, 35, 38, 43, 45], "instead": 0, "slow": 0, "typecheck": 0, "slower": 0, "henc": 0, "suitabl": [0, 28, 29], "howev": 0, "pretti": 0, "save": [0, 18, 40], "time": 0, "right": 0, "merg": 0, "welcom": 0, "red": 0, "wave": 0, "error": 0, "warn": 0, "everi": [0, 4, 7], "suggest": 0, "editor": 0, "notifi": 0, "issu": 0, "On": [0, 51], "formatt": 0, "charliermarsh": 0, "lextudio": 0, "restructuredtext": 0, "enabl": [0, 4, 5], "fnando": 0, "linter": 0, "And": 0, "here": 0, "insert": 0, "config": [0, 4, 5, 7, 16, 17, 18, 28, 29, 40, 41, 43, 45, 47, 50], "user": [0, 1, 2, 3, 4, 5], "json": 0, "arg": 0, "pyproject": 0, "toml": 0, "defaultformatt": 0, "formatonsav": 0, "true": [0, 4, 5, 16, 17, 24, 32], "codeactionsonsav": 0, "sourc": [0, 4, 5], "organizeimport": 0, "mypyen": 0, "mypyarg": 0, "esbonio": 0, "server": 0, "fals": 0, "executablepath": 0, "home": [0, 4, 5], "max": 0, "syntaxhighlight": 0, "miscellan": 0, "insertfinalnewlin": 0, "trimtrailingwhitespac": 0, "pylanc": 0, "analysi": 0, "ignor": 0, "throw": 0, "incorrect": 0, "otherwis": 0, "redund": 0, "due": 0, "its": 0, "even": 0, "though": 0, "call": [0, 16, 17, 20, 21, 22, 23, 28, 29, 43, 45, 46], "appli": 0, "uninstal": 0, "ha": [0, 40], "other": 0, "featur": [0, 4, 5], "syntax": 0, "highlight": 0, "termin": 0, "window": 0, "directori": [0, 16, 17], "new": [0, 16, 17, 18], "checkout": 0, "b": [0, 18], "your_branch_nam": 0, "remot": 0, "add": [0, 4, 5], "commit_messag": 0, "been": 0, "introduct": 0, "while": [0, 18], "were": 0, "updat": [0, 4, 5, 35, 38, 40], "latest": [0, 1, 2, 3, 4, 6, 7], "stash": 0, "option": 0, "uncommit": 0, "rebas": 0, "pop": 0, "back": 0, "previou": 0, "block": 0, "might": 0, "forc": 0, "flag": [0, 4, 5], "Then": 0, "onc": [0, 18], "approv": 0, "delet": [0, 4, 7], "d": 0, "For": 0, "remain": [0, 40], "fork": 0, "todo": 0, "prune": 0, "instruct": [0, 18], "exampl": [1, 2, 3, 4, 5, 6], "simpl": [1, 2, 3, 46], "mnist": [1, 2, 3, 43, 45, 46], "train": [1, 2, 3, 16, 17, 18, 21, 22, 24, 35, 37, 38, 40, 43, 45], "pythonpath": [1, 2], "v": [1, 2, 3], "w": [1, 2, 3, 18, 40], "deps_onli": [1, 2, 3], "all_dep": [1, 2, 3], "python3": [1, 2, 3, 4, 7], "dl": [1, 2, 3], "task": [1, 2, 3], "visual": [1, 2, 3], "tabular": [1, 2, 3], "classif": [1, 2, 3, 19, 23, 46, 47, 50], "mlp": [1, 2, 19, 28, 47, 50], "own": [1, 2, 3], "ssh": [1, 2, 3], "tunnel": [1, 2, 3], "fill": [1, 2, 3], "appropri": [1, 2, 3, 40], "valu": [1, 2, 3, 16, 17, 18, 20, 23], "address": [1, 2, 3], "nl": [1, 2], "8888": [1, 2, 3], "localhost": [1, 2], "allow": [1, 2, 3, 28, 29], "root": [1, 2, 3], "ip": [1, 2, 3], "0": [1, 2, 12, 16, 17, 18, 26, 27, 28, 29, 30, 32, 33, 34, 40, 43, 45], "port": [1, 2, 3], "previous": [1, 3], "virtual": [1, 3], "environ": [1, 3], "mlp_slurm": [1, 3], "comput": [1, 3, 4, 7, 16, 17, 21, 22], "node": [1, 3, 4, 7, 11, 35, 38], "sshuttl": [1, 3], "dn": [1, 3], "nr": [1, 3], "salloc": [1, 3], "account": [1, 3, 12], "bash": [1, 3], "c": [1, 3], "modul": [1, 3, 4, 7, 17, 19, 22, 23, 28, 47], "load": [1, 3, 4, 7, 12, 16, 17, 40], "nvidia": [1, 3, 7, 12], "ctk": [1, 3, 12], "cdi": [1, 3, 12], "gener": [1, 3, 12, 30, 31, 33, 34, 40, 44, 50], "output": [1, 3, 12, 28, 29, 46], "var": [1, 3, 12], "tmp": [1, 3, 12], "mkdir": [1, 3, 4, 7], "p": [1, 3], "slurm_tmpdir": [1, 3, 4, 7], "scratch": [1, 3, 4, 7], "cp": [1, 3, 12], "tar": [1, 3, 4, 7], "xf": [1, 3], "hostnam": [1, 3], "f": [1, 3], "lab": 2, "jupyt": 2, "machin": [3, 51], "below": 4, "full": [4, 24], "cater": 4, "toward": 4, "ubuntu": [4, 6], "maxim": 4, "across": 4, "platform": 4, "util": [4, 16, 17, 19, 47, 48, 50], "technologi": 4, "desir": [4, 5, 16, 17], "clone": [4, 5], "git": [4, 5, 51], "github": [4, 5, 51], "haven": [4, 5], "t": [4, 5, 28, 29, 51], "autosetupremot": [4, 5], "specifi": [4, 5, 24, 32], "u": [4, 5], "origin": [4, 5], "branch_nam": [4, 5], "global": [4, 5, 18, 40], "make": [4, 5, 18, 40, 51], "sure": [4, 5, 51], "least": [4, 5, 19], "37": [4, 5], "take": [4, 5, 7], "advantag": [4, 5], "ppa": [4, 5], "core": [4, 5], "defin": [4, 5, 16, 17], "persist": [4, 5], "variabl": [4, 5, 28, 29], "system": [4, 5], "echo": [4, 5, 7], "nexport": [4, 5], "pwd": [4, 5], "bashrc": [4, 5], "either": [4, 5], "specif": [4, 5], "plan": [4, 5], "contribut": [4, 5, 51], "skip": [4, 5], "offici": [4, 6], "guid": [4, 6], "apr": [4, 6], "2023": [4, 6], "525": [4, 6], "maximilienlc": [4, 6, 7], "dep": [4, 6, 7], "10": [4, 7, 46], "r": [4, 7], "pipreq": [4, 7], "0_experiment_manag": [4, 7], "txt": [4, 7], "set": [4, 7, 16, 17, 18, 43, 45, 51], "up": [4, 7, 18, 51], "storag": [4, 7], "configur": [4, 7, 18, 40], "ndriver": [4, 7], "overlai": [4, 7], "n": [4, 7], "graphroot": [4, 7], "conf": [4, 7], "compress": [4, 7], "cvf": [4, 7], "bolt_stat": [4, 7], "db": [4, 7], "rm": [4, 7], "libpod": [4, 7], "readi": [4, 7], "At": [4, 7], "begin": [4, 7], "job": [4, 7, 11, 12], "hydra": [4, 7, 11, 18, 40, 47], "submitit": [4, 7, 11], "copi": [4, 7, 16, 17], "over": [4, 7], "local": [4, 7, 9, 10, 12, 48, 50, 51], "drive": [4, 7], "decompress": [4, 7], "necessari": [4, 7], "start": [4, 7, 18], "averag": [4, 7], "around": [4, 7], "20": [4, 7], "2": 5, "linux": [5, 51], "slurm": [5, 9, 10, 18, 48, 50, 51], "3": 7, "toolkit": 7, "compon": [8, 47, 49], "launcher": [9, 18, 48, 50], "logger": [9, 18, 47, 48, 50], "wandb": [9, 13, 47, 48, 50], "locallauncherconfig": [11, 12], "_target_": [11, 12, 13, 14, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 38], "cpus_per_task": 11, "num_gpus_per_nod": [11, 18], "num_mem_gb": 11, "name": [11, 13, 14], "num_nod": [11, 18, 35, 38], "submitit_fold": 11, "tasks_per_nod": 11, "timeout_min": 11, "length": 11, "minut": 11, "str": [11, 12, 13, 14, 16, 17, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 38], "hydra_plugin": [11, 12], "hydra_submitit_launch": [11, 12], "submitit_launch": [11, 12], "locallaunch": 11, "int": [11, 16, 17, 21, 22, 24, 26, 27, 28, 29, 35, 38, 40], "gpus_per_nod": 11, "mem_gb": 11, "sweep": 11, "dir": 11, "j": 11, "baseslurmlauncherconfig": 12, "target_": [12, 13, 14], "setup": [12, 43, 45], "slurmlaunch": 12, "rrg": 12, "pbellec": 12, "classvar": 12, "list": [12, 20, 23, 28, 29], "4": 12, "5": 12, "wandbloggerconfig": [13, 14], "project": [13, 14, 51], "belong": [13, 14], "lightn": [13, 14, 16, 17, 18, 19, 20, 23, 35, 38, 39, 47, 50], "wandblogg": [13, 14, 18, 47], "none": [13, 14, 16, 17, 18, 40, 43, 44, 45], "str_is_per_device_batch_s": [16, 17], "typealia": [16, 43], "runtim": [16, 43], "annot": [16, 17, 35, 38, 43], "string": [16, 43], "per_device_batch_s": [16, 17], "int_is_gt0": [16, 17], "an": [16, 18, 21, 22, 40], "integ": 16, "greater": 16, "basedataset": [16, 17], "val": [16, 17, 21, 22, 43, 45], "test": [16, 17, 21, 22, 43, 45, 51], "predict": [16, 17], "torch": [16, 17, 20, 21, 22, 23, 28, 29, 30, 31, 33, 34, 46, 47], "data": [16, 17, 40], "dataset": [16, 17, 43, 45], "tensor": [16, 17, 20, 21, 22, 23, 28, 29, 46, 47], "basedatamoduleconfig": [16, 17, 43, 45], "data_dir": [16, 17], "path": [16, 17, 18, 44], "per": [16, 17, 35, 38], "devic": [16, 17, 35, 38], "sampl": [16, 17], "iter": [16, 17, 40], "per_device_num_work": [16, 17], "process": [16, 17, 18, 40], "assign": [16, 17], "device_typ": [16, 17], "beartyp": [16, 17, 35, 38], "vale": [16, 17, 35, 38], "lambda": [16, 17, 35, 38], "x": [16, 17, 18, 28, 29, 35, 38, 46], "gpu": [16, 17, 18, 35, 38, 40], "basedatamodul": [16, 17, 18, 43, 45], "lightningdatamodul": [16, 17, 47], "With": [16, 17], "stage": [16, 17, 21, 22, 43, 45], "children": [16, 17], "properli": [16, 17], "dict": [16, 17], "liter": [16, 17, 21, 22], "pin_memori": [16, 17], "whether": [16, 17], "pin": [16, 17], "memori": [16, 17], "return": [16, 17, 18, 20, 21, 22, 23, 28, 29, 40, 44, 46], "default": [16, 17], "bool": [16, 17, 24, 32], "parent": [16, 17, 20, 21, 22, 23, 28, 29, 43, 45, 46], "constructor": [16, 17, 20, 21, 22, 23, 28, 29, 43, 45, 46], "paramet": [16, 17, 18, 20, 21, 22, 23, 28, 29, 32, 40, 43, 44, 45, 46, 47], "load_state_dict": [16, 17], "state_dict": [16, 17], "batch": [16, 17, 20, 21, 22, 23, 28, 29, 40, 46], "size": [16, 17, 40], "dictionari": [16, 17], "insid": [16, 17], "train_dataload": [16, 17], "dataload": [16, 17], "A": [16, 17, 20, 23, 44, 46], "rais": [16, 17, 20, 23], "attributeerror": [16, 17, 20, 23], "val_dataload": [16, 17], "test_dataload": [16, 17], "predict_dataload": [16, 17], "shuffl": [16, 17], "attribut": [17, 20, 23], "torch_compile_minimum_cuda_vers": 18, "7": 18, "omegaconf": [18, 40, 47], "dictconfig": [18, 40, 47], "deep": [18, 19, 39, 47], "learn": [18, 19, 32, 39, 47], "entri": 18, "point": 18, "It": 18, "act": 18, "interfac": 18, "between": [18, 35, 38], "sweeper": [18, 40], "trainer": [18, 19, 40, 47, 48, 50], "instanti": [18, 20, 23, 24, 32], "litmodul": [18, 19, 41, 45, 47, 48, 50], "baselitmodul": [18, 20, 21, 22, 23], "datamodul": [18, 19, 41, 44, 45, 47, 48, 50], "transform": [18, 25, 26, 27, 43, 45], "object": [18, 24], "hardwar": 18, "checkpoint": [18, 40], "resum": [18, 24, 40], "applic": [18, 48, 50], "instantiate_lightning_object": 18, "offlin": 18, "mode": 18, "compil": 18, "cuda": 18, "set_batch_size_and_num_work": 18, "hpo": [18, 47], "find": [18, 40], "good": 18, "batch_siz": [18, 21, 22, 28, 29, 40, 46], "num_work": [18, 40], "see": 18, "find_good_batch_s": [18, 40], "find_good_num_work": [18, 40], "more": [18, 19], "detail": 18, "assumpt": [18, 40], "hyper": [18, 47], "optim": [18, 19, 20, 21, 22, 23, 24, 40, 46, 47, 48, 50], "same": [18, 40], "wa": 18, "therefor": 18, "again": 18, "look": 18, "set_checkpoint_path": 18, "three": 18, "case": [18, 28, 29], "consid": 18, "load_path_hpo": 18, "custom": 18, "connector": [18, 40], "overrid": 18, "load_path": 18, "regular": 18, "neither": 18, "nor": 18, "fit": [18, 40, 43], "float": [18, 20, 21, 22, 23, 28, 29, 30, 32, 33, 34, 43, 45, 46, 47], "method": [18, 20, 23], "model": [18, 28, 29], "final": 18, "loss": [18, 20, 21, 22, 23], "ought": 19, "two": 19, "experi": [19, 47, 48, 50], "lrschedul": [19, 20, 21, 22, 23, 46, 47, 48, 50], "constant": [19, 26, 30, 33, 47, 50], "linear_warmup": [19, 26, 47, 50], "nnmodul": [19, 20, 21, 22, 23, 32, 46, 47, 48, 50], "adam": [19, 31, 33, 47, 50], "adamw": [19, 33, 47, 50], "sgd": [19, 33, 47, 50], "ddp": [19, 35, 38, 47, 50], "fitter": [19, 47, 48, 50], "nn": [20, 21, 22, 23, 28, 29, 46, 47], "optimizer_parti": [20, 21, 22, 23, 46], "functool": [20, 21, 22, 23, 46], "partial": [20, 21, 22, 23, 46], "scheduler_parti": [20, 21, 22, 23, 46], "lr_schedul": [20, 21, 22, 23, 46, 47], "lightningmodul": [20, 23, 47], "subclass": [20, 23], "implement": [20, 23], "schedul": [20, 21, 22, 23, 46], "store": [20, 23, 28, 29], "argument": [20, 23], "training_step": [20, 23], "jaxtyp": [20, 21, 22, 23, 28, 29, 46, 47], "tupl": [20, 21, 22, 23, 30, 33, 43, 45], "ellipsi": [20, 23], "callabl": [20, 23], "validation_step": [20, 23], "test_step": [20, 23], "configure_optim": [20, 23], "nest": [20, 23], "baseclassificationlitmodul": [21, 22, 46], "num_class": [21, 22], "accuraci": [21, 22, 46], "metric": [21, 22, 46], "torchmetr": [21, 22, 46], "x_shape": [21, 22], "cross": [21, 22], "entropi": [21, 22], "baselrschedulerconfig": [24, 25, 26, 27], "child": [24, 32], "_partial_": [24, 32], "requir": [24, 32], "last_epoch": 24, "last": 24, "epoch": 24, "constantconfig": [25, 26], "huggingfac": [25, 26, 27], "co": [25, 26, 27], "main_class": [25, 26, 27], "optimizer_schedul": [25, 26, 27], "get_constant_schedul": [25, 26], "num_warmup_step": [25, 26, 27], "linearwarmupconfig": [26, 27], "get_constant_schedule_with_warmup": [26, 27], "mlpconfig": [28, 29], "multi": [28, 29], "layer": [28, 29], "perceptron": [28, 29], "dropout": [28, 29], "probabl": [28, 29], "initi": [28, 29, 40], "forward": [28, 29, 46], "d_input": [28, 29], "output_s": [28, 29], "flatten": [28, 29], "input": [28, 29], "dimens": [28, 29], "isn": [28, 29], "yet": [28, 29], "where": [28, 29], "multidimension": [28, 29], "vector": [28, 29], "dim": [28, 29], "activation_fn": [28, 29], "p_dropout": [28, 29], "adamconfig": [30, 31, 33, 34], "baseoptimizerconfig": [30, 32, 33, 34], "stabl": [30, 31, 33, 34], "html": [30, 31, 33, 34], "beta": [30, 33], "exponenti": [30, 33], "decai": [30, 33], "rate": [30, 32, 33], "1st": [30, 33], "2nd": [30, 33], "moment": [30, 33], "estim": [30, 33, 40], "ep": [30, 33], "small": [30, 33, 40], "numer": [30, 33], "stabil": [30, 33], "9": [30, 33], "999": [30, 33], "1e": [30, 33], "08": [30, 33], "adamwconfig": [31, 33], "lr": 32, "weight_decai": 32, "l2": 32, "penalti": 32, "001": 32, "01": [32, 40], "momentum": 34, "basetrainerconfig": [35, 36, 37, 38], "acceler": [35, 36, 38], "strategi": [35, 37, 38], "precis": [35, 38], "max_step": [35, 38], "gradient": [35, 38, 40], "val_check_interv": [35, 38], "how": [35, 38], "mani": [35, 38], "log_every_n_step": [35, 38], "log": [35, 38], "action": [35, 38], "auto": [35, 38, 50], "deepspe": [35, 38], "32": [35, 38], "16": [35, 38], "bf16": [35, 38], "cputrain": [36, 38], "ddptrainer": [37, 38], "alwai": 40, "correct": 40, "reason": 40, "As": 40, "long": 40, "dataset_s": 40, "ratio": 40, "g": 40, "benefit": 40, "stochast": 40, "larger": 40, "yield": 40, "faster": 40, "smaller": 40, "disk": 40, "ram": 40, "bottleneck": 40, "vram": 40, "multipl": 40, "roughli": 40, "amount": 40, "proper": 40, "max_num_data_pass": 40, "500": 40, "maximum": 40, "worker": 40, "initoptimparamscheckpointconnector": 40, "checkpoint_connector": 40, "_checkpointconnector": 40, "newli": 40, "differ": 40, "pbt": 40, "restore_optim": 40, "restor": 40, "mnist_classif": [41, 47, 48, 50], "datamodule_test": [41, 45, 47, 50], "float_is_gt0_lt1": [43, 45], "str_is_fit_or_test": [43, 45], "mnistdatamoduleconfig": [43, 45], "val_percentag": [43, 45], "percentag": [43, 45], "fit_dataset_mean": [43, 45], "fit_dataset_std": [43, 45], "1307": [43, 45], "3081": [43, 45], "mnistdatamodul": [43, 44, 45], "train_val_split": [43, 45], "split": [43, 45], "sum": [43, 45], "torchvis": [43, 45], "compos": [43, 45], "hint": [43, 45], "prepare_data": [43, 45], "tmp_path": 44, "pathlib": 44, "test_setup_fit": 44, "test_setup_test": 44, "mnistclassificationlitmodul": 46, "28": 46, "logit": 46, "abbrevi": 47, "throughout": 47, "misc": 47, "short": 47, "__main__": [47, 48, 50], "deeplearn": [48, 50], "neuroevolut": [48, 50], "sphinx": 50, "autoapi": 50, "under": 51, "develop": 51, "cluster": 51, "code": 51, "doesn": 51, "break": 51, "vscode": 51, "workflow": 51, "freez": 51, "repositori": 51, "public": 51, "api": 51, "refer": 51}, "objects": {"": [[48, 0, 0, "-", "cneuromax"]], "cneuromax": [[8, 0, 0, "-", "application"], [9, 0, 0, "-", "common"], [47, 0, 0, "-", "deeplearning"], [49, 0, 0, "-", "neuroevolution"]], "cneuromax.common": [[10, 0, 0, "-", "launcher"], [13, 0, 0, "-", "logger"]], "cneuromax.common.launcher": [[11, 0, 0, "-", "local"], [12, 0, 0, "-", "slurm"]], "cneuromax.common.launcher.local": [[11, 1, 1, "", "LocalLauncherConfig"]], "cneuromax.common.launcher.local.LocalLauncherConfig": [[11, 2, 1, "id0", "_target_"], [11, 2, 1, "id1", "cpus_per_task"], [11, 2, 1, "", "gpus_per_node"], [11, 2, 1, "", "mem_gb"], [11, 2, 1, "id2", "name"], [11, 2, 1, "", "nodes"], [11, 2, 1, "", "num_gpus_per_node"], [11, 2, 1, "", "num_mem_gb"], [11, 2, 1, "", "num_nodes"], [11, 2, 1, "id3", "submitit_folder"], [11, 2, 1, "id4", "tasks_per_node"], [11, 2, 1, "id5", "timeout_min"]], "cneuromax.common.launcher.slurm": [[12, 1, 1, "", "BaseSlurmLauncherConfig"]], "cneuromax.common.launcher.slurm.BaseSlurmLauncherConfig": [[12, 2, 1, "", "_target_"], [12, 2, 1, "id0", "account"], [12, 2, 1, "id1", "setup"], [12, 2, 1, "", "target_"]], "cneuromax.common.logger": [[13, 1, 1, "", "WandbLoggerConfig"], [14, 0, 0, "-", "wandb"]], "cneuromax.common.logger.WandbLoggerConfig": [[13, 2, 1, "", "_target_"], [13, 2, 1, "id0", "name"], [13, 2, 1, "id1", "project"], [13, 2, 1, "", "target_"]], "cneuromax.common.logger.wandb": [[14, 1, 1, "", "WandbLoggerConfig"]], "cneuromax.common.logger.wandb.WandbLoggerConfig": [[14, 2, 1, "", "_target_"], [14, 2, 1, "id0", "name"], [14, 2, 1, "id1", "project"], [14, 2, 1, "", "target_"]], "cneuromax.deeplearning": [[15, 0, 0, "-", "__main__"], [19, 0, 0, "-", "common"], [41, 0, 0, "-", "experiment"]], "cneuromax.deeplearning.common": [[17, 0, 0, "-", "datamodule"], [18, 0, 0, "-", "fitter"], [23, 0, 0, "-", "litmodule"], [26, 0, 0, "-", "lrscheduler"], [28, 0, 0, "-", "nnmodule"], [33, 0, 0, "-", "optimizer"], [38, 0, 0, "-", "trainer"], [39, 0, 0, "-", "utils"]], "cneuromax.deeplearning.common.datamodule": [[17, 1, 1, "", "BaseDataModule"], [17, 1, 1, "", "BaseDataModuleConfig"], [17, 1, 1, "", "BaseDataset"], [16, 0, 0, "-", "base"]], "cneuromax.deeplearning.common.datamodule.BaseDataModule": [[17, 2, 1, "", "config"], [17, 2, 1, "", "dataset"], [17, 3, 1, "", "load_state_dict"], [17, 2, 1, "", "pin_memory"], [17, 3, 1, "", "predict_dataloader"], [17, 3, 1, "", "state_dict"], [17, 3, 1, "", "test_dataloader"], [17, 3, 1, "", "train_dataloader"], [17, 3, 1, "", "val_dataloader"]], "cneuromax.deeplearning.common.datamodule.BaseDataModuleConfig": [[17, 2, 1, "id0", "data_dir"], [17, 2, 1, "id3", "device_type"], [17, 2, 1, "id1", "per_device_batch_size"], [17, 2, 1, "id2", "per_device_num_workers"]], "cneuromax.deeplearning.common.datamodule.BaseDataset": [[17, 2, 1, "id7", "predict"], [17, 2, 1, "id6", "test"], [17, 2, 1, "id4", "train"], [17, 2, 1, "id5", "val"]], "cneuromax.deeplearning.common.datamodule.base": [[16, 1, 1, "", "BaseDataModule"], [16, 1, 1, "", "BaseDataModuleConfig"], [16, 1, 1, "", "BaseDataset"], [16, 4, 1, "", "int_is_gt0"], [16, 4, 1, "", "str_is_per_device_batch_size"]], "cneuromax.deeplearning.common.datamodule.base.BaseDataModule": [[16, 2, 1, "", "config"], [16, 2, 1, "", "dataset"], [16, 3, 1, "", "load_state_dict"], [16, 2, 1, "", "pin_memory"], [16, 3, 1, "", "predict_dataloader"], [16, 3, 1, "", "state_dict"], [16, 3, 1, "", "test_dataloader"], [16, 3, 1, "", "train_dataloader"], [16, 3, 1, "", "val_dataloader"]], "cneuromax.deeplearning.common.datamodule.base.BaseDataModuleConfig": [[16, 2, 1, "id4", "data_dir"], [16, 2, 1, "id7", "device_type"], [16, 2, 1, "id5", "per_device_batch_size"], [16, 2, 1, "id6", "per_device_num_workers"]], "cneuromax.deeplearning.common.datamodule.base.BaseDataset": [[16, 2, 1, "id3", "predict"], [16, 2, 1, "id2", "test"], [16, 2, 1, "id0", "train"], [16, 2, 1, "id1", "val"]], "cneuromax.deeplearning.common.fitter": [[18, 1, 1, "", "Fitter"], [18, 4, 1, "", "TORCH_COMPILE_MINIMUM_CUDA_VERSION"]], "cneuromax.deeplearning.common.fitter.Fitter": [[18, 2, 1, "", "config"], [18, 2, 1, "", "datamodule"], [18, 3, 1, "", "fit"], [18, 3, 1, "", "instantiate_lightning_objects"], [18, 2, 1, "", "litmodule"], [18, 2, 1, "", "logger"], [18, 3, 1, "", "set_batch_size_and_num_workers"], [18, 3, 1, "", "set_checkpoint_path"], [18, 2, 1, "", "trainer"]], "cneuromax.deeplearning.common.litmodule": [[23, 1, 1, "", "BaseLitModule"], [20, 0, 0, "-", "base"], [22, 0, 0, "-", "classification"]], "cneuromax.deeplearning.common.litmodule.BaseLitModule": [[23, 3, 1, "", "configure_optimizers"], [23, 2, 1, "", "nnmodule"], [23, 2, 1, "", "optimizer"], [23, 2, 1, "", "scheduler"], [23, 3, 1, "", "test_step"], [23, 3, 1, "", "training_step"], [23, 3, 1, "", "validation_step"]], "cneuromax.deeplearning.common.litmodule.base": [[20, 1, 1, "", "BaseLitModule"]], "cneuromax.deeplearning.common.litmodule.base.BaseLitModule": [[20, 3, 1, "", "configure_optimizers"], [20, 2, 1, "", "nnmodule"], [20, 2, 1, "", "optimizer"], [20, 2, 1, "", "scheduler"], [20, 3, 1, "", "test_step"], [20, 3, 1, "", "training_step"], [20, 3, 1, "", "validation_step"]], "cneuromax.deeplearning.common.litmodule.classification": [[22, 1, 1, "", "BaseClassificationLitModule"], [21, 0, 0, "-", "base"]], "cneuromax.deeplearning.common.litmodule.classification.BaseClassificationLitModule": [[22, 2, 1, "", "accuracy"], [22, 2, 1, "", "nnmodule"], [22, 2, 1, "", "optimizer"], [22, 2, 1, "", "scheduler"], [22, 3, 1, "", "step"]], "cneuromax.deeplearning.common.litmodule.classification.base": [[21, 1, 1, "", "BaseClassificationLitModule"]], "cneuromax.deeplearning.common.litmodule.classification.base.BaseClassificationLitModule": [[21, 2, 1, "", "accuracy"], [21, 2, 1, "", "nnmodule"], [21, 2, 1, "", "optimizer"], [21, 2, 1, "", "scheduler"], [21, 3, 1, "", "step"]], "cneuromax.deeplearning.common.lrscheduler": [[26, 1, 1, "", "ConstantConfig"], [26, 1, 1, "", "LinearWarmupConfig"], [24, 0, 0, "-", "base"], [25, 0, 0, "-", "constant"], [27, 0, 0, "-", "linear_warmup"]], "cneuromax.deeplearning.common.lrscheduler.ConstantConfig": [[26, 2, 1, "id0", "_target_"], [26, 2, 1, "", "num_warmup_steps"]], "cneuromax.deeplearning.common.lrscheduler.LinearWarmupConfig": [[26, 2, 1, "id1", "_target_"], [26, 2, 1, "id2", "num_warmup_steps"]], "cneuromax.deeplearning.common.lrscheduler.base": [[24, 1, 1, "", "BaseLRSchedulerConfig"]], "cneuromax.deeplearning.common.lrscheduler.base.BaseLRSchedulerConfig": [[24, 2, 1, "id1", "_partial_"], [24, 2, 1, "id0", "_target_"], [24, 2, 1, "id2", "last_epoch"]], "cneuromax.deeplearning.common.lrscheduler.constant": [[25, 1, 1, "", "ConstantConfig"]], "cneuromax.deeplearning.common.lrscheduler.constant.ConstantConfig": [[25, 2, 1, "id0", "_target_"], [25, 2, 1, "", "num_warmup_steps"]], "cneuromax.deeplearning.common.lrscheduler.linear_warmup": [[27, 1, 1, "", "LinearWarmupConfig"]], "cneuromax.deeplearning.common.lrscheduler.linear_warmup.LinearWarmupConfig": [[27, 2, 1, "id0", "_target_"], [27, 2, 1, "id1", "num_warmup_steps"]], "cneuromax.deeplearning.common.nnmodule": [[28, 1, 1, "", "MLP"], [28, 1, 1, "", "MLPConfig"], [29, 0, 0, "-", "mlp"]], "cneuromax.deeplearning.common.nnmodule.MLP": [[28, 2, 1, "", "config"], [28, 3, 1, "", "forward"], [28, 2, 1, "", "model"]], "cneuromax.deeplearning.common.nnmodule.MLPConfig": [[28, 2, 1, "id1", "activation_fn"], [28, 2, 1, "id0", "dims"], [28, 2, 1, "id2", "p_dropout"]], "cneuromax.deeplearning.common.nnmodule.mlp": [[29, 1, 1, "", "MLP"], [29, 1, 1, "", "MLPConfig"]], "cneuromax.deeplearning.common.nnmodule.mlp.MLP": [[29, 2, 1, "", "config"], [29, 3, 1, "", "forward"], [29, 2, 1, "", "model"]], "cneuromax.deeplearning.common.nnmodule.mlp.MLPConfig": [[29, 2, 1, "id1", "activation_fn"], [29, 2, 1, "id0", "dims"], [29, 2, 1, "id2", "p_dropout"]], "cneuromax.deeplearning.common.optimizer": [[33, 1, 1, "", "AdamConfig"], [33, 1, 1, "", "AdamWConfig"], [30, 0, 0, "-", "adam"], [31, 0, 0, "-", "adamw"], [32, 0, 0, "-", "base"], [34, 0, 0, "-", "sgd"]], "cneuromax.deeplearning.common.optimizer.AdamConfig": [[33, 2, 1, "id0", "_target_"], [33, 2, 1, "id1", "betas"], [33, 2, 1, "id2", "eps"]], "cneuromax.deeplearning.common.optimizer.AdamWConfig": [[33, 2, 1, "id3", "_target_"]], "cneuromax.deeplearning.common.optimizer.adam": [[30, 1, 1, "", "AdamConfig"]], "cneuromax.deeplearning.common.optimizer.adam.AdamConfig": [[30, 2, 1, "id0", "_target_"], [30, 2, 1, "id1", "betas"], [30, 2, 1, "id2", "eps"]], "cneuromax.deeplearning.common.optimizer.adamw": [[31, 1, 1, "", "AdamWConfig"]], "cneuromax.deeplearning.common.optimizer.adamw.AdamWConfig": [[31, 2, 1, "id0", "_target_"]], "cneuromax.deeplearning.common.optimizer.base": [[32, 1, 1, "", "BaseOptimizerConfig"]], "cneuromax.deeplearning.common.optimizer.base.BaseOptimizerConfig": [[32, 2, 1, "id1", "_partial_"], [32, 2, 1, "id0", "_target_"], [32, 2, 1, "id2", "lr"], [32, 2, 1, "id3", "weight_decay"]], "cneuromax.deeplearning.common.optimizer.sgd": [[34, 1, 1, "", "AdamConfig"]], "cneuromax.deeplearning.common.optimizer.sgd.AdamConfig": [[34, 2, 1, "id0", "_target_"], [34, 2, 1, "id1", "momentum"]], "cneuromax.deeplearning.common.trainer": [[38, 1, 1, "", "BaseTrainerConfig"], [38, 1, 1, "", "CPUTrainer"], [38, 1, 1, "", "DDPTrainer"], [35, 0, 0, "-", "base"], [36, 0, 0, "-", "cpu"], [37, 0, 0, "-", "ddp"]], "cneuromax.deeplearning.common.trainer.BaseTrainerConfig": [[38, 2, 1, "id0", "_target_"], [38, 2, 1, "id1", "accelerator"], [38, 2, 1, "id3", "devices"], [38, 2, 1, "id8", "log_every_n_steps"], [38, 2, 1, "id6", "max_steps"], [38, 2, 1, "id4", "num_nodes"], [38, 2, 1, "id5", "precision"], [38, 2, 1, "id2", "strategy"], [38, 2, 1, "id7", "val_check_interval"]], "cneuromax.deeplearning.common.trainer.CPUTrainer": [[38, 2, 1, "id9", "accelerator"]], "cneuromax.deeplearning.common.trainer.DDPTrainer": [[38, 2, 1, "id10", "strategy"]], "cneuromax.deeplearning.common.trainer.base": [[35, 1, 1, "", "BaseTrainerConfig"]], "cneuromax.deeplearning.common.trainer.base.BaseTrainerConfig": [[35, 2, 1, "id0", "_target_"], [35, 2, 1, "id1", "accelerator"], [35, 2, 1, "id3", "devices"], [35, 2, 1, "id8", "log_every_n_steps"], [35, 2, 1, "id6", "max_steps"], [35, 2, 1, "id4", "num_nodes"], [35, 2, 1, "id5", "precision"], [35, 2, 1, "id2", "strategy"], [35, 2, 1, "id7", "val_check_interval"]], "cneuromax.deeplearning.common.trainer.cpu": [[36, 1, 1, "", "CPUTrainer"]], "cneuromax.deeplearning.common.trainer.cpu.CPUTrainer": [[36, 2, 1, "id0", "accelerator"]], "cneuromax.deeplearning.common.trainer.ddp": [[37, 1, 1, "", "DDPTrainer"]], "cneuromax.deeplearning.common.trainer.ddp.DDPTrainer": [[37, 2, 1, "id0", "strategy"]], "cneuromax.deeplearning.common.utils": [[40, 0, 0, "-", "lightning"]], "cneuromax.deeplearning.common.utils.lightning": [[40, 1, 1, "", "InitOptimParamsCheckpointConnector"], [40, 5, 1, "", "find_good_batch_size"], [40, 5, 1, "", "find_good_num_workers"]], "cneuromax.deeplearning.common.utils.lightning.InitOptimParamsCheckpointConnector": [[40, 3, 1, "", "restore_optimizers"]], "cneuromax.deeplearning.experiment": [[45, 0, 0, "-", "mnist_classification"]], "cneuromax.deeplearning.experiment.mnist_classification": [[45, 1, 1, "", "MNISTDataModule"], [45, 1, 1, "", "MNISTDataModuleConfig"], [42, 0, 0, "-", "config"], [43, 0, 0, "-", "datamodule"], [44, 0, 0, "-", "datamodule_test"], [46, 0, 0, "-", "litmodule"]], "cneuromax.deeplearning.experiment.mnist_classification.MNISTDataModule": [[45, 3, 1, "", "prepare_data"], [45, 3, 1, "", "setup"], [45, 2, 1, "", "train_val_split"], [45, 2, 1, "", "transform"]], "cneuromax.deeplearning.experiment.mnist_classification.MNISTDataModuleConfig": [[45, 2, 1, "id1", "fit_dataset_mean"], [45, 2, 1, "id2", "fit_dataset_std"], [45, 2, 1, "id0", "val_percentage"]], "cneuromax.deeplearning.experiment.mnist_classification.datamodule": [[43, 1, 1, "", "MNISTDataModule"], [43, 1, 1, "", "MNISTDataModuleConfig"], [43, 4, 1, "", "float_is_gt0_lt1"], [43, 4, 1, "", "str_is_fit_or_test"]], "cneuromax.deeplearning.experiment.mnist_classification.datamodule.MNISTDataModule": [[43, 3, 1, "", "prepare_data"], [43, 3, 1, "", "setup"], [43, 2, 1, "", "train_val_split"], [43, 2, 1, "", "transform"]], "cneuromax.deeplearning.experiment.mnist_classification.datamodule.MNISTDataModuleConfig": [[43, 2, 1, "id1", "fit_dataset_mean"], [43, 2, 1, "id2", "fit_dataset_std"], [43, 2, 1, "id0", "val_percentage"]], "cneuromax.deeplearning.experiment.mnist_classification.datamodule_test": [[44, 5, 1, "", "datamodule"], [44, 5, 1, "", "test_setup_fit"], [44, 5, 1, "", "test_setup_test"]], "cneuromax.deeplearning.experiment.mnist_classification.litmodule": [[46, 1, 1, "", "MNISTClassificationLitModule"]], "cneuromax.deeplearning.experiment.mnist_classification.litmodule.MNISTClassificationLitModule": [[46, 2, 1, "", "accuracy"], [46, 3, 1, "", "forward"], [46, 2, 1, "", "nnmodule"], [46, 2, 1, "", "optimizer"], [46, 2, 1, "", "scheduler"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:data", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "data", "Python data"], "5": ["py", "function", "Python function"]}, "titleterms": {"contribut": 0, "develop": 0, "local": [0, 11], "make": 0, "sure": 0, "code": 0, "doesn": 0, "t": 0, "break": 0, "test": 0, "set": 0, "up": 0, "vscode": 0, "git": 0, "github": 0, "workflow": 0, "freez": 0, "repositori": [0, 4, 5], "public": 0, "execut": 1, "On": [1, 2, 3, 4, 6, 7], "linux": [1, 2, 4, 6], "machin": [1, 2, 4, 5, 6], "run": [1, 2, 3], "python": [1, 2, 3], "script": [1, 2, 3], "notebook": [1, 2], "slurm": [1, 3, 4, 7, 12], "cluster": [1, 3, 4, 7], "jupyt": [1, 3], "lab": [1, 3], "instal": [4, 6, 7], "common": [4, 5, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "all": [4, 5], "1": [4, 5, 6, 7], "setup": [4, 5], "nvidia": [4, 6], "driver": [4, 6], "2": [4, 6, 7], "podman": [4, 6, 7], "3": [4, 6], "contain": [4, 6], "toolkit": [4, 6], "4": [4, 6], "pull": [4, 6], "imag": [4, 6, 7], "experi": [4, 7, 41, 42, 43, 44, 45, 46], "manag": [4, 7], "packag": [4, 7, 13, 17, 22, 23, 26, 28, 33, 38, 45], "prepar": [4, 7], "us": [4, 7], "cneuromax": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51], "applic": 8, "subpackag": [9, 19, 23, 41, 47, 48], "launcher": [10, 11, 12], "submodul": [10, 13, 17, 19, 22, 23, 26, 28, 33, 38, 39, 45, 47], "modul": [11, 12, 14, 16, 18, 20, 21, 24, 25, 27, 29, 30, 31, 32, 34, 35, 36, 37, 40, 43, 44, 46], "content": [11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 43, 44, 45, 46, 51], "class": [11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 43, 45, 46], "logger": [13, 14], "wandb": 14, "deeplearn": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "__main__": 15, "datamodul": [16, 17, 43], "base": [16, 20, 21, 24, 32, 35], "attribut": [16, 18, 43], "fitter": 18, "litmodul": [20, 21, 22, 23, 46], "classif": [21, 22], "lrschedul": [24, 25, 26, 27], "constant": 25, "linear_warmup": 27, "nnmodul": [28, 29], "mlp": 29, "optim": [30, 31, 32, 33, 34], "adam": 30, "adamw": 31, "sgd": 34, "trainer": [35, 36, 37, 38], "cpu": 36, "ddp": 37, "util": [39, 40], "lightn": 40, "function": [40, 44], "mnist_classif": [42, 43, 44, 45, 46], "config": 42, "datamodule_test": 44, "neuroevolut": 49, "api": 50, "refer": 50, "welcom": 51, "document": 51}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Contribution": [[0, "contribution"]], "Developping locally": [[0, "developping-locally"]], "Making sure the code doesn\u2019t break": [[0, "making-sure-the-code-doesn-t-break"]], "Testing locally": [[0, "testing-locally"]], "Setting up VSCode": [[0, "setting-up-vscode"]], "Git/GitHub workflow for contributing": [[0, "git-github-workflow-for-contributing"]], "Freezing the repositories for publication": [[0, "freezing-the-repositories-for-publication"]], "Execution": [[1, "execution"]], "On a Linux machine": [[1, "on-a-linux-machine"], [2, "on-a-linux-machine"], [4, "on-a-linux-machine"], [6, "on-a-linux-machine"]], "Run a python script": [[1, "run-a-python-script"], [1, "id1"], [2, "run-a-python-script"], [3, "run-a-python-script"]], "Run a notebook": [[1, "run-a-notebook"], [2, "run-a-notebook"]], "On a Slurm cluster": [[1, "on-a-slurm-cluster"], [3, "on-a-slurm-cluster"], [4, "on-a-slurm-cluster"], [7, "on-a-slurm-cluster"]], "Run Jupyter-lab": [[1, "run-jupyter-lab"], [3, "run-jupyter-lab"]], "Installation": [[4, "installation"]], "Common to all machines": [[4, "common-to-all-machines"], [5, "common-to-all-machines"]], "1. Setup the repository": [[4, "setup-the-repository"], [5, "setup-the-repository"]], "1. Install the NVIDIA driver": [[4, "install-the-nvidia-driver"], [6, "install-the-nvidia-driver"]], "2. Install Podman": [[4, "install-podman"], [6, "install-podman"]], "3. Install the NVIDIA Container Toolkit": [[4, "install-the-nvidia-container-toolkit"], [6, "install-the-nvidia-container-toolkit"]], "4. Pull the Podman image": [[4, "pull-the-podman-image"], [6, "pull-the-podman-image"]], "1. Install the experiment manager packages": [[4, "install-the-experiment-manager-packages"], [7, "install-the-experiment-manager-packages"]], "2. Prepare the Podman image for use on the cluster": [[4, "prepare-the-podman-image-for-use-on-the-cluster"], [7, "prepare-the-podman-image-for-use-on-the-cluster"]], "cneuromax.application": [[8, "module-cneuromax.application"]], "cneuromax.common": [[9, "module-cneuromax.common"]], "Subpackages": [[9, "subpackages"], [19, "subpackages"], [23, "subpackages"], [41, "subpackages"], [47, "subpackages"], [48, "subpackages"]], "cneuromax.common.launcher": [[10, "module-cneuromax.common.launcher"]], "Submodules": [[10, "submodules"], [13, "submodules"], [17, "submodules"], [19, "submodules"], [22, "submodules"], [23, "submodules"], [26, "submodules"], [28, "submodules"], [33, "submodules"], [38, "submodules"], [39, "submodules"], [45, "submodules"], [47, "submodules"]], "cneuromax.common.launcher.local": [[11, "module-cneuromax.common.launcher.local"]], "Module Contents": [[11, "module-contents"], [12, "module-contents"], [14, "module-contents"], [16, "module-contents"], [18, "module-contents"], [20, "module-contents"], [21, "module-contents"], [24, "module-contents"], [25, "module-contents"], [27, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [34, "module-contents"], [35, "module-contents"], [36, "module-contents"], [37, "module-contents"], [40, "module-contents"], [43, "module-contents"], [44, "module-contents"], [46, "module-contents"]], "Classes": [[11, "classes"], [12, "classes"], [13, "classes"], [14, "classes"], [16, "classes"], [17, "classes"], [18, "classes"], [20, "classes"], [21, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [28, "classes"], [29, "classes"], [30, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [35, "classes"], [36, "classes"], [37, "classes"], [38, "classes"], [40, "classes"], [43, "classes"], [45, "classes"], [46, "classes"]], "cneuromax.common.launcher.slurm": [[12, "module-cneuromax.common.launcher.slurm"]], "cneuromax.common.logger": [[13, "module-cneuromax.common.logger"]], "Package Contents": [[13, "package-contents"], [17, "package-contents"], [22, "package-contents"], [23, "package-contents"], [26, "package-contents"], [28, "package-contents"], [33, "package-contents"], [38, "package-contents"], [45, "package-contents"]], "cneuromax.common.logger.wandb": [[14, "module-cneuromax.common.logger.wandb"]], "cneuromax.deeplearning.__main__": [[15, "module-cneuromax.deeplearning.__main__"]], "cneuromax.deeplearning.common.datamodule.base": [[16, "module-cneuromax.deeplearning.common.datamodule.base"]], "Attributes": [[16, "attributes"], [18, "attributes"], [43, "attributes"]], "cneuromax.deeplearning.common.datamodule": [[17, "module-cneuromax.deeplearning.common.datamodule"]], "cneuromax.deeplearning.common.fitter": [[18, "module-cneuromax.deeplearning.common.fitter"]], "cneuromax.deeplearning.common": [[19, "module-cneuromax.deeplearning.common"]], "cneuromax.deeplearning.common.litmodule.base": [[20, "module-cneuromax.deeplearning.common.litmodule.base"]], "cneuromax.deeplearning.common.litmodule.classification.base": [[21, "module-cneuromax.deeplearning.common.litmodule.classification.base"]], "cneuromax.deeplearning.common.litmodule.classification": [[22, "module-cneuromax.deeplearning.common.litmodule.classification"]], "cneuromax.deeplearning.common.litmodule": [[23, "module-cneuromax.deeplearning.common.litmodule"]], "cneuromax.deeplearning.common.lrscheduler.base": [[24, "module-cneuromax.deeplearning.common.lrscheduler.base"]], "cneuromax.deeplearning.common.lrscheduler.constant": [[25, "module-cneuromax.deeplearning.common.lrscheduler.constant"]], "cneuromax.deeplearning.common.lrscheduler": [[26, "module-cneuromax.deeplearning.common.lrscheduler"]], "cneuromax.deeplearning.common.lrscheduler.linear_warmup": [[27, "module-cneuromax.deeplearning.common.lrscheduler.linear_warmup"]], "cneuromax.deeplearning.common.nnmodule": [[28, "module-cneuromax.deeplearning.common.nnmodule"]], "cneuromax.deeplearning.common.nnmodule.mlp": [[29, "module-cneuromax.deeplearning.common.nnmodule.mlp"]], "cneuromax.deeplearning.common.optimizer.adam": [[30, "module-cneuromax.deeplearning.common.optimizer.adam"]], "cneuromax.deeplearning.common.optimizer.adamw": [[31, "module-cneuromax.deeplearning.common.optimizer.adamw"]], "cneuromax.deeplearning.common.optimizer.base": [[32, "module-cneuromax.deeplearning.common.optimizer.base"]], "cneuromax.deeplearning.common.optimizer": [[33, "module-cneuromax.deeplearning.common.optimizer"]], "cneuromax.deeplearning.common.optimizer.sgd": [[34, "module-cneuromax.deeplearning.common.optimizer.sgd"]], "cneuromax.deeplearning.common.trainer.base": [[35, "module-cneuromax.deeplearning.common.trainer.base"]], "cneuromax.deeplearning.common.trainer.cpu": [[36, "module-cneuromax.deeplearning.common.trainer.cpu"]], "cneuromax.deeplearning.common.trainer.ddp": [[37, "module-cneuromax.deeplearning.common.trainer.ddp"]], "cneuromax.deeplearning.common.trainer": [[38, "module-cneuromax.deeplearning.common.trainer"]], "cneuromax.deeplearning.common.utils": [[39, "module-cneuromax.deeplearning.common.utils"]], "cneuromax.deeplearning.common.utils.lightning": [[40, "module-cneuromax.deeplearning.common.utils.lightning"]], "Functions": [[40, "functions"], [44, "functions"]], "cneuromax.deeplearning.experiment": [[41, "module-cneuromax.deeplearning.experiment"]], "cneuromax.deeplearning.experiment.mnist_classification.config": [[42, "module-cneuromax.deeplearning.experiment.mnist_classification.config"]], "cneuromax.deeplearning.experiment.mnist_classification.datamodule": [[43, "module-cneuromax.deeplearning.experiment.mnist_classification.datamodule"]], "cneuromax.deeplearning.experiment.mnist_classification.datamodule_test": [[44, "module-cneuromax.deeplearning.experiment.mnist_classification.datamodule_test"]], "cneuromax.deeplearning.experiment.mnist_classification": [[45, "module-cneuromax.deeplearning.experiment.mnist_classification"]], "cneuromax.deeplearning.experiment.mnist_classification.litmodule": [[46, "module-cneuromax.deeplearning.experiment.mnist_classification.litmodule"]], "cneuromax.deeplearning": [[47, "module-cneuromax.deeplearning"]], "cneuromax": [[48, "module-cneuromax"]], "cneuromax.neuroevolution": [[49, "module-cneuromax.neuroevolution"]], "API Reference": [[50, "api-reference"]], "Welcome to the cneuromax documentation!": [[51, "welcome-to-the-cneuromax-documentation"]], "Contents": [[51, "contents"]]}, "indexentries": {"cneuromax.application": [[8, "module-cneuromax.application"]], "module": [[8, "module-cneuromax.application"], [9, "module-cneuromax.common"], [10, "module-cneuromax.common.launcher"], [11, "module-cneuromax.common.launcher.local"], [12, "module-cneuromax.common.launcher.slurm"], [13, "module-cneuromax.common.logger"], [14, "module-cneuromax.common.logger.wandb"], [15, "module-cneuromax.deeplearning.__main__"], [16, "module-cneuromax.deeplearning.common.datamodule.base"], [17, "module-cneuromax.deeplearning.common.datamodule"], [18, "module-cneuromax.deeplearning.common.fitter"], [19, "module-cneuromax.deeplearning.common"], [20, "module-cneuromax.deeplearning.common.litmodule.base"], [21, "module-cneuromax.deeplearning.common.litmodule.classification.base"], [22, "module-cneuromax.deeplearning.common.litmodule.classification"], [23, "module-cneuromax.deeplearning.common.litmodule"], [24, "module-cneuromax.deeplearning.common.lrscheduler.base"], [25, "module-cneuromax.deeplearning.common.lrscheduler.constant"], [26, "module-cneuromax.deeplearning.common.lrscheduler"], [27, "module-cneuromax.deeplearning.common.lrscheduler.linear_warmup"], [28, "module-cneuromax.deeplearning.common.nnmodule"], [29, "module-cneuromax.deeplearning.common.nnmodule.mlp"], [30, "module-cneuromax.deeplearning.common.optimizer.adam"], [31, "module-cneuromax.deeplearning.common.optimizer.adamw"], [32, "module-cneuromax.deeplearning.common.optimizer.base"], [33, "module-cneuromax.deeplearning.common.optimizer"], [34, "module-cneuromax.deeplearning.common.optimizer.sgd"], [35, "module-cneuromax.deeplearning.common.trainer.base"], [36, "module-cneuromax.deeplearning.common.trainer.cpu"], [37, "module-cneuromax.deeplearning.common.trainer.ddp"], [38, "module-cneuromax.deeplearning.common.trainer"], [39, "module-cneuromax.deeplearning.common.utils"], [40, "module-cneuromax.deeplearning.common.utils.lightning"], [41, "module-cneuromax.deeplearning.experiment"], [42, "module-cneuromax.deeplearning.experiment.mnist_classification.config"], [43, "module-cneuromax.deeplearning.experiment.mnist_classification.datamodule"], [44, "module-cneuromax.deeplearning.experiment.mnist_classification.datamodule_test"], [45, "module-cneuromax.deeplearning.experiment.mnist_classification"], [46, "module-cneuromax.deeplearning.experiment.mnist_classification.litmodule"], [47, "module-cneuromax.deeplearning"], [48, "module-cneuromax"], [49, "module-cneuromax.neuroevolution"]], "cneuromax.common": [[9, "module-cneuromax.common"]], "cneuromax.common.launcher": [[10, "module-cneuromax.common.launcher"]], "locallauncherconfig (class in cneuromax.common.launcher.local)": [[11, "cneuromax.common.launcher.local.LocalLauncherConfig"]], "_target_ (cneuromax.common.launcher.local.locallauncherconfig attribute)": [[11, "cneuromax.common.launcher.local.LocalLauncherConfig._target_"], [11, "id0"]], "cneuromax.common.launcher.local": [[11, "module-cneuromax.common.launcher.local"]], "cpus_per_task (cneuromax.common.launcher.local.locallauncherconfig attribute)": [[11, "cneuromax.common.launcher.local.LocalLauncherConfig.cpus_per_task"], [11, "id1"]], "gpus_per_node (cneuromax.common.launcher.local.locallauncherconfig attribute)": [[11, "cneuromax.common.launcher.local.LocalLauncherConfig.gpus_per_node"]], "mem_gb (cneuromax.common.launcher.local.locallauncherconfig attribute)": [[11, "cneuromax.common.launcher.local.LocalLauncherConfig.mem_gb"]], "name (cneuromax.common.launcher.local.locallauncherconfig attribute)": [[11, "cneuromax.common.launcher.local.LocalLauncherConfig.name"], [11, "id2"]], "nodes (cneuromax.common.launcher.local.locallauncherconfig attribute)": [[11, "cneuromax.common.launcher.local.LocalLauncherConfig.nodes"]], "num_gpus_per_node (cneuromax.common.launcher.local.locallauncherconfig attribute)": [[11, "cneuromax.common.launcher.local.LocalLauncherConfig.num_gpus_per_node"]], "num_mem_gb (cneuromax.common.launcher.local.locallauncherconfig attribute)": [[11, "cneuromax.common.launcher.local.LocalLauncherConfig.num_mem_gb"]], "num_nodes (cneuromax.common.launcher.local.locallauncherconfig attribute)": [[11, "cneuromax.common.launcher.local.LocalLauncherConfig.num_nodes"]], "submitit_folder (cneuromax.common.launcher.local.locallauncherconfig attribute)": [[11, "cneuromax.common.launcher.local.LocalLauncherConfig.submitit_folder"], [11, "id3"]], "tasks_per_node (cneuromax.common.launcher.local.locallauncherconfig attribute)": [[11, "cneuromax.common.launcher.local.LocalLauncherConfig.tasks_per_node"], [11, "id4"]], "timeout_min (cneuromax.common.launcher.local.locallauncherconfig attribute)": [[11, "cneuromax.common.launcher.local.LocalLauncherConfig.timeout_min"], [11, "id5"]], "baseslurmlauncherconfig (class in cneuromax.common.launcher.slurm)": [[12, "cneuromax.common.launcher.slurm.BaseSlurmLauncherConfig"]], "_target_ (cneuromax.common.launcher.slurm.baseslurmlauncherconfig attribute)": [[12, "cneuromax.common.launcher.slurm.BaseSlurmLauncherConfig._target_"]], "account (cneuromax.common.launcher.slurm.baseslurmlauncherconfig attribute)": [[12, "cneuromax.common.launcher.slurm.BaseSlurmLauncherConfig.account"], [12, "id0"]], "cneuromax.common.launcher.slurm": [[12, "module-cneuromax.common.launcher.slurm"]], "setup (cneuromax.common.launcher.slurm.baseslurmlauncherconfig attribute)": [[12, "cneuromax.common.launcher.slurm.BaseSlurmLauncherConfig.setup"], [12, "id1"]], "target_ (cneuromax.common.launcher.slurm.baseslurmlauncherconfig attribute)": [[12, "cneuromax.common.launcher.slurm.BaseSlurmLauncherConfig.target_"]], "wandbloggerconfig (class in cneuromax.common.logger)": [[13, "cneuromax.common.logger.WandbLoggerConfig"]], "_target_ (cneuromax.common.logger.wandbloggerconfig attribute)": [[13, "cneuromax.common.logger.WandbLoggerConfig._target_"]], "cneuromax.common.logger": [[13, "module-cneuromax.common.logger"]], "name (cneuromax.common.logger.wandbloggerconfig attribute)": [[13, "cneuromax.common.logger.WandbLoggerConfig.name"], [13, "id0"]], "project (cneuromax.common.logger.wandbloggerconfig attribute)": [[13, "cneuromax.common.logger.WandbLoggerConfig.project"], [13, "id1"]], "target_ (cneuromax.common.logger.wandbloggerconfig attribute)": [[13, "cneuromax.common.logger.WandbLoggerConfig.target_"]], "wandbloggerconfig (class in cneuromax.common.logger.wandb)": [[14, "cneuromax.common.logger.wandb.WandbLoggerConfig"]], "_target_ (cneuromax.common.logger.wandb.wandbloggerconfig attribute)": [[14, "cneuromax.common.logger.wandb.WandbLoggerConfig._target_"]], "cneuromax.common.logger.wandb": [[14, "module-cneuromax.common.logger.wandb"]], "name (cneuromax.common.logger.wandb.wandbloggerconfig attribute)": [[14, "cneuromax.common.logger.wandb.WandbLoggerConfig.name"], [14, "id0"]], "project (cneuromax.common.logger.wandb.wandbloggerconfig attribute)": [[14, "cneuromax.common.logger.wandb.WandbLoggerConfig.project"], [14, "id1"]], "target_ (cneuromax.common.logger.wandb.wandbloggerconfig attribute)": [[14, "cneuromax.common.logger.wandb.WandbLoggerConfig.target_"]], "cneuromax.deeplearning.__main__": [[15, "module-cneuromax.deeplearning.__main__"]], "basedatamodule (class in cneuromax.deeplearning.common.datamodule.base)": [[16, "cneuromax.deeplearning.common.datamodule.base.BaseDataModule"]], "basedatamoduleconfig (class in cneuromax.deeplearning.common.datamodule.base)": [[16, "cneuromax.deeplearning.common.datamodule.base.BaseDataModuleConfig"]], "basedataset (class in cneuromax.deeplearning.common.datamodule.base)": [[16, "cneuromax.deeplearning.common.datamodule.base.BaseDataset"]], "cneuromax.deeplearning.common.datamodule.base": [[16, "module-cneuromax.deeplearning.common.datamodule.base"]], "config (cneuromax.deeplearning.common.datamodule.base.basedatamodule attribute)": [[16, "cneuromax.deeplearning.common.datamodule.base.BaseDataModule.config"]], "data_dir (cneuromax.deeplearning.common.datamodule.base.basedatamoduleconfig attribute)": [[16, "cneuromax.deeplearning.common.datamodule.base.BaseDataModuleConfig.data_dir"], [16, "id4"]], "dataset (cneuromax.deeplearning.common.datamodule.base.basedatamodule attribute)": [[16, "cneuromax.deeplearning.common.datamodule.base.BaseDataModule.dataset"]], "device_type (cneuromax.deeplearning.common.datamodule.base.basedatamoduleconfig attribute)": [[16, "cneuromax.deeplearning.common.datamodule.base.BaseDataModuleConfig.device_type"], [16, "id7"]], "int_is_gt0 (in module cneuromax.deeplearning.common.datamodule.base)": [[16, "cneuromax.deeplearning.common.datamodule.base.int_is_gt0"]], "load_state_dict() (cneuromax.deeplearning.common.datamodule.base.basedatamodule method)": [[16, "cneuromax.deeplearning.common.datamodule.base.BaseDataModule.load_state_dict"]], "per_device_batch_size (cneuromax.deeplearning.common.datamodule.base.basedatamoduleconfig attribute)": [[16, "cneuromax.deeplearning.common.datamodule.base.BaseDataModuleConfig.per_device_batch_size"], [16, "id5"]], "per_device_num_workers (cneuromax.deeplearning.common.datamodule.base.basedatamoduleconfig attribute)": [[16, "cneuromax.deeplearning.common.datamodule.base.BaseDataModuleConfig.per_device_num_workers"], [16, "id6"]], "pin_memory (cneuromax.deeplearning.common.datamodule.base.basedatamodule attribute)": [[16, "cneuromax.deeplearning.common.datamodule.base.BaseDataModule.pin_memory"]], "predict (cneuromax.deeplearning.common.datamodule.base.basedataset attribute)": [[16, "cneuromax.deeplearning.common.datamodule.base.BaseDataset.predict"], [16, "id3"]], "predict_dataloader() (cneuromax.deeplearning.common.datamodule.base.basedatamodule method)": [[16, "cneuromax.deeplearning.common.datamodule.base.BaseDataModule.predict_dataloader"]], "state_dict() (cneuromax.deeplearning.common.datamodule.base.basedatamodule method)": [[16, "cneuromax.deeplearning.common.datamodule.base.BaseDataModule.state_dict"]], "str_is_per_device_batch_size (in module cneuromax.deeplearning.common.datamodule.base)": [[16, "cneuromax.deeplearning.common.datamodule.base.str_is_per_device_batch_size"]], "test (cneuromax.deeplearning.common.datamodule.base.basedataset attribute)": [[16, "cneuromax.deeplearning.common.datamodule.base.BaseDataset.test"], [16, "id2"]], "test_dataloader() (cneuromax.deeplearning.common.datamodule.base.basedatamodule method)": [[16, "cneuromax.deeplearning.common.datamodule.base.BaseDataModule.test_dataloader"]], "train (cneuromax.deeplearning.common.datamodule.base.basedataset attribute)": [[16, "cneuromax.deeplearning.common.datamodule.base.BaseDataset.train"], [16, "id0"]], "train_dataloader() (cneuromax.deeplearning.common.datamodule.base.basedatamodule method)": [[16, "cneuromax.deeplearning.common.datamodule.base.BaseDataModule.train_dataloader"]], "val (cneuromax.deeplearning.common.datamodule.base.basedataset attribute)": [[16, "cneuromax.deeplearning.common.datamodule.base.BaseDataset.val"], [16, "id1"]], "val_dataloader() (cneuromax.deeplearning.common.datamodule.base.basedatamodule method)": [[16, "cneuromax.deeplearning.common.datamodule.base.BaseDataModule.val_dataloader"]], "basedatamodule (class in cneuromax.deeplearning.common.datamodule)": [[17, "cneuromax.deeplearning.common.datamodule.BaseDataModule"]], "basedatamoduleconfig (class in cneuromax.deeplearning.common.datamodule)": [[17, "cneuromax.deeplearning.common.datamodule.BaseDataModuleConfig"]], "basedataset (class in cneuromax.deeplearning.common.datamodule)": [[17, "cneuromax.deeplearning.common.datamodule.BaseDataset"]], "cneuromax.deeplearning.common.datamodule": [[17, "module-cneuromax.deeplearning.common.datamodule"]], "config (cneuromax.deeplearning.common.datamodule.basedatamodule attribute)": [[17, "cneuromax.deeplearning.common.datamodule.BaseDataModule.config"]], "data_dir (cneuromax.deeplearning.common.datamodule.basedatamoduleconfig attribute)": [[17, "cneuromax.deeplearning.common.datamodule.BaseDataModuleConfig.data_dir"], [17, "id0"]], "dataset (cneuromax.deeplearning.common.datamodule.basedatamodule attribute)": [[17, "cneuromax.deeplearning.common.datamodule.BaseDataModule.dataset"]], "device_type (cneuromax.deeplearning.common.datamodule.basedatamoduleconfig attribute)": [[17, "cneuromax.deeplearning.common.datamodule.BaseDataModuleConfig.device_type"], [17, "id3"]], "load_state_dict() (cneuromax.deeplearning.common.datamodule.basedatamodule method)": [[17, "cneuromax.deeplearning.common.datamodule.BaseDataModule.load_state_dict"]], "per_device_batch_size (cneuromax.deeplearning.common.datamodule.basedatamoduleconfig attribute)": [[17, "cneuromax.deeplearning.common.datamodule.BaseDataModuleConfig.per_device_batch_size"], [17, "id1"]], "per_device_num_workers (cneuromax.deeplearning.common.datamodule.basedatamoduleconfig attribute)": [[17, "cneuromax.deeplearning.common.datamodule.BaseDataModuleConfig.per_device_num_workers"], [17, "id2"]], "pin_memory (cneuromax.deeplearning.common.datamodule.basedatamodule attribute)": [[17, "cneuromax.deeplearning.common.datamodule.BaseDataModule.pin_memory"]], "predict (cneuromax.deeplearning.common.datamodule.basedataset attribute)": [[17, "cneuromax.deeplearning.common.datamodule.BaseDataset.predict"], [17, "id7"]], "predict_dataloader() (cneuromax.deeplearning.common.datamodule.basedatamodule method)": [[17, "cneuromax.deeplearning.common.datamodule.BaseDataModule.predict_dataloader"]], "state_dict() (cneuromax.deeplearning.common.datamodule.basedatamodule method)": [[17, "cneuromax.deeplearning.common.datamodule.BaseDataModule.state_dict"]], "test (cneuromax.deeplearning.common.datamodule.basedataset attribute)": [[17, "cneuromax.deeplearning.common.datamodule.BaseDataset.test"], [17, "id6"]], "test_dataloader() (cneuromax.deeplearning.common.datamodule.basedatamodule method)": [[17, "cneuromax.deeplearning.common.datamodule.BaseDataModule.test_dataloader"]], "train (cneuromax.deeplearning.common.datamodule.basedataset attribute)": [[17, "cneuromax.deeplearning.common.datamodule.BaseDataset.train"], [17, "id4"]], "train_dataloader() (cneuromax.deeplearning.common.datamodule.basedatamodule method)": [[17, "cneuromax.deeplearning.common.datamodule.BaseDataModule.train_dataloader"]], "val (cneuromax.deeplearning.common.datamodule.basedataset attribute)": [[17, "cneuromax.deeplearning.common.datamodule.BaseDataset.val"], [17, "id5"]], "val_dataloader() (cneuromax.deeplearning.common.datamodule.basedatamodule method)": [[17, "cneuromax.deeplearning.common.datamodule.BaseDataModule.val_dataloader"]], "fitter (class in cneuromax.deeplearning.common.fitter)": [[18, "cneuromax.deeplearning.common.fitter.Fitter"]], "torch_compile_minimum_cuda_version (in module cneuromax.deeplearning.common.fitter)": [[18, "cneuromax.deeplearning.common.fitter.TORCH_COMPILE_MINIMUM_CUDA_VERSION"]], "cneuromax.deeplearning.common.fitter": [[18, "module-cneuromax.deeplearning.common.fitter"]], "config (cneuromax.deeplearning.common.fitter.fitter attribute)": [[18, "cneuromax.deeplearning.common.fitter.Fitter.config"]], "datamodule (cneuromax.deeplearning.common.fitter.fitter attribute)": [[18, "cneuromax.deeplearning.common.fitter.Fitter.datamodule"]], "fit() (cneuromax.deeplearning.common.fitter.fitter method)": [[18, "cneuromax.deeplearning.common.fitter.Fitter.fit"]], "instantiate_lightning_objects() (cneuromax.deeplearning.common.fitter.fitter method)": [[18, "cneuromax.deeplearning.common.fitter.Fitter.instantiate_lightning_objects"]], "litmodule (cneuromax.deeplearning.common.fitter.fitter attribute)": [[18, "cneuromax.deeplearning.common.fitter.Fitter.litmodule"]], "logger (cneuromax.deeplearning.common.fitter.fitter attribute)": [[18, "cneuromax.deeplearning.common.fitter.Fitter.logger"]], "set_batch_size_and_num_workers() (cneuromax.deeplearning.common.fitter.fitter method)": [[18, "cneuromax.deeplearning.common.fitter.Fitter.set_batch_size_and_num_workers"]], "set_checkpoint_path() (cneuromax.deeplearning.common.fitter.fitter method)": [[18, "cneuromax.deeplearning.common.fitter.Fitter.set_checkpoint_path"]], "trainer (cneuromax.deeplearning.common.fitter.fitter attribute)": [[18, "cneuromax.deeplearning.common.fitter.Fitter.trainer"]], "cneuromax.deeplearning.common": [[19, "module-cneuromax.deeplearning.common"]], "baselitmodule (class in cneuromax.deeplearning.common.litmodule.base)": [[20, "cneuromax.deeplearning.common.litmodule.base.BaseLitModule"]], "cneuromax.deeplearning.common.litmodule.base": [[20, "module-cneuromax.deeplearning.common.litmodule.base"]], "configure_optimizers() (cneuromax.deeplearning.common.litmodule.base.baselitmodule method)": [[20, "cneuromax.deeplearning.common.litmodule.base.BaseLitModule.configure_optimizers"]], "nnmodule (cneuromax.deeplearning.common.litmodule.base.baselitmodule attribute)": [[20, "cneuromax.deeplearning.common.litmodule.base.BaseLitModule.nnmodule"]], "optimizer (cneuromax.deeplearning.common.litmodule.base.baselitmodule attribute)": [[20, "cneuromax.deeplearning.common.litmodule.base.BaseLitModule.optimizer"]], "scheduler (cneuromax.deeplearning.common.litmodule.base.baselitmodule attribute)": [[20, "cneuromax.deeplearning.common.litmodule.base.BaseLitModule.scheduler"]], "test_step() (cneuromax.deeplearning.common.litmodule.base.baselitmodule method)": [[20, "cneuromax.deeplearning.common.litmodule.base.BaseLitModule.test_step"]], "training_step() (cneuromax.deeplearning.common.litmodule.base.baselitmodule method)": [[20, "cneuromax.deeplearning.common.litmodule.base.BaseLitModule.training_step"]], "validation_step() (cneuromax.deeplearning.common.litmodule.base.baselitmodule method)": [[20, "cneuromax.deeplearning.common.litmodule.base.BaseLitModule.validation_step"]], "baseclassificationlitmodule (class in cneuromax.deeplearning.common.litmodule.classification.base)": [[21, "cneuromax.deeplearning.common.litmodule.classification.base.BaseClassificationLitModule"]], "accuracy (cneuromax.deeplearning.common.litmodule.classification.base.baseclassificationlitmodule attribute)": [[21, "cneuromax.deeplearning.common.litmodule.classification.base.BaseClassificationLitModule.accuracy"]], "cneuromax.deeplearning.common.litmodule.classification.base": [[21, "module-cneuromax.deeplearning.common.litmodule.classification.base"]], "nnmodule (cneuromax.deeplearning.common.litmodule.classification.base.baseclassificationlitmodule attribute)": [[21, "cneuromax.deeplearning.common.litmodule.classification.base.BaseClassificationLitModule.nnmodule"]], "optimizer (cneuromax.deeplearning.common.litmodule.classification.base.baseclassificationlitmodule attribute)": [[21, "cneuromax.deeplearning.common.litmodule.classification.base.BaseClassificationLitModule.optimizer"]], "scheduler (cneuromax.deeplearning.common.litmodule.classification.base.baseclassificationlitmodule attribute)": [[21, "cneuromax.deeplearning.common.litmodule.classification.base.BaseClassificationLitModule.scheduler"]], "step() (cneuromax.deeplearning.common.litmodule.classification.base.baseclassificationlitmodule method)": [[21, "cneuromax.deeplearning.common.litmodule.classification.base.BaseClassificationLitModule.step"]], "baseclassificationlitmodule (class in cneuromax.deeplearning.common.litmodule.classification)": [[22, "cneuromax.deeplearning.common.litmodule.classification.BaseClassificationLitModule"]], "accuracy (cneuromax.deeplearning.common.litmodule.classification.baseclassificationlitmodule attribute)": [[22, "cneuromax.deeplearning.common.litmodule.classification.BaseClassificationLitModule.accuracy"]], "cneuromax.deeplearning.common.litmodule.classification": [[22, "module-cneuromax.deeplearning.common.litmodule.classification"]], "nnmodule (cneuromax.deeplearning.common.litmodule.classification.baseclassificationlitmodule attribute)": [[22, "cneuromax.deeplearning.common.litmodule.classification.BaseClassificationLitModule.nnmodule"]], "optimizer (cneuromax.deeplearning.common.litmodule.classification.baseclassificationlitmodule attribute)": [[22, "cneuromax.deeplearning.common.litmodule.classification.BaseClassificationLitModule.optimizer"]], "scheduler (cneuromax.deeplearning.common.litmodule.classification.baseclassificationlitmodule attribute)": [[22, "cneuromax.deeplearning.common.litmodule.classification.BaseClassificationLitModule.scheduler"]], "step() (cneuromax.deeplearning.common.litmodule.classification.baseclassificationlitmodule method)": [[22, "cneuromax.deeplearning.common.litmodule.classification.BaseClassificationLitModule.step"]], "baselitmodule (class in cneuromax.deeplearning.common.litmodule)": [[23, "cneuromax.deeplearning.common.litmodule.BaseLitModule"]], "cneuromax.deeplearning.common.litmodule": [[23, "module-cneuromax.deeplearning.common.litmodule"]], "configure_optimizers() (cneuromax.deeplearning.common.litmodule.baselitmodule method)": [[23, "cneuromax.deeplearning.common.litmodule.BaseLitModule.configure_optimizers"]], "nnmodule (cneuromax.deeplearning.common.litmodule.baselitmodule attribute)": [[23, "cneuromax.deeplearning.common.litmodule.BaseLitModule.nnmodule"]], "optimizer (cneuromax.deeplearning.common.litmodule.baselitmodule attribute)": [[23, "cneuromax.deeplearning.common.litmodule.BaseLitModule.optimizer"]], "scheduler (cneuromax.deeplearning.common.litmodule.baselitmodule attribute)": [[23, "cneuromax.deeplearning.common.litmodule.BaseLitModule.scheduler"]], "test_step() (cneuromax.deeplearning.common.litmodule.baselitmodule method)": [[23, "cneuromax.deeplearning.common.litmodule.BaseLitModule.test_step"]], "training_step() (cneuromax.deeplearning.common.litmodule.baselitmodule method)": [[23, "cneuromax.deeplearning.common.litmodule.BaseLitModule.training_step"]], "validation_step() (cneuromax.deeplearning.common.litmodule.baselitmodule method)": [[23, "cneuromax.deeplearning.common.litmodule.BaseLitModule.validation_step"]], "baselrschedulerconfig (class in cneuromax.deeplearning.common.lrscheduler.base)": [[24, "cneuromax.deeplearning.common.lrscheduler.base.BaseLRSchedulerConfig"]], "_partial_ (cneuromax.deeplearning.common.lrscheduler.base.baselrschedulerconfig attribute)": [[24, "cneuromax.deeplearning.common.lrscheduler.base.BaseLRSchedulerConfig._partial_"], [24, "id1"]], "_target_ (cneuromax.deeplearning.common.lrscheduler.base.baselrschedulerconfig attribute)": [[24, "cneuromax.deeplearning.common.lrscheduler.base.BaseLRSchedulerConfig._target_"], [24, "id0"]], "cneuromax.deeplearning.common.lrscheduler.base": [[24, "module-cneuromax.deeplearning.common.lrscheduler.base"]], "last_epoch (cneuromax.deeplearning.common.lrscheduler.base.baselrschedulerconfig attribute)": [[24, "cneuromax.deeplearning.common.lrscheduler.base.BaseLRSchedulerConfig.last_epoch"], [24, "id2"]], "constantconfig (class in cneuromax.deeplearning.common.lrscheduler.constant)": [[25, "cneuromax.deeplearning.common.lrscheduler.constant.ConstantConfig"]], "_target_ (cneuromax.deeplearning.common.lrscheduler.constant.constantconfig attribute)": [[25, "cneuromax.deeplearning.common.lrscheduler.constant.ConstantConfig._target_"], [25, "id0"]], "cneuromax.deeplearning.common.lrscheduler.constant": [[25, "module-cneuromax.deeplearning.common.lrscheduler.constant"]], "num_warmup_steps (cneuromax.deeplearning.common.lrscheduler.constant.constantconfig attribute)": [[25, "cneuromax.deeplearning.common.lrscheduler.constant.ConstantConfig.num_warmup_steps"]], "constantconfig (class in cneuromax.deeplearning.common.lrscheduler)": [[26, "cneuromax.deeplearning.common.lrscheduler.ConstantConfig"]], "linearwarmupconfig (class in cneuromax.deeplearning.common.lrscheduler)": [[26, "cneuromax.deeplearning.common.lrscheduler.LinearWarmupConfig"]], "_target_ (cneuromax.deeplearning.common.lrscheduler.constantconfig attribute)": [[26, "cneuromax.deeplearning.common.lrscheduler.ConstantConfig._target_"], [26, "id0"]], "_target_ (cneuromax.deeplearning.common.lrscheduler.linearwarmupconfig attribute)": [[26, "cneuromax.deeplearning.common.lrscheduler.LinearWarmupConfig._target_"], [26, "id1"]], "cneuromax.deeplearning.common.lrscheduler": [[26, "module-cneuromax.deeplearning.common.lrscheduler"]], "num_warmup_steps (cneuromax.deeplearning.common.lrscheduler.constantconfig attribute)": [[26, "cneuromax.deeplearning.common.lrscheduler.ConstantConfig.num_warmup_steps"]], "num_warmup_steps (cneuromax.deeplearning.common.lrscheduler.linearwarmupconfig attribute)": [[26, "cneuromax.deeplearning.common.lrscheduler.LinearWarmupConfig.num_warmup_steps"], [26, "id2"]], "linearwarmupconfig (class in cneuromax.deeplearning.common.lrscheduler.linear_warmup)": [[27, "cneuromax.deeplearning.common.lrscheduler.linear_warmup.LinearWarmupConfig"]], "_target_ (cneuromax.deeplearning.common.lrscheduler.linear_warmup.linearwarmupconfig attribute)": [[27, "cneuromax.deeplearning.common.lrscheduler.linear_warmup.LinearWarmupConfig._target_"], [27, "id0"]], "cneuromax.deeplearning.common.lrscheduler.linear_warmup": [[27, "module-cneuromax.deeplearning.common.lrscheduler.linear_warmup"]], "num_warmup_steps (cneuromax.deeplearning.common.lrscheduler.linear_warmup.linearwarmupconfig attribute)": [[27, "cneuromax.deeplearning.common.lrscheduler.linear_warmup.LinearWarmupConfig.num_warmup_steps"], [27, "id1"]], "mlp (class in cneuromax.deeplearning.common.nnmodule)": [[28, "cneuromax.deeplearning.common.nnmodule.MLP"]], "mlpconfig (class in cneuromax.deeplearning.common.nnmodule)": [[28, "cneuromax.deeplearning.common.nnmodule.MLPConfig"]], "activation_fn (cneuromax.deeplearning.common.nnmodule.mlpconfig attribute)": [[28, "cneuromax.deeplearning.common.nnmodule.MLPConfig.activation_fn"], [28, "id1"]], "cneuromax.deeplearning.common.nnmodule": [[28, "module-cneuromax.deeplearning.common.nnmodule"]], "config (cneuromax.deeplearning.common.nnmodule.mlp attribute)": [[28, "cneuromax.deeplearning.common.nnmodule.MLP.config"]], "dims (cneuromax.deeplearning.common.nnmodule.mlpconfig attribute)": [[28, "cneuromax.deeplearning.common.nnmodule.MLPConfig.dims"], [28, "id0"]], "forward() (cneuromax.deeplearning.common.nnmodule.mlp method)": [[28, "cneuromax.deeplearning.common.nnmodule.MLP.forward"]], "model (cneuromax.deeplearning.common.nnmodule.mlp attribute)": [[28, "cneuromax.deeplearning.common.nnmodule.MLP.model"]], "p_dropout (cneuromax.deeplearning.common.nnmodule.mlpconfig attribute)": [[28, "cneuromax.deeplearning.common.nnmodule.MLPConfig.p_dropout"], [28, "id2"]], "mlp (class in cneuromax.deeplearning.common.nnmodule.mlp)": [[29, "cneuromax.deeplearning.common.nnmodule.mlp.MLP"]], "mlpconfig (class in cneuromax.deeplearning.common.nnmodule.mlp)": [[29, "cneuromax.deeplearning.common.nnmodule.mlp.MLPConfig"]], "activation_fn (cneuromax.deeplearning.common.nnmodule.mlp.mlpconfig attribute)": [[29, "cneuromax.deeplearning.common.nnmodule.mlp.MLPConfig.activation_fn"], [29, "id1"]], "cneuromax.deeplearning.common.nnmodule.mlp": [[29, "module-cneuromax.deeplearning.common.nnmodule.mlp"]], "config (cneuromax.deeplearning.common.nnmodule.mlp.mlp attribute)": [[29, "cneuromax.deeplearning.common.nnmodule.mlp.MLP.config"]], "dims (cneuromax.deeplearning.common.nnmodule.mlp.mlpconfig attribute)": [[29, "cneuromax.deeplearning.common.nnmodule.mlp.MLPConfig.dims"], [29, "id0"]], "forward() (cneuromax.deeplearning.common.nnmodule.mlp.mlp method)": [[29, "cneuromax.deeplearning.common.nnmodule.mlp.MLP.forward"]], "model (cneuromax.deeplearning.common.nnmodule.mlp.mlp attribute)": [[29, "cneuromax.deeplearning.common.nnmodule.mlp.MLP.model"]], "p_dropout (cneuromax.deeplearning.common.nnmodule.mlp.mlpconfig attribute)": [[29, "cneuromax.deeplearning.common.nnmodule.mlp.MLPConfig.p_dropout"], [29, "id2"]], "adamconfig (class in cneuromax.deeplearning.common.optimizer.adam)": [[30, "cneuromax.deeplearning.common.optimizer.adam.AdamConfig"]], "_target_ (cneuromax.deeplearning.common.optimizer.adam.adamconfig attribute)": [[30, "cneuromax.deeplearning.common.optimizer.adam.AdamConfig._target_"], [30, "id0"]], "betas (cneuromax.deeplearning.common.optimizer.adam.adamconfig attribute)": [[30, "cneuromax.deeplearning.common.optimizer.adam.AdamConfig.betas"], [30, "id1"]], "cneuromax.deeplearning.common.optimizer.adam": [[30, "module-cneuromax.deeplearning.common.optimizer.adam"]], "eps (cneuromax.deeplearning.common.optimizer.adam.adamconfig attribute)": [[30, "cneuromax.deeplearning.common.optimizer.adam.AdamConfig.eps"], [30, "id2"]], "adamwconfig (class in cneuromax.deeplearning.common.optimizer.adamw)": [[31, "cneuromax.deeplearning.common.optimizer.adamw.AdamWConfig"]], "_target_ (cneuromax.deeplearning.common.optimizer.adamw.adamwconfig attribute)": [[31, "cneuromax.deeplearning.common.optimizer.adamw.AdamWConfig._target_"], [31, "id0"]], "cneuromax.deeplearning.common.optimizer.adamw": [[31, "module-cneuromax.deeplearning.common.optimizer.adamw"]], "baseoptimizerconfig (class in cneuromax.deeplearning.common.optimizer.base)": [[32, "cneuromax.deeplearning.common.optimizer.base.BaseOptimizerConfig"]], "_partial_ (cneuromax.deeplearning.common.optimizer.base.baseoptimizerconfig attribute)": [[32, "cneuromax.deeplearning.common.optimizer.base.BaseOptimizerConfig._partial_"], [32, "id1"]], "_target_ (cneuromax.deeplearning.common.optimizer.base.baseoptimizerconfig attribute)": [[32, "cneuromax.deeplearning.common.optimizer.base.BaseOptimizerConfig._target_"], [32, "id0"]], "cneuromax.deeplearning.common.optimizer.base": [[32, "module-cneuromax.deeplearning.common.optimizer.base"]], "lr (cneuromax.deeplearning.common.optimizer.base.baseoptimizerconfig attribute)": [[32, "cneuromax.deeplearning.common.optimizer.base.BaseOptimizerConfig.lr"], [32, "id2"]], "weight_decay (cneuromax.deeplearning.common.optimizer.base.baseoptimizerconfig attribute)": [[32, "cneuromax.deeplearning.common.optimizer.base.BaseOptimizerConfig.weight_decay"], [32, "id3"]], "adamconfig (class in cneuromax.deeplearning.common.optimizer)": [[33, "cneuromax.deeplearning.common.optimizer.AdamConfig"]], "adamwconfig (class in cneuromax.deeplearning.common.optimizer)": [[33, "cneuromax.deeplearning.common.optimizer.AdamWConfig"]], "_target_ (cneuromax.deeplearning.common.optimizer.adamconfig attribute)": [[33, "cneuromax.deeplearning.common.optimizer.AdamConfig._target_"], [33, "id0"]], "_target_ (cneuromax.deeplearning.common.optimizer.adamwconfig attribute)": [[33, "cneuromax.deeplearning.common.optimizer.AdamWConfig._target_"], [33, "id3"]], "betas (cneuromax.deeplearning.common.optimizer.adamconfig attribute)": [[33, "cneuromax.deeplearning.common.optimizer.AdamConfig.betas"], [33, "id1"]], "cneuromax.deeplearning.common.optimizer": [[33, "module-cneuromax.deeplearning.common.optimizer"]], "eps (cneuromax.deeplearning.common.optimizer.adamconfig attribute)": [[33, "cneuromax.deeplearning.common.optimizer.AdamConfig.eps"], [33, "id2"]], "adamconfig (class in cneuromax.deeplearning.common.optimizer.sgd)": [[34, "cneuromax.deeplearning.common.optimizer.sgd.AdamConfig"]], "_target_ (cneuromax.deeplearning.common.optimizer.sgd.adamconfig attribute)": [[34, "cneuromax.deeplearning.common.optimizer.sgd.AdamConfig._target_"], [34, "id0"]], "cneuromax.deeplearning.common.optimizer.sgd": [[34, "module-cneuromax.deeplearning.common.optimizer.sgd"]], "momentum (cneuromax.deeplearning.common.optimizer.sgd.adamconfig attribute)": [[34, "cneuromax.deeplearning.common.optimizer.sgd.AdamConfig.momentum"], [34, "id1"]], "basetrainerconfig (class in cneuromax.deeplearning.common.trainer.base)": [[35, "cneuromax.deeplearning.common.trainer.base.BaseTrainerConfig"]], "_target_ (cneuromax.deeplearning.common.trainer.base.basetrainerconfig attribute)": [[35, "cneuromax.deeplearning.common.trainer.base.BaseTrainerConfig._target_"], [35, "id0"]], "accelerator (cneuromax.deeplearning.common.trainer.base.basetrainerconfig attribute)": [[35, "cneuromax.deeplearning.common.trainer.base.BaseTrainerConfig.accelerator"], [35, "id1"]], "cneuromax.deeplearning.common.trainer.base": [[35, "module-cneuromax.deeplearning.common.trainer.base"]], "devices (cneuromax.deeplearning.common.trainer.base.basetrainerconfig attribute)": [[35, "cneuromax.deeplearning.common.trainer.base.BaseTrainerConfig.devices"], [35, "id3"]], "log_every_n_steps (cneuromax.deeplearning.common.trainer.base.basetrainerconfig attribute)": [[35, "cneuromax.deeplearning.common.trainer.base.BaseTrainerConfig.log_every_n_steps"], [35, "id8"]], "max_steps (cneuromax.deeplearning.common.trainer.base.basetrainerconfig attribute)": [[35, "cneuromax.deeplearning.common.trainer.base.BaseTrainerConfig.max_steps"], [35, "id6"]], "num_nodes (cneuromax.deeplearning.common.trainer.base.basetrainerconfig attribute)": [[35, "cneuromax.deeplearning.common.trainer.base.BaseTrainerConfig.num_nodes"], [35, "id4"]], "precision (cneuromax.deeplearning.common.trainer.base.basetrainerconfig attribute)": [[35, "cneuromax.deeplearning.common.trainer.base.BaseTrainerConfig.precision"], [35, "id5"]], "strategy (cneuromax.deeplearning.common.trainer.base.basetrainerconfig attribute)": [[35, "cneuromax.deeplearning.common.trainer.base.BaseTrainerConfig.strategy"], [35, "id2"]], "val_check_interval (cneuromax.deeplearning.common.trainer.base.basetrainerconfig attribute)": [[35, "cneuromax.deeplearning.common.trainer.base.BaseTrainerConfig.val_check_interval"], [35, "id7"]], "cputrainer (class in cneuromax.deeplearning.common.trainer.cpu)": [[36, "cneuromax.deeplearning.common.trainer.cpu.CPUTrainer"]], "accelerator (cneuromax.deeplearning.common.trainer.cpu.cputrainer attribute)": [[36, "cneuromax.deeplearning.common.trainer.cpu.CPUTrainer.accelerator"], [36, "id0"]], "cneuromax.deeplearning.common.trainer.cpu": [[36, "module-cneuromax.deeplearning.common.trainer.cpu"]], "ddptrainer (class in cneuromax.deeplearning.common.trainer.ddp)": [[37, "cneuromax.deeplearning.common.trainer.ddp.DDPTrainer"]], "cneuromax.deeplearning.common.trainer.ddp": [[37, "module-cneuromax.deeplearning.common.trainer.ddp"]], "strategy (cneuromax.deeplearning.common.trainer.ddp.ddptrainer attribute)": [[37, "cneuromax.deeplearning.common.trainer.ddp.DDPTrainer.strategy"], [37, "id0"]], "basetrainerconfig (class in cneuromax.deeplearning.common.trainer)": [[38, "cneuromax.deeplearning.common.trainer.BaseTrainerConfig"]], "cputrainer (class in cneuromax.deeplearning.common.trainer)": [[38, "cneuromax.deeplearning.common.trainer.CPUTrainer"]], "ddptrainer (class in cneuromax.deeplearning.common.trainer)": [[38, "cneuromax.deeplearning.common.trainer.DDPTrainer"]], "_target_ (cneuromax.deeplearning.common.trainer.basetrainerconfig attribute)": [[38, "cneuromax.deeplearning.common.trainer.BaseTrainerConfig._target_"], [38, "id0"]], "accelerator (cneuromax.deeplearning.common.trainer.basetrainerconfig attribute)": [[38, "cneuromax.deeplearning.common.trainer.BaseTrainerConfig.accelerator"], [38, "id1"]], "accelerator (cneuromax.deeplearning.common.trainer.cputrainer attribute)": [[38, "cneuromax.deeplearning.common.trainer.CPUTrainer.accelerator"], [38, "id9"]], "cneuromax.deeplearning.common.trainer": [[38, "module-cneuromax.deeplearning.common.trainer"]], "devices (cneuromax.deeplearning.common.trainer.basetrainerconfig attribute)": [[38, "cneuromax.deeplearning.common.trainer.BaseTrainerConfig.devices"], [38, "id3"]], "log_every_n_steps (cneuromax.deeplearning.common.trainer.basetrainerconfig attribute)": [[38, "cneuromax.deeplearning.common.trainer.BaseTrainerConfig.log_every_n_steps"], [38, "id8"]], "max_steps (cneuromax.deeplearning.common.trainer.basetrainerconfig attribute)": [[38, "cneuromax.deeplearning.common.trainer.BaseTrainerConfig.max_steps"], [38, "id6"]], "num_nodes (cneuromax.deeplearning.common.trainer.basetrainerconfig attribute)": [[38, "cneuromax.deeplearning.common.trainer.BaseTrainerConfig.num_nodes"], [38, "id4"]], "precision (cneuromax.deeplearning.common.trainer.basetrainerconfig attribute)": [[38, "cneuromax.deeplearning.common.trainer.BaseTrainerConfig.precision"], [38, "id5"]], "strategy (cneuromax.deeplearning.common.trainer.basetrainerconfig attribute)": [[38, "cneuromax.deeplearning.common.trainer.BaseTrainerConfig.strategy"], [38, "id2"]], "strategy (cneuromax.deeplearning.common.trainer.ddptrainer attribute)": [[38, "cneuromax.deeplearning.common.trainer.DDPTrainer.strategy"], [38, "id10"]], "val_check_interval (cneuromax.deeplearning.common.trainer.basetrainerconfig attribute)": [[38, "cneuromax.deeplearning.common.trainer.BaseTrainerConfig.val_check_interval"], [38, "id7"]], "cneuromax.deeplearning.common.utils": [[39, "module-cneuromax.deeplearning.common.utils"]], "initoptimparamscheckpointconnector (class in cneuromax.deeplearning.common.utils.lightning)": [[40, "cneuromax.deeplearning.common.utils.lightning.InitOptimParamsCheckpointConnector"]], "cneuromax.deeplearning.common.utils.lightning": [[40, "module-cneuromax.deeplearning.common.utils.lightning"]], "find_good_batch_size() (in module cneuromax.deeplearning.common.utils.lightning)": [[40, "cneuromax.deeplearning.common.utils.lightning.find_good_batch_size"]], "find_good_num_workers() (in module cneuromax.deeplearning.common.utils.lightning)": [[40, "cneuromax.deeplearning.common.utils.lightning.find_good_num_workers"]], "restore_optimizers() (cneuromax.deeplearning.common.utils.lightning.initoptimparamscheckpointconnector method)": [[40, "cneuromax.deeplearning.common.utils.lightning.InitOptimParamsCheckpointConnector.restore_optimizers"]], "cneuromax.deeplearning.experiment": [[41, "module-cneuromax.deeplearning.experiment"]], "cneuromax.deeplearning.experiment.mnist_classification.config": [[42, "module-cneuromax.deeplearning.experiment.mnist_classification.config"]], "mnistdatamodule (class in cneuromax.deeplearning.experiment.mnist_classification.datamodule)": [[43, "cneuromax.deeplearning.experiment.mnist_classification.datamodule.MNISTDataModule"]], "mnistdatamoduleconfig (class in cneuromax.deeplearning.experiment.mnist_classification.datamodule)": [[43, "cneuromax.deeplearning.experiment.mnist_classification.datamodule.MNISTDataModuleConfig"]], "cneuromax.deeplearning.experiment.mnist_classification.datamodule": [[43, "module-cneuromax.deeplearning.experiment.mnist_classification.datamodule"]], "fit_dataset_mean (cneuromax.deeplearning.experiment.mnist_classification.datamodule.mnistdatamoduleconfig attribute)": [[43, "cneuromax.deeplearning.experiment.mnist_classification.datamodule.MNISTDataModuleConfig.fit_dataset_mean"], [43, "id1"]], "fit_dataset_std (cneuromax.deeplearning.experiment.mnist_classification.datamodule.mnistdatamoduleconfig attribute)": [[43, "cneuromax.deeplearning.experiment.mnist_classification.datamodule.MNISTDataModuleConfig.fit_dataset_std"], [43, "id2"]], "float_is_gt0_lt1 (in module cneuromax.deeplearning.experiment.mnist_classification.datamodule)": [[43, "cneuromax.deeplearning.experiment.mnist_classification.datamodule.float_is_gt0_lt1"]], "prepare_data() (cneuromax.deeplearning.experiment.mnist_classification.datamodule.mnistdatamodule method)": [[43, "cneuromax.deeplearning.experiment.mnist_classification.datamodule.MNISTDataModule.prepare_data"]], "setup() (cneuromax.deeplearning.experiment.mnist_classification.datamodule.mnistdatamodule method)": [[43, "cneuromax.deeplearning.experiment.mnist_classification.datamodule.MNISTDataModule.setup"]], "str_is_fit_or_test (in module cneuromax.deeplearning.experiment.mnist_classification.datamodule)": [[43, "cneuromax.deeplearning.experiment.mnist_classification.datamodule.str_is_fit_or_test"]], "train_val_split (cneuromax.deeplearning.experiment.mnist_classification.datamodule.mnistdatamodule attribute)": [[43, "cneuromax.deeplearning.experiment.mnist_classification.datamodule.MNISTDataModule.train_val_split"]], "transform (cneuromax.deeplearning.experiment.mnist_classification.datamodule.mnistdatamodule attribute)": [[43, "cneuromax.deeplearning.experiment.mnist_classification.datamodule.MNISTDataModule.transform"]], "val_percentage (cneuromax.deeplearning.experiment.mnist_classification.datamodule.mnistdatamoduleconfig attribute)": [[43, "cneuromax.deeplearning.experiment.mnist_classification.datamodule.MNISTDataModuleConfig.val_percentage"], [43, "id0"]], "cneuromax.deeplearning.experiment.mnist_classification.datamodule_test": [[44, "module-cneuromax.deeplearning.experiment.mnist_classification.datamodule_test"]], "datamodule() (in module cneuromax.deeplearning.experiment.mnist_classification.datamodule_test)": [[44, "cneuromax.deeplearning.experiment.mnist_classification.datamodule_test.datamodule"]], "test_setup_fit() (in module cneuromax.deeplearning.experiment.mnist_classification.datamodule_test)": [[44, "cneuromax.deeplearning.experiment.mnist_classification.datamodule_test.test_setup_fit"]], "test_setup_test() (in module cneuromax.deeplearning.experiment.mnist_classification.datamodule_test)": [[44, "cneuromax.deeplearning.experiment.mnist_classification.datamodule_test.test_setup_test"]], "mnistdatamodule (class in cneuromax.deeplearning.experiment.mnist_classification)": [[45, "cneuromax.deeplearning.experiment.mnist_classification.MNISTDataModule"]], "mnistdatamoduleconfig (class in cneuromax.deeplearning.experiment.mnist_classification)": [[45, "cneuromax.deeplearning.experiment.mnist_classification.MNISTDataModuleConfig"]], "cneuromax.deeplearning.experiment.mnist_classification": [[45, "module-cneuromax.deeplearning.experiment.mnist_classification"]], "fit_dataset_mean (cneuromax.deeplearning.experiment.mnist_classification.mnistdatamoduleconfig attribute)": [[45, "cneuromax.deeplearning.experiment.mnist_classification.MNISTDataModuleConfig.fit_dataset_mean"], [45, "id1"]], "fit_dataset_std (cneuromax.deeplearning.experiment.mnist_classification.mnistdatamoduleconfig attribute)": [[45, "cneuromax.deeplearning.experiment.mnist_classification.MNISTDataModuleConfig.fit_dataset_std"], [45, "id2"]], "prepare_data() (cneuromax.deeplearning.experiment.mnist_classification.mnistdatamodule method)": [[45, "cneuromax.deeplearning.experiment.mnist_classification.MNISTDataModule.prepare_data"]], "setup() (cneuromax.deeplearning.experiment.mnist_classification.mnistdatamodule method)": [[45, "cneuromax.deeplearning.experiment.mnist_classification.MNISTDataModule.setup"]], "train_val_split (cneuromax.deeplearning.experiment.mnist_classification.mnistdatamodule attribute)": [[45, "cneuromax.deeplearning.experiment.mnist_classification.MNISTDataModule.train_val_split"]], "transform (cneuromax.deeplearning.experiment.mnist_classification.mnistdatamodule attribute)": [[45, "cneuromax.deeplearning.experiment.mnist_classification.MNISTDataModule.transform"]], "val_percentage (cneuromax.deeplearning.experiment.mnist_classification.mnistdatamoduleconfig attribute)": [[45, "cneuromax.deeplearning.experiment.mnist_classification.MNISTDataModuleConfig.val_percentage"], [45, "id0"]], "mnistclassificationlitmodule (class in cneuromax.deeplearning.experiment.mnist_classification.litmodule)": [[46, "cneuromax.deeplearning.experiment.mnist_classification.litmodule.MNISTClassificationLitModule"]], "accuracy (cneuromax.deeplearning.experiment.mnist_classification.litmodule.mnistclassificationlitmodule attribute)": [[46, "cneuromax.deeplearning.experiment.mnist_classification.litmodule.MNISTClassificationLitModule.accuracy"]], "cneuromax.deeplearning.experiment.mnist_classification.litmodule": [[46, "module-cneuromax.deeplearning.experiment.mnist_classification.litmodule"]], "forward() (cneuromax.deeplearning.experiment.mnist_classification.litmodule.mnistclassificationlitmodule method)": [[46, "cneuromax.deeplearning.experiment.mnist_classification.litmodule.MNISTClassificationLitModule.forward"]], "nnmodule (cneuromax.deeplearning.experiment.mnist_classification.litmodule.mnistclassificationlitmodule attribute)": [[46, "cneuromax.deeplearning.experiment.mnist_classification.litmodule.MNISTClassificationLitModule.nnmodule"]], "optimizer (cneuromax.deeplearning.experiment.mnist_classification.litmodule.mnistclassificationlitmodule attribute)": [[46, "cneuromax.deeplearning.experiment.mnist_classification.litmodule.MNISTClassificationLitModule.optimizer"]], "scheduler (cneuromax.deeplearning.experiment.mnist_classification.litmodule.mnistclassificationlitmodule attribute)": [[46, "cneuromax.deeplearning.experiment.mnist_classification.litmodule.MNISTClassificationLitModule.scheduler"]], "cneuromax.deeplearning": [[47, "module-cneuromax.deeplearning"]], "cneuromax": [[48, "module-cneuromax"]], "cneuromax.neuroevolution": [[49, "module-cneuromax.neuroevolution"]]}})