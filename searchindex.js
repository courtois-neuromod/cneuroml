Search.setIndex({"docnames": ["Contribution", "Execution", "Execution_On_a_Linux_machine", "Execution_On_a_Slurm_cluster", "Installation", "Installation_Common_to_all_machines", "Installation_On_a_Linux_machine", "Installation_On_a_Slurm_cluster", "autoapi/cneuromax/application/index", "autoapi/cneuromax/common/index", "autoapi/cneuromax/common/logger/index", "autoapi/cneuromax/common/logger/wandb/index", "autoapi/cneuromax/deeplearning/__main__/index", "autoapi/cneuromax/deeplearning/common/datamodule/base/index", "autoapi/cneuromax/deeplearning/common/datamodule/index", "autoapi/cneuromax/deeplearning/common/fitter/index", "autoapi/cneuromax/deeplearning/common/index", "autoapi/cneuromax/deeplearning/common/litmodule/base/index", "autoapi/cneuromax/deeplearning/common/litmodule/classification/base/index", "autoapi/cneuromax/deeplearning/common/litmodule/classification/index", "autoapi/cneuromax/deeplearning/common/litmodule/index", "autoapi/cneuromax/deeplearning/common/lrscheduler/base/index", "autoapi/cneuromax/deeplearning/common/lrscheduler/base_test/index", "autoapi/cneuromax/deeplearning/common/lrscheduler/index", "autoapi/cneuromax/deeplearning/common/lrscheduler/none_test/index", "autoapi/cneuromax/deeplearning/common/nnmodule/index", "autoapi/cneuromax/deeplearning/common/nnmodule/mlp/index", "autoapi/cneuromax/deeplearning/common/nnmodule/mlp_test/index", "autoapi/cneuromax/deeplearning/common/optimizer/adam/index", "autoapi/cneuromax/deeplearning/common/optimizer/adam_test/index", "autoapi/cneuromax/deeplearning/common/optimizer/adamw/index", "autoapi/cneuromax/deeplearning/common/optimizer/base/index", "autoapi/cneuromax/deeplearning/common/optimizer/base_test/index", "autoapi/cneuromax/deeplearning/common/optimizer/index", "autoapi/cneuromax/deeplearning/common/optimizer/sgd/index", "autoapi/cneuromax/deeplearning/common/optimizer/sgd_test/index", "autoapi/cneuromax/deeplearning/common/optimizer/w_test/index", "autoapi/cneuromax/deeplearning/common/utils/index", "autoapi/cneuromax/deeplearning/common/utils/lightning/index", "autoapi/cneuromax/deeplearning/experiment/index", "autoapi/cneuromax/deeplearning/experiment/mnist_classification/datamodule/index", "autoapi/cneuromax/deeplearning/experiment/mnist_classification/datamodule_test/index", "autoapi/cneuromax/deeplearning/experiment/mnist_classification/index", "autoapi/cneuromax/deeplearning/experiment/mnist_classification/litmodule/index", "autoapi/cneuromax/deeplearning/index", "autoapi/cneuromax/index", "autoapi/cneuromax/neuroevolution/index", "autoapi/index", "index"], "filenames": ["Contribution.rst", "Execution.rst", "Execution_On_a_Linux_machine.rst", "Execution_On_a_Slurm_cluster.rst", "Installation.rst", "Installation_Common_to_all_machines.rst", "Installation_On_a_Linux_machine.rst", "Installation_On_a_Slurm_cluster.rst", "autoapi/cneuromax/application/index.rst", "autoapi/cneuromax/common/index.rst", "autoapi/cneuromax/common/logger/index.rst", "autoapi/cneuromax/common/logger/wandb/index.rst", "autoapi/cneuromax/deeplearning/__main__/index.rst", "autoapi/cneuromax/deeplearning/common/datamodule/base/index.rst", "autoapi/cneuromax/deeplearning/common/datamodule/index.rst", "autoapi/cneuromax/deeplearning/common/fitter/index.rst", "autoapi/cneuromax/deeplearning/common/index.rst", "autoapi/cneuromax/deeplearning/common/litmodule/base/index.rst", "autoapi/cneuromax/deeplearning/common/litmodule/classification/base/index.rst", "autoapi/cneuromax/deeplearning/common/litmodule/classification/index.rst", "autoapi/cneuromax/deeplearning/common/litmodule/index.rst", "autoapi/cneuromax/deeplearning/common/lrscheduler/base/index.rst", "autoapi/cneuromax/deeplearning/common/lrscheduler/base_test/index.rst", "autoapi/cneuromax/deeplearning/common/lrscheduler/index.rst", "autoapi/cneuromax/deeplearning/common/lrscheduler/none_test/index.rst", "autoapi/cneuromax/deeplearning/common/nnmodule/index.rst", "autoapi/cneuromax/deeplearning/common/nnmodule/mlp/index.rst", "autoapi/cneuromax/deeplearning/common/nnmodule/mlp_test/index.rst", "autoapi/cneuromax/deeplearning/common/optimizer/adam/index.rst", "autoapi/cneuromax/deeplearning/common/optimizer/adam_test/index.rst", "autoapi/cneuromax/deeplearning/common/optimizer/adamw/index.rst", "autoapi/cneuromax/deeplearning/common/optimizer/base/index.rst", "autoapi/cneuromax/deeplearning/common/optimizer/base_test/index.rst", "autoapi/cneuromax/deeplearning/common/optimizer/index.rst", "autoapi/cneuromax/deeplearning/common/optimizer/sgd/index.rst", "autoapi/cneuromax/deeplearning/common/optimizer/sgd_test/index.rst", "autoapi/cneuromax/deeplearning/common/optimizer/w_test/index.rst", "autoapi/cneuromax/deeplearning/common/utils/index.rst", "autoapi/cneuromax/deeplearning/common/utils/lightning/index.rst", "autoapi/cneuromax/deeplearning/experiment/index.rst", "autoapi/cneuromax/deeplearning/experiment/mnist_classification/datamodule/index.rst", "autoapi/cneuromax/deeplearning/experiment/mnist_classification/datamodule_test/index.rst", "autoapi/cneuromax/deeplearning/experiment/mnist_classification/index.rst", "autoapi/cneuromax/deeplearning/experiment/mnist_classification/litmodule/index.rst", "autoapi/cneuromax/deeplearning/index.rst", "autoapi/cneuromax/index.rst", "autoapi/cneuromax/neuroevolution/index.rst", "autoapi/index.rst", "index.rst"], "titles": ["Contribution", "Execution", "On a Linux machine", "On a Slurm cluster", "Installation", "Common to all machines", "On a Linux machine", "On a Slurm cluster", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.application</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.common</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.common.logger</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.common.logger.wandb</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.__main__</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.datamodule.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.datamodule</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.fitter</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.litmodule.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.litmodule.classification.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.litmodule.classification</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.litmodule</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.lrscheduler.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.lrscheduler.base_test</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.lrscheduler</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.lrscheduler.none_test</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.nnmodule</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.nnmodule.mlp</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.nnmodule.mlp_test</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.optimizer.adam</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.optimizer.adam_test</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.optimizer.adamw</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.optimizer.base</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.optimizer.base_test</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.optimizer</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.optimizer.sgd</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.optimizer.sgd_test</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.optimizer.w_test</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.common.utils.lightning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.experiment</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.experiment.mnist_classification.datamodule</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.experiment.mnist_classification.datamodule_test</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.experiment.mnist_classification</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning.experiment.mnist_classification.litmodule</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.deeplearning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cneuromax.neuroevolution</span></code>", "API Reference", "Welcome to the cneuromax documentation!"], "terms": {"have": [0, 4, 5], "complet": 0, "instal": [0, 1, 3, 5, 48], "step": [0, 4, 5, 17, 18, 19, 20], "befor": [0, 13, 14], "move": [0, 4, 5], "thi": [0, 4, 5, 13, 14, 15, 16, 25, 26, 38, 44, 47, 48], "section": [0, 4, 6], "link": 0, "http": [0, 28, 30, 33, 34], "com": [0, 4, 5], "courtoi": [0, 4, 5], "neuromod": [0, 4, 5], "cneuromax": [0, 1, 2, 3, 4, 5, 6, 7, 47], "In": [0, 15], "order": 0, "you": [0, 4, 5, 38], "need": [0, 13, 14, 15, 17, 20, 28, 30, 31, 33, 34], "depend": [0, 15], "can": [0, 4, 5], "done": 0, "run": [0, 4, 5, 6, 7, 12, 15, 38], "follow": [0, 4, 5, 6, 38], "command": [0, 4, 5, 7], "cd": [0, 1, 3, 4, 5], "cneuromax_path": [0, 1, 2, 3, 4, 5, 7], "python": [0, 4, 7], "m": [0, 1, 2, 3, 4, 7], "venv": [0, 1, 3, 4, 7], "bin": [0, 1, 3, 4, 7], "activ": [0, 1, 3, 4, 7, 25, 26, 48], "openmpi": 0, "": [0, 4, 13, 14, 17, 20], "alreadi": [0, 4, 5], "sudo": [0, 4, 5, 6], "apt": [0, 4, 5, 6], "y": [0, 4, 5, 6], "libopenmpi": 0, "dev": 0, "pip": [0, 4, 7], "extra": 0, "index": [0, 21], "url": 0, "download": [0, 40, 42], "pytorch": [0, 13, 14, 16, 17, 20, 28, 30, 33, 34, 38, 43, 44], "org": [0, 28, 30, 33, 34], "whl": 0, "cpu": [0, 13, 14], "e": [0, 1, 2, 4, 5, 7, 38], "now": [0, 4, 5, 7], "all": [0, 7, 16, 48], "do": [0, 15], "note": [0, 15], "librari": [0, 1, 3, 4, 5, 8, 44, 45, 46], "version": [0, 4, 5, 6], "ar": [0, 4, 15, 38], "meant": 0, "actual": 0, "so": [0, 4, 38], "i": [0, 4, 5, 7, 13, 14, 15, 17, 20, 25, 26, 38, 44, 48], "prefer": 0, "work": 0, "contain": [0, 1, 3, 5, 7, 16, 17, 20, 47], "reproduc": [0, 4], "purpos": 0, "The": [0, 4, 7, 12, 13, 14, 15, 17, 18, 19, 20, 25, 26, 38, 40, 42, 43, 45], "main": [0, 15], "branch": 0, "protect": 0, "mean": [0, 13, 14], "happen": 0, "through": [0, 4, 7, 25, 26, 38, 43], "pull": [0, 5, 7], "request": 0, "rather": [0, 4, 5, 38], "than": [0, 4, 5, 13, 38], "direct": 0, "push": [0, 4, 5], "ani": [0, 12, 13, 14], "go": 0, "pass": [0, 25, 26, 38, 43], "number": [0, 13, 14, 25, 26, 38], "common": [0, 40, 42, 43, 44, 45, 47, 48], "standard": 0, "check": 0, "ensur": 0, "high": 0, "qualiti": 0, "doe": [0, 13, 14], "portion": 0, "exist": 0, "base": [0, 14, 16, 19, 20, 22, 23, 24, 25, 26, 28, 30, 33, 34, 38, 40, 42, 43, 44, 47], "those": 0, "clean": 0, "format": 0, "pep8": 0, "compliant": 0, "we": [0, 4, 7, 15], "us": [0, 13, 14, 15, 16, 38, 40, 42, 44], "black": 0, "79": 0, "line": 0, "72": 0, "comment": 0, "lint": 0, "ruff": 0, "rule": 0, "don": 0, "creat": [0, 1, 2, 3, 15, 18, 19, 40, 42, 47], "conflict": 0, "type": [0, 13, 14, 15, 17, 18, 19, 20, 25, 26, 38, 40, 42, 43], "mypi": 0, "strict": 0, "unit": 0, "If": [0, 4, 5, 13, 14, 15, 17, 20, 38], "thei": 0, "your": [0, 1, 2, 3, 4, 5], "current": 0, "onli": 0, "leverag": 0, "pytest": 0, "most": 0, "like": 0, "eventu": 0, "broader": 0, "rest": 0, "document": [0, 15, 47], "file": [0, 4, 7], "doc8": 0, "yaml": [0, 1, 3], "yamllint": 0, "trail": 0, "whitespac": 0, "regardless": 0, "extens": 0, "end": 0, "newlin": 0, "chang": 0, "made": 0, "pyreq": 0, "folder": [0, 4, 5, 7], "docker": [0, 4, 6, 7], "podman": [0, 1, 2, 3], "imag": [0, 43], "still": 0, "built": 0, "doc": [0, 28, 30, 33, 34], "page": [0, 47], "wait": 0, "ci": 0, "continu": 0, "integr": 0, "finish": 0, "verifi": 0, "some": 0, "fast": 0, "sub": 0, "1": [0, 13, 14, 40, 42, 43, 47], "second": [0, 4, 7], "quick": 0, "wai": 0, "execut": [0, 48], "them": [0, 13, 14], "pre": 0, "commit": 0, "hook": 0, "which": [0, 4, 7], "after": 0, "being": [0, 13, 14], "upon": 0, "each": [0, 13, 14, 17, 20, 25, 26, 38], "prevent": 0, "from": [0, 1, 2, 3, 13, 14, 15, 17, 20, 38], "fail": 0, "automat": 0, "import": 0, "function": [0, 15, 17, 20, 25, 26, 43], "well": 0, "To": 0, "disabl": 0, "behaviour": 0, "instanc": [0, 13, 14, 17, 20, 25, 26, 41, 43], "when": [0, 4, 5, 21], "re": 0, "want": 0, "deal": 0, "valid": [0, 12, 13, 14, 15, 40, 42], "instead": 0, "slow": 0, "typecheck": 0, "slower": 0, "henc": 0, "suitabl": [0, 25, 26], "howev": 0, "pretti": 0, "save": [0, 15, 38], "time": 0, "right": 0, "merg": 0, "welcom": 0, "red": 0, "wave": 0, "error": 0, "warn": 0, "everi": [0, 4, 7], "suggest": 0, "editor": 0, "notifi": 0, "issu": 0, "On": [0, 48], "formatt": 0, "charliermarsh": 0, "lextudio": 0, "restructuredtext": 0, "enabl": [0, 4, 5], "fnando": 0, "linter": 0, "And": 0, "here": 0, "insert": 0, "config": [0, 4, 5, 7, 12, 13, 14, 15, 25, 26, 38, 40, 42], "user": [0, 1, 2, 3, 4, 5], "json": 0, "arg": 0, "pyproject": 0, "toml": 0, "defaultformatt": 0, "formatonsav": 0, "true": [0, 4, 5, 13, 14, 21, 31], "codeactionsonsav": 0, "sourc": [0, 4, 5], "organizeimport": 0, "mypyen": 0, "mypyarg": 0, "esbonio": 0, "server": 0, "fals": 0, "executablepath": 0, "home": [0, 4, 5], "max": 0, "syntaxhighlight": 0, "miscellan": 0, "insertfinalnewlin": 0, "trimtrailingwhitespac": 0, "pylanc": 0, "analysi": 0, "ignor": 0, "throw": 0, "incorrect": 0, "otherwis": 0, "redund": 0, "due": 0, "its": 0, "even": 0, "though": 0, "call": [0, 13, 14, 17, 18, 19, 20, 25, 26, 40, 42, 43], "appli": 0, "uninstal": 0, "ha": [0, 38], "other": 0, "featur": [0, 4, 5], "syntax": 0, "highlight": 0, "termin": 0, "window": 0, "directori": [0, 13, 14], "new": [0, 13, 14, 15], "checkout": 0, "b": [0, 15], "your_branch_nam": 0, "remot": 0, "add": [0, 4, 5], "commit_messag": 0, "been": 0, "introduct": 0, "while": [0, 15], "were": 0, "updat": [0, 4, 5, 38], "latest": [0, 1, 2, 3, 4, 6, 7], "stash": 0, "option": 0, "uncommit": 0, "rebas": 0, "pop": 0, "back": 0, "previou": 0, "block": 0, "might": 0, "forc": 0, "flag": [0, 4, 5], "Then": 0, "onc": [0, 15], "approv": 0, "delet": [0, 4, 7], "d": 0, "For": 0, "remain": [0, 38], "fork": 0, "todo": 0, "prune": 0, "instruct": [0, 15], "exampl": [1, 2, 3, 4, 5, 6], "simpl": [1, 2, 3, 43], "mnist": [1, 2, 3, 40, 42, 43], "train": [1, 2, 3, 13, 14, 15, 18, 19, 21, 38, 40, 42], "pythonpath": [1, 2], "v": [1, 2, 3], "w": [1, 2, 3, 15, 38], "deps_onli": [1, 2, 3], "all_dep": [1, 2, 3], "python3": [1, 2, 3, 4, 7], "dl": [1, 2, 3], "task": [1, 2, 3, 38], "visual": [1, 2, 3], "tabular": [1, 2, 3], "classif": [1, 2, 3, 16, 20, 43, 44, 47], "mlp": [1, 2, 16, 25, 27, 44, 47], "own": [1, 2, 3], "ssh": [1, 2, 3], "tunnel": [1, 2, 3], "fill": [1, 2, 3], "appropri": [1, 2, 3, 38], "valu": [1, 2, 3, 13, 14, 15, 17, 20], "address": [1, 2, 3], "nl": [1, 2], "8888": [1, 2, 3], "localhost": [1, 2], "allow": [1, 2, 3, 25, 26], "root": [1, 2, 3], "ip": [1, 2, 3], "0": [1, 2, 13, 14, 15, 25, 26, 28, 29, 31, 32, 33, 34, 35, 38, 40, 42], "port": [1, 2, 3], "previous": [1, 3], "virtual": [1, 3], "environ": [1, 3], "mlp_slurm": [1, 3], "comput": [1, 3, 4, 7, 13, 14, 18, 19], "node": [1, 3, 4, 7], "sshuttl": [1, 3], "dn": [1, 3], "nr": [1, 3], "salloc": [1, 3], "account": [1, 3], "bash": [1, 3], "c": [1, 3, 12], "modul": [1, 3, 4, 7, 14, 16, 19, 20, 25, 44], "load": [1, 3, 4, 7, 13, 14, 38], "nvidia": [1, 3, 7], "ctk": [1, 3], "cdi": [1, 3], "gener": [1, 3, 28, 30, 33, 34, 38, 41, 47], "output": [1, 3, 25, 26, 43], "var": [1, 3], "tmp": [1, 3], "mkdir": [1, 3, 4, 7], "p": [1, 3], "slurm_tmpdir": [1, 3, 4, 7], "scratch": [1, 3, 4, 7], "cp": [1, 3], "tar": [1, 3, 4, 7], "xf": [1, 3], "hostnam": [1, 3], "f": [1, 3], "lab": 2, "jupyt": 2, "machin": [3, 48], "below": 4, "full": [4, 21], "cater": 4, "toward": 4, "ubuntu": [4, 6], "maxim": 4, "across": 4, "platform": 4, "util": [4, 13, 14, 16, 44, 45, 47], "technologi": 4, "desir": [4, 5, 13, 14], "clone": [4, 5], "git": [4, 5, 48], "github": [4, 5, 48], "haven": [4, 5], "t": [4, 5, 25, 26, 48], "autosetupremot": [4, 5], "specifi": [4, 5, 31], "u": [4, 5], "origin": [4, 5], "branch_nam": [4, 5], "global": [4, 5], "make": [4, 5, 15, 38, 48], "sure": [4, 5, 48], "least": [4, 5, 16], "37": [4, 5], "take": [4, 5, 7], "advantag": [4, 5], "ppa": [4, 5], "core": [4, 5], "defin": [4, 5, 13, 14], "persist": [4, 5], "variabl": [4, 5, 25, 26], "system": [4, 5], "echo": [4, 5, 7], "nexport": [4, 5], "pwd": [4, 5], "bashrc": [4, 5], "either": [4, 5], "specif": [4, 5], "plan": [4, 5], "contribut": [4, 5, 48], "skip": [4, 5], "offici": [4, 6], "guid": [4, 6], "apr": [4, 6], "2023": [4, 6], "525": [4, 6], "maximilienlc": [4, 6, 7], "dep": [4, 6, 7], "10": [4, 7, 43], "r": [4, 7], "pipreq": [4, 7], "0_experiment_manag": [4, 7], "txt": [4, 7], "set": [4, 7, 13, 14, 15, 40, 42, 48], "up": [4, 7, 15, 48], "storag": [4, 7], "configur": [4, 7, 15, 38], "ndriver": [4, 7], "overlai": [4, 7], "n": [4, 7], "graphroot": [4, 7], "conf": [4, 7], "compress": [4, 7], "cvf": [4, 7], "bolt_stat": [4, 7], "db": [4, 7], "rm": [4, 7], "libpod": [4, 7], "readi": [4, 7], "At": [4, 7], "begin": [4, 7], "job": [4, 7], "hydra": [4, 7, 15, 38, 44], "submitit": [4, 7], "copi": [4, 7, 13, 14], "over": [4, 7], "local": [4, 7, 48], "drive": [4, 7], "decompress": [4, 7], "necessari": [4, 7], "start": [4, 7, 15], "averag": [4, 7], "around": [4, 7], "20": [4, 7], "2": 5, "linux": [5, 48], "slurm": [5, 15, 48], "3": 7, "toolkit": 7, "compon": [8, 44, 46], "logger": [9, 15, 44, 45, 47], "wandb": [9, 10, 44, 45, 47], "wandbloggerconfig": 11, "name": 11, "str": [11, 13, 14, 28, 30, 31, 33, 34], "none": [11, 13, 14, 15, 22, 24, 27, 29, 32, 35, 36, 38, 40, 41, 42], "project": [11, 48], "default": [12, 13, 14], "list": [12, 17, 20, 25, 26, 28, 33], "omegaconf": [12, 15, 38, 44], "dictconfig": [12, 15, 38, 44], "float": [12, 15, 17, 18, 19, 20, 25, 26, 28, 31, 33, 34, 40, 42, 43, 44], "paramet": [12, 13, 14, 15, 17, 18, 19, 20, 25, 26, 27, 28, 30, 31, 33, 34, 38, 40, 41, 42, 43, 44], "descript": 12, "return": [12, 13, 14, 15, 17, 18, 19, 20, 25, 26, 38, 41, 43], "loss": [12, 15, 17, 18, 19, 20], "kei": 12, "str_is_per_device_batch_s": [13, 14], "typealia": [13, 40], "runtim": [13, 40], "annot": [13, 14, 40], "string": [13, 40], "per_device_batch_s": [13, 14], "int_is_gt0": [13, 14], "an": [13, 15, 18, 19, 38], "integ": 13, "greater": 13, "basedataset": [13, 14], "val": [13, 14, 18, 19, 40, 42], "test": [13, 14, 18, 19, 22, 24, 27, 29, 32, 35, 36, 40, 42, 48], "predict": [13, 14], "torch": [13, 14, 17, 18, 19, 20, 25, 26, 28, 30, 33, 34, 43, 44], "data": [13, 14, 38], "dataset": [13, 14, 40, 42], "tensor": [13, 14, 17, 18, 19, 20, 25, 26, 43, 44], "basedatamoduleconfig": [13, 14, 40, 42], "data_dir": [13, 14], "path": [13, 14, 15, 41], "per": [13, 14], "devic": [13, 14], "sampl": [13, 14], "iter": [13, 14, 38], "per_device_num_work": [13, 14], "process": [13, 14, 15, 38], "assign": [13, 14], "device_typ": [13, 14], "int": [13, 14, 18, 19, 21, 25, 26, 38], "beartyp": [13, 14], "vale": [13, 14], "lambda": [13, 14], "x": [13, 14, 15, 25, 26, 43], "gpu": [13, 14, 15, 38], "basedatamodul": [13, 14, 15, 40, 42], "lightn": [13, 14, 15, 16, 17, 20, 37, 44, 47], "lightningdatamodul": [13, 14, 44], "With": [13, 14], "stage": [13, 14, 18, 19, 40, 42], "children": [13, 14], "properli": [13, 14], "dict": [13, 14], "liter": [13, 14, 18, 19], "pin_memori": [13, 14], "whether": [13, 14], "pin": [13, 14], "memori": [13, 14], "bool": [13, 14, 21, 31], "parent": [13, 14, 17, 18, 19, 20, 25, 26, 40, 42, 43], "constructor": [13, 14, 17, 18, 19, 20, 25, 26, 40, 42, 43], "load_state_dict": [13, 14], "state_dict": [13, 14], "batch": [13, 14, 17, 18, 19, 20, 25, 26, 38, 43], "size": [13, 14, 38], "dictionari": [13, 14], "insid": [13, 14], "train_dataload": [13, 14], "dataload": [13, 14], "A": [13, 14, 17, 20, 41, 43], "rais": [13, 14, 17, 20], "attributeerror": [13, 14, 17, 20], "val_dataload": [13, 14], "test_dataload": [13, 14], "predict_dataload": [13, 14], "shuffl": [13, 14], "attribut": [14, 17, 20], "torch_compile_minimum_cuda_vers": 15, "7": 15, "deep": [15, 16, 37, 44], "learn": [15, 16, 28, 30, 31, 33, 34, 37, 44], "entri": 15, "point": 15, "It": 15, "act": 15, "interfac": 15, "between": 15, "launcher": 15, "sweeper": [15, 38], "trainer": [15, 38, 44], "instanti": [15, 17, 20, 21, 28, 30, 31, 33, 34], "num_nod": 15, "num_gpus_per_nod": 15, "wandblogg": [15, 44], "litmodul": [15, 16, 39, 42, 44, 45, 47], "baselitmodul": [15, 17, 18, 19, 20], "datamodul": [15, 16, 39, 41, 42, 44, 45, 47], "transform": [15, 40, 42], "object": [15, 21], "hardwar": 15, "checkpoint": [15, 38], "resum": [15, 21, 38], "applic": [15, 45, 47], "instantiate_lightning_object": 15, "offlin": 15, "mode": 15, "compil": 15, "cuda": 15, "set_batch_size_and_num_work": 15, "hpo": [15, 44], "find": [15, 38], "good": 15, "batch_siz": [15, 18, 19, 25, 26, 38, 43], "num_work": [15, 38], "see": 15, "find_good_batch_s": [15, 38], "find_good_num_work": [15, 38], "more": [15, 16], "detail": 15, "assumpt": [15, 38], "hyper": [15, 44], "optim": [15, 16, 17, 18, 19, 20, 21, 22, 24, 38, 43, 44, 45, 47], "same": [15, 38], "wa": 15, "therefor": 15, "again": 15, "look": 15, "set_checkpoint_path": 15, "three": 15, "case": [15, 25, 26], "consid": 15, "load_path_hpo": 15, "custom": 15, "connector": [15, 38], "overrid": 15, "load_path": 15, "regular": 15, "neither": 15, "nor": 15, "fit": [15, 38, 40], "method": [15, 17, 20], "model": [15, 25, 26, 28, 30, 31, 33, 34], "final": 15, "ought": 16, "two": [16, 27], "experi": [16, 44, 45, 47], "lrschedul": [16, 17, 18, 19, 20, 43, 44, 45, 47], "base_test": [16, 23, 33, 44, 47], "none_test": [16, 23, 44, 47], "nnmodul": [16, 17, 18, 19, 20, 43, 44, 45, 47], "mlp_test": [16, 25, 44, 47], "adam": [16, 33, 44, 47], "adam_test": [16, 33, 44, 47], "adamw": [16, 33, 44, 47], "sgd": [16, 33, 44, 47], "sgd_test": [16, 33, 44, 47], "w_test": [16, 33, 44, 47], "fitter": [16, 44, 45, 47], "nn": [17, 18, 19, 20, 25, 26, 43, 44], "optimizer_parti": [17, 18, 19, 20, 43], "functool": [17, 18, 19, 20, 43], "partial": [17, 18, 19, 20, 21, 43], "scheduler_parti": [17, 18, 19, 20, 43], "lr_schedul": [17, 18, 19, 20, 43, 44], "lightningmodul": [17, 20, 44], "subclass": [17, 20], "implement": [17, 20], "schedul": [17, 18, 19, 20, 43], "store": [17, 20, 25, 26], "argument": [17, 20], "training_step": [17, 20], "jaxtyp": [17, 18, 19, 20, 25, 26, 43, 44], "tupl": [17, 18, 19, 20, 40, 42], "ellipsi": [17, 20], "callabl": [17, 20], "validation_step": [17, 20], "test_step": [17, 20], "configure_optim": [17, 20], "nest": [17, 20], "baseclasssificationlitmodul": [18, 19, 43], "num_class": [18, 19], "accuraci": [18, 19, 43], "metric": [18, 19, 43], "torchmetr": [18, 19, 43], "x_shape": [18, 19], "cross": [18, 19], "entropi": [18, 19], "baselrschedulerconfig": 21, "_partial_": [21, 28, 30, 31, 33, 34], "requir": 21, "last_epoch": [21, 22], "last": 21, "epoch": 21, "class": [22, 24], "mlpconfig": [25, 26], "multi": [25, 26], "layer": [25, 26], "perceptron": [25, 26], "dropout": [25, 26], "probabl": [25, 26], "initi": [25, 26, 38], "forward": [25, 26, 43], "d_input": [25, 26], "output_s": [25, 26], "flatten": [25, 26], "input": [25, 26], "dimens": [25, 26], "isn": [25, 26], "yet": [25, 26], "where": [25, 26], "multidimension": [25, 26], "vector": [25, 26], "dim": [25, 26], "activation_fn": [25, 26], "p_dropout": [25, 26], "mlp_1": 27, "mlp_2": 27, "test_constructor": 27, "differ": [27, 38], "test_forward": 27, "adamconfig": [28, 30, 33], "baseoptimizerconfig": [28, 31, 33, 34], "stabl": [28, 30, 33, 34], "html": [28, 30, 33, 34], "_target_": [28, 30, 31, 33, 34], "lr": [28, 30, 31, 32, 33, 34], "rate": [28, 30, 31, 33, 34], "weight_decai": [28, 30, 31, 32, 33, 34], "l2": [28, 30, 31, 33, 34], "penalti": [28, 30, 31, 33, 34], "beta": [28, 29, 30, 33], "exponenti": [28, 30, 33], "decai": [28, 30, 33], "1st": [28, 30, 33], "2nd": [28, 30, 33], "moment": [28, 30, 33], "estim": [28, 30, 33, 38], "ep": [28, 29, 30, 33], "small": [28, 30, 33, 38], "constant": [28, 30, 33], "numer": [28, 30, 33], "stabil": [28, 30, 33], "classvar": [28, 33], "9": [28, 29, 33], "999": [28, 29, 33], "1e": [28, 29, 33], "08": [28, 29, 33], "adamwconfig": [30, 33], "child": 31, "001": [31, 32], "01": [31, 32, 38], "sgdconfig": [33, 34], "momentum": [33, 34, 35], "alwai": 38, "correct": 38, "reason": 38, "As": 38, "long": 38, "dataset_s": 38, "ratio": 38, "g": 38, "benefit": 38, "stochast": 38, "gradient": 38, "larger": 38, "yield": 38, "faster": 38, "smaller": 38, "disk": 38, "ram": 38, "bottleneck": 38, "vram": 38, "multipl": 38, "roughli": 38, "amount": 38, "proper": 38, "max_num_data_pass": 38, "500": 38, "maximum": 38, "worker": 38, "initoptimparamscheckpointconnector": 38, "checkpoint_connector": 38, "_checkpointconnector": 38, "newli": 38, "pbt": 38, "restore_optim": 38, "restor": 38, "mnist_classif": [39, 44, 45, 47], "datamodule_test": [39, 42, 44, 47], "float_is_gt0_lt1": [40, 42], "str_is_fit_or_test": [40, 42], "mnistdatamoduleconfig": [40, 42], "val_percentag": [40, 42], "percentag": [40, 42], "fit_dataset_mean": [40, 42], "fit_dataset_std": [40, 42], "1307": [40, 42], "3081": [40, 42], "mnistdatamodul": [40, 41, 42], "train_val_split": [40, 42], "split": [40, 42], "sum": [40, 42], "torchvis": [40, 42], "compos": [40, 42], "hint": [40, 42], "prepare_data": [40, 42], "setup": [40, 42], "tmp_path": 41, "pathlib": 41, "test_setup_fit": 41, "test_setup_test": 41, "mnistclassificationlitmodul": 43, "28": 43, "logit": 43, "abbrevi": 44, "throughout": 44, "misc": 44, "short": 44, "__main__": [44, 45, 47], "deeplearn": [45, 47], "neuroevolut": [45, 47], "auto": 47, "sphinx": 47, "autoapi": 47, "under": 48, "develop": 48, "cluster": 48, "code": 48, "doesn": 48, "break": 48, "vscode": 48, "workflow": 48, "freez": 48, "repositori": 48, "public": 48, "api": 48, "refer": 48}, "objects": {"": [[45, 0, 0, "-", "cneuromax"]], "cneuromax": [[8, 0, 0, "-", "application"], [9, 0, 0, "-", "common"], [44, 0, 0, "-", "deeplearning"], [46, 0, 0, "-", "neuroevolution"]], "cneuromax.common": [[10, 0, 0, "-", "logger"]], "cneuromax.common.logger": [[11, 0, 0, "-", "wandb"]], "cneuromax.common.logger.wandb": [[11, 1, 1, "", "WandbLoggerConfig"]], "cneuromax.common.logger.wandb.WandbLoggerConfig": [[11, 2, 1, "", "name"], [11, 2, 1, "", "project"]], "cneuromax.deeplearning": [[12, 0, 0, "-", "__main__"], [16, 0, 0, "-", "common"], [39, 0, 0, "-", "experiment"]], "cneuromax.deeplearning.__main__": [[12, 1, 1, "", "Config"], [12, 3, 1, "", "cs"], [12, 3, 1, "", "key"], [12, 4, 1, "", "run"]], "cneuromax.deeplearning.__main__.Config": [[12, 2, 1, "", "defaults"]], "cneuromax.deeplearning.common": [[14, 0, 0, "-", "datamodule"], [15, 0, 0, "-", "fitter"], [20, 0, 0, "-", "litmodule"], [23, 0, 0, "-", "lrscheduler"], [25, 0, 0, "-", "nnmodule"], [33, 0, 0, "-", "optimizer"], [37, 0, 0, "-", "utils"]], "cneuromax.deeplearning.common.datamodule": [[14, 1, 1, "", "BaseDataModule"], [14, 1, 1, "", "BaseDataModuleConfig"], [14, 1, 1, "", "BaseDataset"], [13, 0, 0, "-", "base"]], "cneuromax.deeplearning.common.datamodule.BaseDataModule": [[14, 2, 1, "", "config"], [14, 2, 1, "", "dataset"], [14, 5, 1, "", "load_state_dict"], [14, 2, 1, "", "pin_memory"], [14, 5, 1, "", "predict_dataloader"], [14, 5, 1, "", "state_dict"], [14, 5, 1, "", "test_dataloader"], [14, 5, 1, "", "train_dataloader"], [14, 5, 1, "", "val_dataloader"]], "cneuromax.deeplearning.common.datamodule.BaseDataModuleConfig": [[14, 2, 1, "id0", "data_dir"], [14, 2, 1, "id3", "device_type"], [14, 2, 1, "id1", "per_device_batch_size"], [14, 2, 1, "id2", "per_device_num_workers"]], "cneuromax.deeplearning.common.datamodule.BaseDataset": [[14, 2, 1, "id7", "predict"], [14, 2, 1, "id6", "test"], [14, 2, 1, "id4", "train"], [14, 2, 1, "id5", "val"]], "cneuromax.deeplearning.common.datamodule.base": [[13, 1, 1, "", "BaseDataModule"], [13, 1, 1, "", "BaseDataModuleConfig"], [13, 1, 1, "", "BaseDataset"], [13, 3, 1, "", "int_is_gt0"], [13, 3, 1, "", "str_is_per_device_batch_size"]], "cneuromax.deeplearning.common.datamodule.base.BaseDataModule": [[13, 2, 1, "", "config"], [13, 2, 1, "", "dataset"], [13, 5, 1, "", "load_state_dict"], [13, 2, 1, "", "pin_memory"], [13, 5, 1, "", "predict_dataloader"], [13, 5, 1, "", "state_dict"], [13, 5, 1, "", "test_dataloader"], [13, 5, 1, "", "train_dataloader"], [13, 5, 1, "", "val_dataloader"]], "cneuromax.deeplearning.common.datamodule.base.BaseDataModuleConfig": [[13, 2, 1, "id4", "data_dir"], [13, 2, 1, "id7", "device_type"], [13, 2, 1, "id5", "per_device_batch_size"], [13, 2, 1, "id6", "per_device_num_workers"]], "cneuromax.deeplearning.common.datamodule.base.BaseDataset": [[13, 2, 1, "id3", "predict"], [13, 2, 1, "id2", "test"], [13, 2, 1, "id0", "train"], [13, 2, 1, "id1", "val"]], "cneuromax.deeplearning.common.fitter": [[15, 1, 1, "", "Fitter"], [15, 3, 1, "", "TORCH_COMPILE_MINIMUM_CUDA_VERSION"]], "cneuromax.deeplearning.common.fitter.Fitter": [[15, 2, 1, "", "config"], [15, 2, 1, "", "datamodule"], [15, 5, 1, "", "fit"], [15, 5, 1, "", "instantiate_lightning_objects"], [15, 2, 1, "", "litmodule"], [15, 2, 1, "", "logger"], [15, 5, 1, "", "set_batch_size_and_num_workers"], [15, 5, 1, "", "set_checkpoint_path"], [15, 2, 1, "", "trainer"]], "cneuromax.deeplearning.common.litmodule": [[20, 1, 1, "", "BaseLitModule"], [17, 0, 0, "-", "base"], [19, 0, 0, "-", "classification"]], "cneuromax.deeplearning.common.litmodule.BaseLitModule": [[20, 5, 1, "", "configure_optimizers"], [20, 2, 1, "", "nnmodule"], [20, 2, 1, "", "optimizer"], [20, 2, 1, "", "scheduler"], [20, 5, 1, "", "test_step"], [20, 5, 1, "", "training_step"], [20, 5, 1, "", "validation_step"]], "cneuromax.deeplearning.common.litmodule.base": [[17, 1, 1, "", "BaseLitModule"]], "cneuromax.deeplearning.common.litmodule.base.BaseLitModule": [[17, 5, 1, "", "configure_optimizers"], [17, 2, 1, "", "nnmodule"], [17, 2, 1, "", "optimizer"], [17, 2, 1, "", "scheduler"], [17, 5, 1, "", "test_step"], [17, 5, 1, "", "training_step"], [17, 5, 1, "", "validation_step"]], "cneuromax.deeplearning.common.litmodule.classification": [[19, 1, 1, "", "BaseClasssificationLitModule"], [18, 0, 0, "-", "base"]], "cneuromax.deeplearning.common.litmodule.classification.BaseClasssificationLitModule": [[19, 2, 1, "", "accuracy"], [19, 2, 1, "", "nnmodule"], [19, 2, 1, "", "optimizer"], [19, 2, 1, "", "scheduler"], [19, 5, 1, "", "step"]], "cneuromax.deeplearning.common.litmodule.classification.base": [[18, 1, 1, "", "BaseClasssificationLitModule"]], "cneuromax.deeplearning.common.litmodule.classification.base.BaseClasssificationLitModule": [[18, 2, 1, "", "accuracy"], [18, 2, 1, "", "nnmodule"], [18, 2, 1, "", "optimizer"], [18, 2, 1, "", "scheduler"], [18, 5, 1, "", "step"]], "cneuromax.deeplearning.common.lrscheduler": [[21, 0, 0, "-", "base"], [22, 0, 0, "-", "base_test"], [24, 0, 0, "-", "none_test"]], "cneuromax.deeplearning.common.lrscheduler.base": [[21, 1, 1, "", "BaseLRSchedulerConfig"]], "cneuromax.deeplearning.common.lrscheduler.base.BaseLRSchedulerConfig": [[21, 2, 1, "id0", "_partial_"], [21, 2, 1, "id1", "last_epoch"]], "cneuromax.deeplearning.common.lrscheduler.base_test": [[22, 3, 1, "", "LAST_EPOCH"], [22, 4, 1, "", "test"]], "cneuromax.deeplearning.common.lrscheduler.none_test": [[24, 4, 1, "", "test"]], "cneuromax.deeplearning.common.nnmodule": [[25, 1, 1, "", "MLP"], [25, 1, 1, "", "MLPConfig"], [26, 0, 0, "-", "mlp"], [27, 0, 0, "-", "mlp_test"]], "cneuromax.deeplearning.common.nnmodule.MLP": [[25, 2, 1, "", "config"], [25, 5, 1, "", "forward"], [25, 2, 1, "", "model"]], "cneuromax.deeplearning.common.nnmodule.MLPConfig": [[25, 2, 1, "id1", "activation_fn"], [25, 2, 1, "id0", "dims"], [25, 2, 1, "id2", "p_dropout"]], "cneuromax.deeplearning.common.nnmodule.mlp": [[26, 1, 1, "", "MLP"], [26, 1, 1, "", "MLPConfig"]], "cneuromax.deeplearning.common.nnmodule.mlp.MLP": [[26, 2, 1, "", "config"], [26, 5, 1, "", "forward"], [26, 2, 1, "", "model"]], "cneuromax.deeplearning.common.nnmodule.mlp.MLPConfig": [[26, 2, 1, "id1", "activation_fn"], [26, 2, 1, "id0", "dims"], [26, 2, 1, "id2", "p_dropout"]], "cneuromax.deeplearning.common.nnmodule.mlp_test": [[27, 4, 1, "", "mlp_1"], [27, 4, 1, "", "mlp_2"], [27, 4, 1, "", "test_constructor"], [27, 4, 1, "", "test_forward"]], "cneuromax.deeplearning.common.optimizer": [[33, 1, 1, "", "AdamConfig"], [33, 1, 1, "", "AdamWConfig"], [33, 1, 1, "", "SGDConfig"], [28, 0, 0, "-", "adam"], [29, 0, 0, "-", "adam_test"], [30, 0, 0, "-", "adamw"], [31, 0, 0, "-", "base"], [32, 0, 0, "-", "base_test"], [34, 0, 0, "-", "sgd"], [35, 0, 0, "-", "sgd_test"], [36, 0, 0, "-", "w_test"]], "cneuromax.deeplearning.common.optimizer.AdamConfig": [[33, 2, 1, "", "_partial_"], [33, 2, 1, "id0", "_target_"], [33, 2, 1, "id1", "betas"], [33, 2, 1, "id2", "eps"], [33, 2, 1, "", "lr"], [33, 2, 1, "", "weight_decay"]], "cneuromax.deeplearning.common.optimizer.AdamWConfig": [[33, 2, 1, "", "_partial_"], [33, 2, 1, "id3", "_target_"], [33, 2, 1, "", "betas"], [33, 2, 1, "", "eps"], [33, 2, 1, "", "lr"], [33, 2, 1, "", "weight_decay"]], "cneuromax.deeplearning.common.optimizer.SGDConfig": [[33, 2, 1, "", "_partial_"], [33, 2, 1, "id4", "_target_"], [33, 2, 1, "", "lr"], [33, 2, 1, "id5", "momentum"], [33, 2, 1, "", "weight_decay"]], "cneuromax.deeplearning.common.optimizer.adam": [[28, 1, 1, "", "AdamConfig"]], "cneuromax.deeplearning.common.optimizer.adam.AdamConfig": [[28, 2, 1, "", "_partial_"], [28, 2, 1, "id0", "_target_"], [28, 2, 1, "id1", "betas"], [28, 2, 1, "id2", "eps"], [28, 2, 1, "", "lr"], [28, 2, 1, "", "weight_decay"]], "cneuromax.deeplearning.common.optimizer.adam_test": [[29, 3, 1, "", "BETAS"], [29, 3, 1, "", "EPS"], [29, 4, 1, "", "test"]], "cneuromax.deeplearning.common.optimizer.adamw": [[30, 1, 1, "", "AdamWConfig"]], "cneuromax.deeplearning.common.optimizer.adamw.AdamWConfig": [[30, 2, 1, "", "_partial_"], [30, 2, 1, "id0", "_target_"], [30, 2, 1, "", "betas"], [30, 2, 1, "", "eps"], [30, 2, 1, "", "lr"], [30, 2, 1, "", "weight_decay"]], "cneuromax.deeplearning.common.optimizer.base": [[31, 1, 1, "", "BaseOptimizerConfig"]], "cneuromax.deeplearning.common.optimizer.base.BaseOptimizerConfig": [[31, 2, 1, "id1", "_partial_"], [31, 2, 1, "id0", "_target_"], [31, 2, 1, "id2", "lr"], [31, 2, 1, "id3", "weight_decay"]], "cneuromax.deeplearning.common.optimizer.base_test": [[32, 3, 1, "", "LR"], [32, 3, 1, "", "WEIGHT_DECAY"], [32, 4, 1, "", "test"]], "cneuromax.deeplearning.common.optimizer.sgd": [[34, 1, 1, "", "SGDConfig"]], "cneuromax.deeplearning.common.optimizer.sgd.SGDConfig": [[34, 2, 1, "", "_partial_"], [34, 2, 1, "id0", "_target_"], [34, 2, 1, "", "lr"], [34, 2, 1, "id1", "momentum"], [34, 2, 1, "", "weight_decay"]], "cneuromax.deeplearning.common.optimizer.sgd_test": [[35, 3, 1, "", "MOMENTUM"], [35, 4, 1, "", "test"]], "cneuromax.deeplearning.common.optimizer.w_test": [[36, 4, 1, "", "test"]], "cneuromax.deeplearning.common.utils": [[38, 0, 0, "-", "lightning"]], "cneuromax.deeplearning.common.utils.lightning": [[38, 1, 1, "", "InitOptimParamsCheckpointConnector"], [38, 4, 1, "", "find_good_batch_size"], [38, 4, 1, "", "find_good_num_workers"]], "cneuromax.deeplearning.common.utils.lightning.InitOptimParamsCheckpointConnector": [[38, 5, 1, "", "restore_optimizers"], [38, 2, 1, "", "trainer"]], "cneuromax.deeplearning.experiment": [[42, 0, 0, "-", "mnist_classification"]], "cneuromax.deeplearning.experiment.mnist_classification": [[42, 1, 1, "", "MNISTDataModule"], [42, 1, 1, "", "MNISTDataModuleConfig"], [40, 0, 0, "-", "datamodule"], [41, 0, 0, "-", "datamodule_test"], [43, 0, 0, "-", "litmodule"]], "cneuromax.deeplearning.experiment.mnist_classification.MNISTDataModule": [[42, 5, 1, "", "prepare_data"], [42, 5, 1, "", "setup"], [42, 2, 1, "", "train_val_split"], [42, 2, 1, "", "transform"]], "cneuromax.deeplearning.experiment.mnist_classification.MNISTDataModuleConfig": [[42, 2, 1, "id1", "fit_dataset_mean"], [42, 2, 1, "id2", "fit_dataset_std"], [42, 2, 1, "id0", "val_percentage"]], "cneuromax.deeplearning.experiment.mnist_classification.datamodule": [[40, 1, 1, "", "MNISTDataModule"], [40, 1, 1, "", "MNISTDataModuleConfig"], [40, 3, 1, "", "float_is_gt0_lt1"], [40, 3, 1, "", "str_is_fit_or_test"]], "cneuromax.deeplearning.experiment.mnist_classification.datamodule.MNISTDataModule": [[40, 5, 1, "", "prepare_data"], [40, 5, 1, "", "setup"], [40, 2, 1, "", "train_val_split"], [40, 2, 1, "", "transform"]], "cneuromax.deeplearning.experiment.mnist_classification.datamodule.MNISTDataModuleConfig": [[40, 2, 1, "id1", "fit_dataset_mean"], [40, 2, 1, "id2", "fit_dataset_std"], [40, 2, 1, "id0", "val_percentage"]], "cneuromax.deeplearning.experiment.mnist_classification.datamodule_test": [[41, 4, 1, "", "datamodule"], [41, 4, 1, "", "test_setup_fit"], [41, 4, 1, "", "test_setup_test"]], "cneuromax.deeplearning.experiment.mnist_classification.litmodule": [[43, 1, 1, "", "MNISTClassificationLitModule"]], "cneuromax.deeplearning.experiment.mnist_classification.litmodule.MNISTClassificationLitModule": [[43, 2, 1, "", "accuracy"], [43, 5, 1, "", "forward"], [43, 2, 1, "", "nnmodule"], [43, 2, 1, "", "optimizer"], [43, 2, 1, "", "scheduler"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:data", "4": "py:function", "5": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "data", "Python data"], "4": ["py", "function", "Python function"], "5": ["py", "method", "Python method"]}, "titleterms": {"contribut": 0, "develop": 0, "local": 0, "make": 0, "sure": 0, "code": 0, "doesn": 0, "t": 0, "break": 0, "test": 0, "set": 0, "up": 0, "vscode": 0, "git": 0, "github": 0, "workflow": 0, "freez": 0, "repositori": [0, 4, 5], "public": 0, "execut": 1, "On": [1, 2, 3, 4, 6, 7], "linux": [1, 2, 4, 6], "machin": [1, 2, 4, 5, 6], "run": [1, 2, 3], "python": [1, 2, 3], "script": [1, 2, 3], "notebook": [1, 2], "slurm": [1, 3, 4, 7], "cluster": [1, 3, 4, 7], "jupyt": [1, 3], "lab": [1, 3], "instal": [4, 6, 7], "common": [4, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "all": [4, 5], "1": [4, 5, 6, 7], "setup": [4, 5], "nvidia": [4, 6], "driver": [4, 6], "2": [4, 6, 7], "podman": [4, 6, 7], "3": [4, 6], "contain": [4, 6], "toolkit": [4, 6], "4": [4, 6], "pull": [4, 6], "imag": [4, 6, 7], "experi": [4, 7, 39, 40, 41, 42, 43], "manag": [4, 7], "packag": [4, 7, 14, 19, 20, 25, 33, 42], "prepar": [4, 7], "us": [4, 7], "cneuromax": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48], "applic": 8, "subpackag": [9, 16, 20, 39, 44, 45], "logger": [10, 11], "submodul": [10, 14, 16, 19, 20, 23, 25, 33, 37, 42, 44], "wandb": 11, "modul": [11, 12, 13, 15, 17, 18, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 40, 41, 43], "content": [11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 48], "class": [11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 25, 26, 28, 30, 31, 33, 34, 38, 40, 42, 43], "deeplearn": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44], "__main__": 12, "function": [12, 22, 24, 27, 29, 32, 35, 36, 38, 41], "attribut": [12, 13, 15, 22, 29, 32, 35, 40], "datamodul": [13, 14, 40], "base": [13, 17, 18, 21, 31], "fitter": 15, "litmodul": [17, 18, 19, 20, 43], "classif": [18, 19], "lrschedul": [21, 22, 23, 24], "base_test": [22, 32], "none_test": 24, "nnmodul": [25, 26, 27], "mlp": 26, "mlp_test": 27, "optim": [28, 29, 30, 31, 32, 33, 34, 35, 36], "adam": 28, "adam_test": 29, "adamw": 30, "sgd": 34, "sgd_test": 35, "w_test": 36, "util": [37, 38], "lightn": 38, "mnist_classif": [40, 41, 42, 43], "datamodule_test": 41, "neuroevolut": 46, "api": 47, "refer": 47, "welcom": 48, "document": 48}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Contribution": [[0, "contribution"]], "Developping locally": [[0, "developping-locally"]], "Making sure the code doesn\u2019t break": [[0, "making-sure-the-code-doesn-t-break"]], "Testing locally": [[0, "testing-locally"]], "Setting up VSCode": [[0, "setting-up-vscode"]], "Git/GitHub workflow for contributing": [[0, "git-github-workflow-for-contributing"]], "Freezing the repositories for publication": [[0, "freezing-the-repositories-for-publication"]], "Execution": [[1, "execution"]], "On a Linux machine": [[1, "on-a-linux-machine"], [2, "on-a-linux-machine"], [4, "on-a-linux-machine"], [6, "on-a-linux-machine"]], "Run a python script": [[1, "run-a-python-script"], [1, "id1"], [2, "run-a-python-script"], [3, "run-a-python-script"]], "Run a notebook": [[1, "run-a-notebook"], [2, "run-a-notebook"]], "On a Slurm cluster": [[1, "on-a-slurm-cluster"], [3, "on-a-slurm-cluster"], [4, "on-a-slurm-cluster"], [7, "on-a-slurm-cluster"]], "Run Jupyter-lab": [[1, "run-jupyter-lab"], [3, "run-jupyter-lab"]], "Installation": [[4, "installation"]], "Common to all machines": [[4, "common-to-all-machines"], [5, "common-to-all-machines"]], "1. Setup the repository": [[4, "setup-the-repository"], [5, "setup-the-repository"]], "1. Install the NVIDIA driver": [[4, "install-the-nvidia-driver"], [6, "install-the-nvidia-driver"]], "2. Install Podman": [[4, "install-podman"], [6, "install-podman"]], "3. Install the NVIDIA Container Toolkit": [[4, "install-the-nvidia-container-toolkit"], [6, "install-the-nvidia-container-toolkit"]], "4. Pull the Podman image": [[4, "pull-the-podman-image"], [6, "pull-the-podman-image"]], "1. Install the experiment manager packages": [[4, "install-the-experiment-manager-packages"], [7, "install-the-experiment-manager-packages"]], "2. Prepare the Podman image for use on the cluster": [[4, "prepare-the-podman-image-for-use-on-the-cluster"], [7, "prepare-the-podman-image-for-use-on-the-cluster"]], "cneuromax.application": [[8, "module-cneuromax.application"]], "cneuromax.common": [[9, "module-cneuromax.common"]], "Subpackages": [[9, "subpackages"], [16, "subpackages"], [20, "subpackages"], [39, "subpackages"], [44, "subpackages"], [45, "subpackages"]], "cneuromax.common.logger": [[10, "module-cneuromax.common.logger"]], "Submodules": [[10, "submodules"], [14, "submodules"], [16, "submodules"], [19, "submodules"], [20, "submodules"], [23, "submodules"], [25, "submodules"], [33, "submodules"], [37, "submodules"], [42, "submodules"], [44, "submodules"]], "cneuromax.common.logger.wandb": [[11, "module-cneuromax.common.logger.wandb"]], "Module Contents": [[11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [15, "module-contents"], [17, "module-contents"], [18, "module-contents"], [21, "module-contents"], [22, "module-contents"], [24, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"], [31, "module-contents"], [32, "module-contents"], [34, "module-contents"], [35, "module-contents"], [36, "module-contents"], [38, "module-contents"], [40, "module-contents"], [41, "module-contents"], [43, "module-contents"]], "Classes": [[11, "classes"], [12, "classes"], [13, "classes"], [14, "classes"], [15, "classes"], [17, "classes"], [18, "classes"], [19, "classes"], [20, "classes"], [21, "classes"], [25, "classes"], [26, "classes"], [28, "classes"], [30, "classes"], [31, "classes"], [33, "classes"], [34, "classes"], [38, "classes"], [40, "classes"], [42, "classes"], [43, "classes"]], "cneuromax.deeplearning.__main__": [[12, "module-cneuromax.deeplearning.__main__"]], "Functions": [[12, "functions"], [22, "functions"], [24, "functions"], [27, "functions"], [29, "functions"], [32, "functions"], [35, "functions"], [36, "functions"], [38, "functions"], [41, "functions"]], "Attributes": [[12, "attributes"], [13, "attributes"], [15, "attributes"], [22, "attributes"], [29, "attributes"], [32, "attributes"], [35, "attributes"], [40, "attributes"]], "cneuromax.deeplearning.common.datamodule.base": [[13, "module-cneuromax.deeplearning.common.datamodule.base"]], "cneuromax.deeplearning.common.datamodule": [[14, "module-cneuromax.deeplearning.common.datamodule"]], "Package Contents": [[14, "package-contents"], [19, "package-contents"], [20, "package-contents"], [25, "package-contents"], [33, "package-contents"], [42, "package-contents"]], "cneuromax.deeplearning.common.fitter": [[15, "module-cneuromax.deeplearning.common.fitter"]], "cneuromax.deeplearning.common": [[16, "module-cneuromax.deeplearning.common"]], "cneuromax.deeplearning.common.litmodule.base": [[17, "module-cneuromax.deeplearning.common.litmodule.base"]], "cneuromax.deeplearning.common.litmodule.classification.base": [[18, "module-cneuromax.deeplearning.common.litmodule.classification.base"]], "cneuromax.deeplearning.common.litmodule.classification": [[19, "module-cneuromax.deeplearning.common.litmodule.classification"]], "cneuromax.deeplearning.common.litmodule": [[20, "module-cneuromax.deeplearning.common.litmodule"]], "cneuromax.deeplearning.common.lrscheduler.base": [[21, "module-cneuromax.deeplearning.common.lrscheduler.base"]], "cneuromax.deeplearning.common.lrscheduler.base_test": [[22, "module-cneuromax.deeplearning.common.lrscheduler.base_test"]], "cneuromax.deeplearning.common.lrscheduler": [[23, "module-cneuromax.deeplearning.common.lrscheduler"]], "cneuromax.deeplearning.common.lrscheduler.none_test": [[24, "module-cneuromax.deeplearning.common.lrscheduler.none_test"]], "cneuromax.deeplearning.common.nnmodule": [[25, "module-cneuromax.deeplearning.common.nnmodule"]], "cneuromax.deeplearning.common.nnmodule.mlp": [[26, "module-cneuromax.deeplearning.common.nnmodule.mlp"]], "cneuromax.deeplearning.common.nnmodule.mlp_test": [[27, "module-cneuromax.deeplearning.common.nnmodule.mlp_test"]], "cneuromax.deeplearning.common.optimizer.adam": [[28, "module-cneuromax.deeplearning.common.optimizer.adam"]], "cneuromax.deeplearning.common.optimizer.adam_test": [[29, "module-cneuromax.deeplearning.common.optimizer.adam_test"]], "cneuromax.deeplearning.common.optimizer.adamw": [[30, "module-cneuromax.deeplearning.common.optimizer.adamw"]], "cneuromax.deeplearning.common.optimizer.base": [[31, "module-cneuromax.deeplearning.common.optimizer.base"]], "cneuromax.deeplearning.common.optimizer.base_test": [[32, "module-cneuromax.deeplearning.common.optimizer.base_test"]], "cneuromax.deeplearning.common.optimizer": [[33, "module-cneuromax.deeplearning.common.optimizer"]], "cneuromax.deeplearning.common.optimizer.sgd": [[34, "module-cneuromax.deeplearning.common.optimizer.sgd"]], "cneuromax.deeplearning.common.optimizer.sgd_test": [[35, "module-cneuromax.deeplearning.common.optimizer.sgd_test"]], "cneuromax.deeplearning.common.optimizer.w_test": [[36, "module-cneuromax.deeplearning.common.optimizer.w_test"]], "cneuromax.deeplearning.common.utils": [[37, "module-cneuromax.deeplearning.common.utils"]], "cneuromax.deeplearning.common.utils.lightning": [[38, "module-cneuromax.deeplearning.common.utils.lightning"]], "cneuromax.deeplearning.experiment": [[39, "module-cneuromax.deeplearning.experiment"]], "cneuromax.deeplearning.experiment.mnist_classification.datamodule": [[40, "module-cneuromax.deeplearning.experiment.mnist_classification.datamodule"]], "cneuromax.deeplearning.experiment.mnist_classification.datamodule_test": [[41, "module-cneuromax.deeplearning.experiment.mnist_classification.datamodule_test"]], "cneuromax.deeplearning.experiment.mnist_classification": [[42, "module-cneuromax.deeplearning.experiment.mnist_classification"]], "cneuromax.deeplearning.experiment.mnist_classification.litmodule": [[43, "module-cneuromax.deeplearning.experiment.mnist_classification.litmodule"]], "cneuromax.deeplearning": [[44, "module-cneuromax.deeplearning"]], "cneuromax": [[45, "module-cneuromax"]], "cneuromax.neuroevolution": [[46, "module-cneuromax.neuroevolution"]], "API Reference": [[47, "api-reference"]], "Welcome to the cneuromax documentation!": [[48, "welcome-to-the-cneuromax-documentation"]], "Contents": [[48, "contents"]]}, "indexentries": {"cneuromax.application": [[8, "module-cneuromax.application"]], "module": [[8, "module-cneuromax.application"], [9, "module-cneuromax.common"], [10, "module-cneuromax.common.logger"], [11, "module-cneuromax.common.logger.wandb"], [12, "module-cneuromax.deeplearning.__main__"], [13, "module-cneuromax.deeplearning.common.datamodule.base"], [14, "module-cneuromax.deeplearning.common.datamodule"], [15, "module-cneuromax.deeplearning.common.fitter"], [16, "module-cneuromax.deeplearning.common"], [17, "module-cneuromax.deeplearning.common.litmodule.base"], [18, "module-cneuromax.deeplearning.common.litmodule.classification.base"], [19, "module-cneuromax.deeplearning.common.litmodule.classification"], [20, "module-cneuromax.deeplearning.common.litmodule"], [21, "module-cneuromax.deeplearning.common.lrscheduler.base"], [22, "module-cneuromax.deeplearning.common.lrscheduler.base_test"], [23, "module-cneuromax.deeplearning.common.lrscheduler"], [24, "module-cneuromax.deeplearning.common.lrscheduler.none_test"], [25, "module-cneuromax.deeplearning.common.nnmodule"], [26, "module-cneuromax.deeplearning.common.nnmodule.mlp"], [27, "module-cneuromax.deeplearning.common.nnmodule.mlp_test"], [28, "module-cneuromax.deeplearning.common.optimizer.adam"], [29, "module-cneuromax.deeplearning.common.optimizer.adam_test"], [30, "module-cneuromax.deeplearning.common.optimizer.adamw"], [31, "module-cneuromax.deeplearning.common.optimizer.base"], [32, "module-cneuromax.deeplearning.common.optimizer.base_test"], [33, "module-cneuromax.deeplearning.common.optimizer"], [34, "module-cneuromax.deeplearning.common.optimizer.sgd"], [35, "module-cneuromax.deeplearning.common.optimizer.sgd_test"], [36, "module-cneuromax.deeplearning.common.optimizer.w_test"], [37, "module-cneuromax.deeplearning.common.utils"], [38, "module-cneuromax.deeplearning.common.utils.lightning"], [39, "module-cneuromax.deeplearning.experiment"], [40, "module-cneuromax.deeplearning.experiment.mnist_classification.datamodule"], [41, "module-cneuromax.deeplearning.experiment.mnist_classification.datamodule_test"], [42, "module-cneuromax.deeplearning.experiment.mnist_classification"], [43, "module-cneuromax.deeplearning.experiment.mnist_classification.litmodule"], [44, "module-cneuromax.deeplearning"], [45, "module-cneuromax"], [46, "module-cneuromax.neuroevolution"]], "cneuromax.common": [[9, "module-cneuromax.common"]], "cneuromax.common.logger": [[10, "module-cneuromax.common.logger"]], "wandbloggerconfig (class in cneuromax.common.logger.wandb)": [[11, "cneuromax.common.logger.wandb.WandbLoggerConfig"]], "cneuromax.common.logger.wandb": [[11, "module-cneuromax.common.logger.wandb"]], "name (cneuromax.common.logger.wandb.wandbloggerconfig attribute)": [[11, "cneuromax.common.logger.wandb.WandbLoggerConfig.name"]], "project (cneuromax.common.logger.wandb.wandbloggerconfig attribute)": [[11, "cneuromax.common.logger.wandb.WandbLoggerConfig.project"]], "config (class in cneuromax.deeplearning.__main__)": [[12, "cneuromax.deeplearning.__main__.Config"]], "cneuromax.deeplearning.__main__": [[12, "module-cneuromax.deeplearning.__main__"]], "cs (in module cneuromax.deeplearning.__main__)": [[12, "cneuromax.deeplearning.__main__.cs"]], "defaults (cneuromax.deeplearning.__main__.config attribute)": [[12, "cneuromax.deeplearning.__main__.Config.defaults"]], "key (in module cneuromax.deeplearning.__main__)": [[12, "cneuromax.deeplearning.__main__.key"]], "run() (in module cneuromax.deeplearning.__main__)": [[12, "cneuromax.deeplearning.__main__.run"]], "basedatamodule (class in cneuromax.deeplearning.common.datamodule.base)": [[13, "cneuromax.deeplearning.common.datamodule.base.BaseDataModule"]], "basedatamoduleconfig (class in cneuromax.deeplearning.common.datamodule.base)": [[13, "cneuromax.deeplearning.common.datamodule.base.BaseDataModuleConfig"]], "basedataset (class in cneuromax.deeplearning.common.datamodule.base)": [[13, "cneuromax.deeplearning.common.datamodule.base.BaseDataset"]], "cneuromax.deeplearning.common.datamodule.base": [[13, "module-cneuromax.deeplearning.common.datamodule.base"]], "config (cneuromax.deeplearning.common.datamodule.base.basedatamodule attribute)": [[13, "cneuromax.deeplearning.common.datamodule.base.BaseDataModule.config"]], "data_dir (cneuromax.deeplearning.common.datamodule.base.basedatamoduleconfig attribute)": [[13, "cneuromax.deeplearning.common.datamodule.base.BaseDataModuleConfig.data_dir"], [13, "id4"]], "dataset (cneuromax.deeplearning.common.datamodule.base.basedatamodule attribute)": [[13, "cneuromax.deeplearning.common.datamodule.base.BaseDataModule.dataset"]], "device_type (cneuromax.deeplearning.common.datamodule.base.basedatamoduleconfig attribute)": [[13, "cneuromax.deeplearning.common.datamodule.base.BaseDataModuleConfig.device_type"], [13, "id7"]], "int_is_gt0 (in module cneuromax.deeplearning.common.datamodule.base)": [[13, "cneuromax.deeplearning.common.datamodule.base.int_is_gt0"]], "load_state_dict() (cneuromax.deeplearning.common.datamodule.base.basedatamodule method)": [[13, "cneuromax.deeplearning.common.datamodule.base.BaseDataModule.load_state_dict"]], "per_device_batch_size (cneuromax.deeplearning.common.datamodule.base.basedatamoduleconfig attribute)": [[13, "cneuromax.deeplearning.common.datamodule.base.BaseDataModuleConfig.per_device_batch_size"], [13, "id5"]], "per_device_num_workers (cneuromax.deeplearning.common.datamodule.base.basedatamoduleconfig attribute)": [[13, "cneuromax.deeplearning.common.datamodule.base.BaseDataModuleConfig.per_device_num_workers"], [13, "id6"]], "pin_memory (cneuromax.deeplearning.common.datamodule.base.basedatamodule attribute)": [[13, "cneuromax.deeplearning.common.datamodule.base.BaseDataModule.pin_memory"]], "predict (cneuromax.deeplearning.common.datamodule.base.basedataset attribute)": [[13, "cneuromax.deeplearning.common.datamodule.base.BaseDataset.predict"], [13, "id3"]], "predict_dataloader() (cneuromax.deeplearning.common.datamodule.base.basedatamodule method)": [[13, "cneuromax.deeplearning.common.datamodule.base.BaseDataModule.predict_dataloader"]], "state_dict() (cneuromax.deeplearning.common.datamodule.base.basedatamodule method)": [[13, "cneuromax.deeplearning.common.datamodule.base.BaseDataModule.state_dict"]], "str_is_per_device_batch_size (in module cneuromax.deeplearning.common.datamodule.base)": [[13, "cneuromax.deeplearning.common.datamodule.base.str_is_per_device_batch_size"]], "test (cneuromax.deeplearning.common.datamodule.base.basedataset attribute)": [[13, "cneuromax.deeplearning.common.datamodule.base.BaseDataset.test"], [13, "id2"]], "test_dataloader() (cneuromax.deeplearning.common.datamodule.base.basedatamodule method)": [[13, "cneuromax.deeplearning.common.datamodule.base.BaseDataModule.test_dataloader"]], "train (cneuromax.deeplearning.common.datamodule.base.basedataset attribute)": [[13, "cneuromax.deeplearning.common.datamodule.base.BaseDataset.train"], [13, "id0"]], "train_dataloader() (cneuromax.deeplearning.common.datamodule.base.basedatamodule method)": [[13, "cneuromax.deeplearning.common.datamodule.base.BaseDataModule.train_dataloader"]], "val (cneuromax.deeplearning.common.datamodule.base.basedataset attribute)": [[13, "cneuromax.deeplearning.common.datamodule.base.BaseDataset.val"], [13, "id1"]], "val_dataloader() (cneuromax.deeplearning.common.datamodule.base.basedatamodule method)": [[13, "cneuromax.deeplearning.common.datamodule.base.BaseDataModule.val_dataloader"]], "basedatamodule (class in cneuromax.deeplearning.common.datamodule)": [[14, "cneuromax.deeplearning.common.datamodule.BaseDataModule"]], "basedatamoduleconfig (class in cneuromax.deeplearning.common.datamodule)": [[14, "cneuromax.deeplearning.common.datamodule.BaseDataModuleConfig"]], "basedataset (class in cneuromax.deeplearning.common.datamodule)": [[14, "cneuromax.deeplearning.common.datamodule.BaseDataset"]], "cneuromax.deeplearning.common.datamodule": [[14, "module-cneuromax.deeplearning.common.datamodule"]], "config (cneuromax.deeplearning.common.datamodule.basedatamodule attribute)": [[14, "cneuromax.deeplearning.common.datamodule.BaseDataModule.config"]], "data_dir (cneuromax.deeplearning.common.datamodule.basedatamoduleconfig attribute)": [[14, "cneuromax.deeplearning.common.datamodule.BaseDataModuleConfig.data_dir"], [14, "id0"]], "dataset (cneuromax.deeplearning.common.datamodule.basedatamodule attribute)": [[14, "cneuromax.deeplearning.common.datamodule.BaseDataModule.dataset"]], "device_type (cneuromax.deeplearning.common.datamodule.basedatamoduleconfig attribute)": [[14, "cneuromax.deeplearning.common.datamodule.BaseDataModuleConfig.device_type"], [14, "id3"]], "load_state_dict() (cneuromax.deeplearning.common.datamodule.basedatamodule method)": [[14, "cneuromax.deeplearning.common.datamodule.BaseDataModule.load_state_dict"]], "per_device_batch_size (cneuromax.deeplearning.common.datamodule.basedatamoduleconfig attribute)": [[14, "cneuromax.deeplearning.common.datamodule.BaseDataModuleConfig.per_device_batch_size"], [14, "id1"]], "per_device_num_workers (cneuromax.deeplearning.common.datamodule.basedatamoduleconfig attribute)": [[14, "cneuromax.deeplearning.common.datamodule.BaseDataModuleConfig.per_device_num_workers"], [14, "id2"]], "pin_memory (cneuromax.deeplearning.common.datamodule.basedatamodule attribute)": [[14, "cneuromax.deeplearning.common.datamodule.BaseDataModule.pin_memory"]], "predict (cneuromax.deeplearning.common.datamodule.basedataset attribute)": [[14, "cneuromax.deeplearning.common.datamodule.BaseDataset.predict"], [14, "id7"]], "predict_dataloader() (cneuromax.deeplearning.common.datamodule.basedatamodule method)": [[14, "cneuromax.deeplearning.common.datamodule.BaseDataModule.predict_dataloader"]], "state_dict() (cneuromax.deeplearning.common.datamodule.basedatamodule method)": [[14, "cneuromax.deeplearning.common.datamodule.BaseDataModule.state_dict"]], "test (cneuromax.deeplearning.common.datamodule.basedataset attribute)": [[14, "cneuromax.deeplearning.common.datamodule.BaseDataset.test"], [14, "id6"]], "test_dataloader() (cneuromax.deeplearning.common.datamodule.basedatamodule method)": [[14, "cneuromax.deeplearning.common.datamodule.BaseDataModule.test_dataloader"]], "train (cneuromax.deeplearning.common.datamodule.basedataset attribute)": [[14, "cneuromax.deeplearning.common.datamodule.BaseDataset.train"], [14, "id4"]], "train_dataloader() (cneuromax.deeplearning.common.datamodule.basedatamodule method)": [[14, "cneuromax.deeplearning.common.datamodule.BaseDataModule.train_dataloader"]], "val (cneuromax.deeplearning.common.datamodule.basedataset attribute)": [[14, "cneuromax.deeplearning.common.datamodule.BaseDataset.val"], [14, "id5"]], "val_dataloader() (cneuromax.deeplearning.common.datamodule.basedatamodule method)": [[14, "cneuromax.deeplearning.common.datamodule.BaseDataModule.val_dataloader"]], "fitter (class in cneuromax.deeplearning.common.fitter)": [[15, "cneuromax.deeplearning.common.fitter.Fitter"]], "torch_compile_minimum_cuda_version (in module cneuromax.deeplearning.common.fitter)": [[15, "cneuromax.deeplearning.common.fitter.TORCH_COMPILE_MINIMUM_CUDA_VERSION"]], "cneuromax.deeplearning.common.fitter": [[15, "module-cneuromax.deeplearning.common.fitter"]], "config (cneuromax.deeplearning.common.fitter.fitter attribute)": [[15, "cneuromax.deeplearning.common.fitter.Fitter.config"]], "datamodule (cneuromax.deeplearning.common.fitter.fitter attribute)": [[15, "cneuromax.deeplearning.common.fitter.Fitter.datamodule"]], "fit() (cneuromax.deeplearning.common.fitter.fitter method)": [[15, "cneuromax.deeplearning.common.fitter.Fitter.fit"]], "instantiate_lightning_objects() (cneuromax.deeplearning.common.fitter.fitter method)": [[15, "cneuromax.deeplearning.common.fitter.Fitter.instantiate_lightning_objects"]], "litmodule (cneuromax.deeplearning.common.fitter.fitter attribute)": [[15, "cneuromax.deeplearning.common.fitter.Fitter.litmodule"]], "logger (cneuromax.deeplearning.common.fitter.fitter attribute)": [[15, "cneuromax.deeplearning.common.fitter.Fitter.logger"]], "set_batch_size_and_num_workers() (cneuromax.deeplearning.common.fitter.fitter method)": [[15, "cneuromax.deeplearning.common.fitter.Fitter.set_batch_size_and_num_workers"]], "set_checkpoint_path() (cneuromax.deeplearning.common.fitter.fitter method)": [[15, "cneuromax.deeplearning.common.fitter.Fitter.set_checkpoint_path"]], "trainer (cneuromax.deeplearning.common.fitter.fitter attribute)": [[15, "cneuromax.deeplearning.common.fitter.Fitter.trainer"]], "cneuromax.deeplearning.common": [[16, "module-cneuromax.deeplearning.common"]], "baselitmodule (class in cneuromax.deeplearning.common.litmodule.base)": [[17, "cneuromax.deeplearning.common.litmodule.base.BaseLitModule"]], "cneuromax.deeplearning.common.litmodule.base": [[17, "module-cneuromax.deeplearning.common.litmodule.base"]], "configure_optimizers() (cneuromax.deeplearning.common.litmodule.base.baselitmodule method)": [[17, "cneuromax.deeplearning.common.litmodule.base.BaseLitModule.configure_optimizers"]], "nnmodule (cneuromax.deeplearning.common.litmodule.base.baselitmodule attribute)": [[17, "cneuromax.deeplearning.common.litmodule.base.BaseLitModule.nnmodule"]], "optimizer (cneuromax.deeplearning.common.litmodule.base.baselitmodule attribute)": [[17, "cneuromax.deeplearning.common.litmodule.base.BaseLitModule.optimizer"]], "scheduler (cneuromax.deeplearning.common.litmodule.base.baselitmodule attribute)": [[17, "cneuromax.deeplearning.common.litmodule.base.BaseLitModule.scheduler"]], "test_step() (cneuromax.deeplearning.common.litmodule.base.baselitmodule method)": [[17, "cneuromax.deeplearning.common.litmodule.base.BaseLitModule.test_step"]], "training_step() (cneuromax.deeplearning.common.litmodule.base.baselitmodule method)": [[17, "cneuromax.deeplearning.common.litmodule.base.BaseLitModule.training_step"]], "validation_step() (cneuromax.deeplearning.common.litmodule.base.baselitmodule method)": [[17, "cneuromax.deeplearning.common.litmodule.base.BaseLitModule.validation_step"]], "baseclasssificationlitmodule (class in cneuromax.deeplearning.common.litmodule.classification.base)": [[18, "cneuromax.deeplearning.common.litmodule.classification.base.BaseClasssificationLitModule"]], "accuracy (cneuromax.deeplearning.common.litmodule.classification.base.baseclasssificationlitmodule attribute)": [[18, "cneuromax.deeplearning.common.litmodule.classification.base.BaseClasssificationLitModule.accuracy"]], "cneuromax.deeplearning.common.litmodule.classification.base": [[18, "module-cneuromax.deeplearning.common.litmodule.classification.base"]], "nnmodule (cneuromax.deeplearning.common.litmodule.classification.base.baseclasssificationlitmodule attribute)": [[18, "cneuromax.deeplearning.common.litmodule.classification.base.BaseClasssificationLitModule.nnmodule"]], "optimizer (cneuromax.deeplearning.common.litmodule.classification.base.baseclasssificationlitmodule attribute)": [[18, "cneuromax.deeplearning.common.litmodule.classification.base.BaseClasssificationLitModule.optimizer"]], "scheduler (cneuromax.deeplearning.common.litmodule.classification.base.baseclasssificationlitmodule attribute)": [[18, "cneuromax.deeplearning.common.litmodule.classification.base.BaseClasssificationLitModule.scheduler"]], "step() (cneuromax.deeplearning.common.litmodule.classification.base.baseclasssificationlitmodule method)": [[18, "cneuromax.deeplearning.common.litmodule.classification.base.BaseClasssificationLitModule.step"]], "baseclasssificationlitmodule (class in cneuromax.deeplearning.common.litmodule.classification)": [[19, "cneuromax.deeplearning.common.litmodule.classification.BaseClasssificationLitModule"]], "accuracy (cneuromax.deeplearning.common.litmodule.classification.baseclasssificationlitmodule attribute)": [[19, "cneuromax.deeplearning.common.litmodule.classification.BaseClasssificationLitModule.accuracy"]], "cneuromax.deeplearning.common.litmodule.classification": [[19, "module-cneuromax.deeplearning.common.litmodule.classification"]], "nnmodule (cneuromax.deeplearning.common.litmodule.classification.baseclasssificationlitmodule attribute)": [[19, "cneuromax.deeplearning.common.litmodule.classification.BaseClasssificationLitModule.nnmodule"]], "optimizer (cneuromax.deeplearning.common.litmodule.classification.baseclasssificationlitmodule attribute)": [[19, "cneuromax.deeplearning.common.litmodule.classification.BaseClasssificationLitModule.optimizer"]], "scheduler (cneuromax.deeplearning.common.litmodule.classification.baseclasssificationlitmodule attribute)": [[19, "cneuromax.deeplearning.common.litmodule.classification.BaseClasssificationLitModule.scheduler"]], "step() (cneuromax.deeplearning.common.litmodule.classification.baseclasssificationlitmodule method)": [[19, "cneuromax.deeplearning.common.litmodule.classification.BaseClasssificationLitModule.step"]], "baselitmodule (class in cneuromax.deeplearning.common.litmodule)": [[20, "cneuromax.deeplearning.common.litmodule.BaseLitModule"]], "cneuromax.deeplearning.common.litmodule": [[20, "module-cneuromax.deeplearning.common.litmodule"]], "configure_optimizers() (cneuromax.deeplearning.common.litmodule.baselitmodule method)": [[20, "cneuromax.deeplearning.common.litmodule.BaseLitModule.configure_optimizers"]], "nnmodule (cneuromax.deeplearning.common.litmodule.baselitmodule attribute)": [[20, "cneuromax.deeplearning.common.litmodule.BaseLitModule.nnmodule"]], "optimizer (cneuromax.deeplearning.common.litmodule.baselitmodule attribute)": [[20, "cneuromax.deeplearning.common.litmodule.BaseLitModule.optimizer"]], "scheduler (cneuromax.deeplearning.common.litmodule.baselitmodule attribute)": [[20, "cneuromax.deeplearning.common.litmodule.BaseLitModule.scheduler"]], "test_step() (cneuromax.deeplearning.common.litmodule.baselitmodule method)": [[20, "cneuromax.deeplearning.common.litmodule.BaseLitModule.test_step"]], "training_step() (cneuromax.deeplearning.common.litmodule.baselitmodule method)": [[20, "cneuromax.deeplearning.common.litmodule.BaseLitModule.training_step"]], "validation_step() (cneuromax.deeplearning.common.litmodule.baselitmodule method)": [[20, "cneuromax.deeplearning.common.litmodule.BaseLitModule.validation_step"]], "baselrschedulerconfig (class in cneuromax.deeplearning.common.lrscheduler.base)": [[21, "cneuromax.deeplearning.common.lrscheduler.base.BaseLRSchedulerConfig"]], "_partial_ (cneuromax.deeplearning.common.lrscheduler.base.baselrschedulerconfig attribute)": [[21, "cneuromax.deeplearning.common.lrscheduler.base.BaseLRSchedulerConfig._partial_"], [21, "id0"]], "cneuromax.deeplearning.common.lrscheduler.base": [[21, "module-cneuromax.deeplearning.common.lrscheduler.base"]], "last_epoch (cneuromax.deeplearning.common.lrscheduler.base.baselrschedulerconfig attribute)": [[21, "cneuromax.deeplearning.common.lrscheduler.base.BaseLRSchedulerConfig.last_epoch"], [21, "id1"]], "last_epoch (in module cneuromax.deeplearning.common.lrscheduler.base_test)": [[22, "cneuromax.deeplearning.common.lrscheduler.base_test.LAST_EPOCH"]], "cneuromax.deeplearning.common.lrscheduler.base_test": [[22, "module-cneuromax.deeplearning.common.lrscheduler.base_test"]], "test() (in module cneuromax.deeplearning.common.lrscheduler.base_test)": [[22, "cneuromax.deeplearning.common.lrscheduler.base_test.test"]], "cneuromax.deeplearning.common.lrscheduler": [[23, "module-cneuromax.deeplearning.common.lrscheduler"]], "cneuromax.deeplearning.common.lrscheduler.none_test": [[24, "module-cneuromax.deeplearning.common.lrscheduler.none_test"]], "test() (in module cneuromax.deeplearning.common.lrscheduler.none_test)": [[24, "cneuromax.deeplearning.common.lrscheduler.none_test.test"]], "mlp (class in cneuromax.deeplearning.common.nnmodule)": [[25, "cneuromax.deeplearning.common.nnmodule.MLP"]], "mlpconfig (class in cneuromax.deeplearning.common.nnmodule)": [[25, "cneuromax.deeplearning.common.nnmodule.MLPConfig"]], "activation_fn (cneuromax.deeplearning.common.nnmodule.mlpconfig attribute)": [[25, "cneuromax.deeplearning.common.nnmodule.MLPConfig.activation_fn"], [25, "id1"]], "cneuromax.deeplearning.common.nnmodule": [[25, "module-cneuromax.deeplearning.common.nnmodule"]], "config (cneuromax.deeplearning.common.nnmodule.mlp attribute)": [[25, "cneuromax.deeplearning.common.nnmodule.MLP.config"]], "dims (cneuromax.deeplearning.common.nnmodule.mlpconfig attribute)": [[25, "cneuromax.deeplearning.common.nnmodule.MLPConfig.dims"], [25, "id0"]], "forward() (cneuromax.deeplearning.common.nnmodule.mlp method)": [[25, "cneuromax.deeplearning.common.nnmodule.MLP.forward"]], "model (cneuromax.deeplearning.common.nnmodule.mlp attribute)": [[25, "cneuromax.deeplearning.common.nnmodule.MLP.model"]], "p_dropout (cneuromax.deeplearning.common.nnmodule.mlpconfig attribute)": [[25, "cneuromax.deeplearning.common.nnmodule.MLPConfig.p_dropout"], [25, "id2"]], "mlp (class in cneuromax.deeplearning.common.nnmodule.mlp)": [[26, "cneuromax.deeplearning.common.nnmodule.mlp.MLP"]], "mlpconfig (class in cneuromax.deeplearning.common.nnmodule.mlp)": [[26, "cneuromax.deeplearning.common.nnmodule.mlp.MLPConfig"]], "activation_fn (cneuromax.deeplearning.common.nnmodule.mlp.mlpconfig attribute)": [[26, "cneuromax.deeplearning.common.nnmodule.mlp.MLPConfig.activation_fn"], [26, "id1"]], "cneuromax.deeplearning.common.nnmodule.mlp": [[26, "module-cneuromax.deeplearning.common.nnmodule.mlp"]], "config (cneuromax.deeplearning.common.nnmodule.mlp.mlp attribute)": [[26, "cneuromax.deeplearning.common.nnmodule.mlp.MLP.config"]], "dims (cneuromax.deeplearning.common.nnmodule.mlp.mlpconfig attribute)": [[26, "cneuromax.deeplearning.common.nnmodule.mlp.MLPConfig.dims"], [26, "id0"]], "forward() (cneuromax.deeplearning.common.nnmodule.mlp.mlp method)": [[26, "cneuromax.deeplearning.common.nnmodule.mlp.MLP.forward"]], "model (cneuromax.deeplearning.common.nnmodule.mlp.mlp attribute)": [[26, "cneuromax.deeplearning.common.nnmodule.mlp.MLP.model"]], "p_dropout (cneuromax.deeplearning.common.nnmodule.mlp.mlpconfig attribute)": [[26, "cneuromax.deeplearning.common.nnmodule.mlp.MLPConfig.p_dropout"], [26, "id2"]], "cneuromax.deeplearning.common.nnmodule.mlp_test": [[27, "module-cneuromax.deeplearning.common.nnmodule.mlp_test"]], "mlp_1() (in module cneuromax.deeplearning.common.nnmodule.mlp_test)": [[27, "cneuromax.deeplearning.common.nnmodule.mlp_test.mlp_1"]], "mlp_2() (in module cneuromax.deeplearning.common.nnmodule.mlp_test)": [[27, "cneuromax.deeplearning.common.nnmodule.mlp_test.mlp_2"]], "test_constructor() (in module cneuromax.deeplearning.common.nnmodule.mlp_test)": [[27, "cneuromax.deeplearning.common.nnmodule.mlp_test.test_constructor"]], "test_forward() (in module cneuromax.deeplearning.common.nnmodule.mlp_test)": [[27, "cneuromax.deeplearning.common.nnmodule.mlp_test.test_forward"]], "adamconfig (class in cneuromax.deeplearning.common.optimizer.adam)": [[28, "cneuromax.deeplearning.common.optimizer.adam.AdamConfig"]], "_partial_ (cneuromax.deeplearning.common.optimizer.adam.adamconfig attribute)": [[28, "cneuromax.deeplearning.common.optimizer.adam.AdamConfig._partial_"]], "_target_ (cneuromax.deeplearning.common.optimizer.adam.adamconfig attribute)": [[28, "cneuromax.deeplearning.common.optimizer.adam.AdamConfig._target_"], [28, "id0"]], "betas (cneuromax.deeplearning.common.optimizer.adam.adamconfig attribute)": [[28, "cneuromax.deeplearning.common.optimizer.adam.AdamConfig.betas"], [28, "id1"]], "cneuromax.deeplearning.common.optimizer.adam": [[28, "module-cneuromax.deeplearning.common.optimizer.adam"]], "eps (cneuromax.deeplearning.common.optimizer.adam.adamconfig attribute)": [[28, "cneuromax.deeplearning.common.optimizer.adam.AdamConfig.eps"], [28, "id2"]], "lr (cneuromax.deeplearning.common.optimizer.adam.adamconfig attribute)": [[28, "cneuromax.deeplearning.common.optimizer.adam.AdamConfig.lr"]], "weight_decay (cneuromax.deeplearning.common.optimizer.adam.adamconfig attribute)": [[28, "cneuromax.deeplearning.common.optimizer.adam.AdamConfig.weight_decay"]], "betas (in module cneuromax.deeplearning.common.optimizer.adam_test)": [[29, "cneuromax.deeplearning.common.optimizer.adam_test.BETAS"]], "eps (in module cneuromax.deeplearning.common.optimizer.adam_test)": [[29, "cneuromax.deeplearning.common.optimizer.adam_test.EPS"]], "cneuromax.deeplearning.common.optimizer.adam_test": [[29, "module-cneuromax.deeplearning.common.optimizer.adam_test"]], "test() (in module cneuromax.deeplearning.common.optimizer.adam_test)": [[29, "cneuromax.deeplearning.common.optimizer.adam_test.test"]], "adamwconfig (class in cneuromax.deeplearning.common.optimizer.adamw)": [[30, "cneuromax.deeplearning.common.optimizer.adamw.AdamWConfig"]], "_partial_ (cneuromax.deeplearning.common.optimizer.adamw.adamwconfig attribute)": [[30, "cneuromax.deeplearning.common.optimizer.adamw.AdamWConfig._partial_"]], "_target_ (cneuromax.deeplearning.common.optimizer.adamw.adamwconfig attribute)": [[30, "cneuromax.deeplearning.common.optimizer.adamw.AdamWConfig._target_"], [30, "id0"]], "betas (cneuromax.deeplearning.common.optimizer.adamw.adamwconfig attribute)": [[30, "cneuromax.deeplearning.common.optimizer.adamw.AdamWConfig.betas"]], "cneuromax.deeplearning.common.optimizer.adamw": [[30, "module-cneuromax.deeplearning.common.optimizer.adamw"]], "eps (cneuromax.deeplearning.common.optimizer.adamw.adamwconfig attribute)": [[30, "cneuromax.deeplearning.common.optimizer.adamw.AdamWConfig.eps"]], "lr (cneuromax.deeplearning.common.optimizer.adamw.adamwconfig attribute)": [[30, "cneuromax.deeplearning.common.optimizer.adamw.AdamWConfig.lr"]], "weight_decay (cneuromax.deeplearning.common.optimizer.adamw.adamwconfig attribute)": [[30, "cneuromax.deeplearning.common.optimizer.adamw.AdamWConfig.weight_decay"]], "baseoptimizerconfig (class in cneuromax.deeplearning.common.optimizer.base)": [[31, "cneuromax.deeplearning.common.optimizer.base.BaseOptimizerConfig"]], "_partial_ (cneuromax.deeplearning.common.optimizer.base.baseoptimizerconfig attribute)": [[31, "cneuromax.deeplearning.common.optimizer.base.BaseOptimizerConfig._partial_"], [31, "id1"]], "_target_ (cneuromax.deeplearning.common.optimizer.base.baseoptimizerconfig attribute)": [[31, "cneuromax.deeplearning.common.optimizer.base.BaseOptimizerConfig._target_"], [31, "id0"]], "cneuromax.deeplearning.common.optimizer.base": [[31, "module-cneuromax.deeplearning.common.optimizer.base"]], "lr (cneuromax.deeplearning.common.optimizer.base.baseoptimizerconfig attribute)": [[31, "cneuromax.deeplearning.common.optimizer.base.BaseOptimizerConfig.lr"], [31, "id2"]], "weight_decay (cneuromax.deeplearning.common.optimizer.base.baseoptimizerconfig attribute)": [[31, "cneuromax.deeplearning.common.optimizer.base.BaseOptimizerConfig.weight_decay"], [31, "id3"]], "lr (in module cneuromax.deeplearning.common.optimizer.base_test)": [[32, "cneuromax.deeplearning.common.optimizer.base_test.LR"]], "weight_decay (in module cneuromax.deeplearning.common.optimizer.base_test)": [[32, "cneuromax.deeplearning.common.optimizer.base_test.WEIGHT_DECAY"]], "cneuromax.deeplearning.common.optimizer.base_test": [[32, "module-cneuromax.deeplearning.common.optimizer.base_test"]], "test() (in module cneuromax.deeplearning.common.optimizer.base_test)": [[32, "cneuromax.deeplearning.common.optimizer.base_test.test"]], "adamconfig (class in cneuromax.deeplearning.common.optimizer)": [[33, "cneuromax.deeplearning.common.optimizer.AdamConfig"]], "adamwconfig (class in cneuromax.deeplearning.common.optimizer)": [[33, "cneuromax.deeplearning.common.optimizer.AdamWConfig"]], "sgdconfig (class in cneuromax.deeplearning.common.optimizer)": [[33, "cneuromax.deeplearning.common.optimizer.SGDConfig"]], "_partial_ (cneuromax.deeplearning.common.optimizer.adamconfig attribute)": [[33, "cneuromax.deeplearning.common.optimizer.AdamConfig._partial_"]], "_partial_ (cneuromax.deeplearning.common.optimizer.adamwconfig attribute)": [[33, "cneuromax.deeplearning.common.optimizer.AdamWConfig._partial_"]], "_partial_ (cneuromax.deeplearning.common.optimizer.sgdconfig attribute)": [[33, "cneuromax.deeplearning.common.optimizer.SGDConfig._partial_"]], "_target_ (cneuromax.deeplearning.common.optimizer.adamconfig attribute)": [[33, "cneuromax.deeplearning.common.optimizer.AdamConfig._target_"], [33, "id0"]], "_target_ (cneuromax.deeplearning.common.optimizer.adamwconfig attribute)": [[33, "cneuromax.deeplearning.common.optimizer.AdamWConfig._target_"], [33, "id3"]], "_target_ (cneuromax.deeplearning.common.optimizer.sgdconfig attribute)": [[33, "cneuromax.deeplearning.common.optimizer.SGDConfig._target_"], [33, "id4"]], "betas (cneuromax.deeplearning.common.optimizer.adamconfig attribute)": [[33, "cneuromax.deeplearning.common.optimizer.AdamConfig.betas"], [33, "id1"]], "betas (cneuromax.deeplearning.common.optimizer.adamwconfig attribute)": [[33, "cneuromax.deeplearning.common.optimizer.AdamWConfig.betas"]], "cneuromax.deeplearning.common.optimizer": [[33, "module-cneuromax.deeplearning.common.optimizer"]], "eps (cneuromax.deeplearning.common.optimizer.adamconfig attribute)": [[33, "cneuromax.deeplearning.common.optimizer.AdamConfig.eps"], [33, "id2"]], "eps (cneuromax.deeplearning.common.optimizer.adamwconfig attribute)": [[33, "cneuromax.deeplearning.common.optimizer.AdamWConfig.eps"]], "lr (cneuromax.deeplearning.common.optimizer.adamconfig attribute)": [[33, "cneuromax.deeplearning.common.optimizer.AdamConfig.lr"]], "lr (cneuromax.deeplearning.common.optimizer.adamwconfig attribute)": [[33, "cneuromax.deeplearning.common.optimizer.AdamWConfig.lr"]], "lr (cneuromax.deeplearning.common.optimizer.sgdconfig attribute)": [[33, "cneuromax.deeplearning.common.optimizer.SGDConfig.lr"]], "momentum (cneuromax.deeplearning.common.optimizer.sgdconfig attribute)": [[33, "cneuromax.deeplearning.common.optimizer.SGDConfig.momentum"], [33, "id5"]], "weight_decay (cneuromax.deeplearning.common.optimizer.adamconfig attribute)": [[33, "cneuromax.deeplearning.common.optimizer.AdamConfig.weight_decay"]], "weight_decay (cneuromax.deeplearning.common.optimizer.adamwconfig attribute)": [[33, "cneuromax.deeplearning.common.optimizer.AdamWConfig.weight_decay"]], "weight_decay (cneuromax.deeplearning.common.optimizer.sgdconfig attribute)": [[33, "cneuromax.deeplearning.common.optimizer.SGDConfig.weight_decay"]], "sgdconfig (class in cneuromax.deeplearning.common.optimizer.sgd)": [[34, "cneuromax.deeplearning.common.optimizer.sgd.SGDConfig"]], "_partial_ (cneuromax.deeplearning.common.optimizer.sgd.sgdconfig attribute)": [[34, "cneuromax.deeplearning.common.optimizer.sgd.SGDConfig._partial_"]], "_target_ (cneuromax.deeplearning.common.optimizer.sgd.sgdconfig attribute)": [[34, "cneuromax.deeplearning.common.optimizer.sgd.SGDConfig._target_"], [34, "id0"]], "cneuromax.deeplearning.common.optimizer.sgd": [[34, "module-cneuromax.deeplearning.common.optimizer.sgd"]], "lr (cneuromax.deeplearning.common.optimizer.sgd.sgdconfig attribute)": [[34, "cneuromax.deeplearning.common.optimizer.sgd.SGDConfig.lr"]], "momentum (cneuromax.deeplearning.common.optimizer.sgd.sgdconfig attribute)": [[34, "cneuromax.deeplearning.common.optimizer.sgd.SGDConfig.momentum"], [34, "id1"]], "weight_decay (cneuromax.deeplearning.common.optimizer.sgd.sgdconfig attribute)": [[34, "cneuromax.deeplearning.common.optimizer.sgd.SGDConfig.weight_decay"]], "momentum (in module cneuromax.deeplearning.common.optimizer.sgd_test)": [[35, "cneuromax.deeplearning.common.optimizer.sgd_test.MOMENTUM"]], "cneuromax.deeplearning.common.optimizer.sgd_test": [[35, "module-cneuromax.deeplearning.common.optimizer.sgd_test"]], "test() (in module cneuromax.deeplearning.common.optimizer.sgd_test)": [[35, "cneuromax.deeplearning.common.optimizer.sgd_test.test"]], "cneuromax.deeplearning.common.optimizer.w_test": [[36, "module-cneuromax.deeplearning.common.optimizer.w_test"]], "test() (in module cneuromax.deeplearning.common.optimizer.w_test)": [[36, "cneuromax.deeplearning.common.optimizer.w_test.test"]], "cneuromax.deeplearning.common.utils": [[37, "module-cneuromax.deeplearning.common.utils"]], "initoptimparamscheckpointconnector (class in cneuromax.deeplearning.common.utils.lightning)": [[38, "cneuromax.deeplearning.common.utils.lightning.InitOptimParamsCheckpointConnector"]], "cneuromax.deeplearning.common.utils.lightning": [[38, "module-cneuromax.deeplearning.common.utils.lightning"]], "find_good_batch_size() (in module cneuromax.deeplearning.common.utils.lightning)": [[38, "cneuromax.deeplearning.common.utils.lightning.find_good_batch_size"]], "find_good_num_workers() (in module cneuromax.deeplearning.common.utils.lightning)": [[38, "cneuromax.deeplearning.common.utils.lightning.find_good_num_workers"]], "restore_optimizers() (cneuromax.deeplearning.common.utils.lightning.initoptimparamscheckpointconnector method)": [[38, "cneuromax.deeplearning.common.utils.lightning.InitOptimParamsCheckpointConnector.restore_optimizers"]], "trainer (cneuromax.deeplearning.common.utils.lightning.initoptimparamscheckpointconnector attribute)": [[38, "cneuromax.deeplearning.common.utils.lightning.InitOptimParamsCheckpointConnector.trainer"]], "cneuromax.deeplearning.experiment": [[39, "module-cneuromax.deeplearning.experiment"]], "mnistdatamodule (class in cneuromax.deeplearning.experiment.mnist_classification.datamodule)": [[40, "cneuromax.deeplearning.experiment.mnist_classification.datamodule.MNISTDataModule"]], "mnistdatamoduleconfig (class in cneuromax.deeplearning.experiment.mnist_classification.datamodule)": [[40, "cneuromax.deeplearning.experiment.mnist_classification.datamodule.MNISTDataModuleConfig"]], "cneuromax.deeplearning.experiment.mnist_classification.datamodule": [[40, "module-cneuromax.deeplearning.experiment.mnist_classification.datamodule"]], "fit_dataset_mean (cneuromax.deeplearning.experiment.mnist_classification.datamodule.mnistdatamoduleconfig attribute)": [[40, "cneuromax.deeplearning.experiment.mnist_classification.datamodule.MNISTDataModuleConfig.fit_dataset_mean"], [40, "id1"]], "fit_dataset_std (cneuromax.deeplearning.experiment.mnist_classification.datamodule.mnistdatamoduleconfig attribute)": [[40, "cneuromax.deeplearning.experiment.mnist_classification.datamodule.MNISTDataModuleConfig.fit_dataset_std"], [40, "id2"]], "float_is_gt0_lt1 (in module cneuromax.deeplearning.experiment.mnist_classification.datamodule)": [[40, "cneuromax.deeplearning.experiment.mnist_classification.datamodule.float_is_gt0_lt1"]], "prepare_data() (cneuromax.deeplearning.experiment.mnist_classification.datamodule.mnistdatamodule method)": [[40, "cneuromax.deeplearning.experiment.mnist_classification.datamodule.MNISTDataModule.prepare_data"]], "setup() (cneuromax.deeplearning.experiment.mnist_classification.datamodule.mnistdatamodule method)": [[40, "cneuromax.deeplearning.experiment.mnist_classification.datamodule.MNISTDataModule.setup"]], "str_is_fit_or_test (in module cneuromax.deeplearning.experiment.mnist_classification.datamodule)": [[40, "cneuromax.deeplearning.experiment.mnist_classification.datamodule.str_is_fit_or_test"]], "train_val_split (cneuromax.deeplearning.experiment.mnist_classification.datamodule.mnistdatamodule attribute)": [[40, "cneuromax.deeplearning.experiment.mnist_classification.datamodule.MNISTDataModule.train_val_split"]], "transform (cneuromax.deeplearning.experiment.mnist_classification.datamodule.mnistdatamodule attribute)": [[40, "cneuromax.deeplearning.experiment.mnist_classification.datamodule.MNISTDataModule.transform"]], "val_percentage (cneuromax.deeplearning.experiment.mnist_classification.datamodule.mnistdatamoduleconfig attribute)": [[40, "cneuromax.deeplearning.experiment.mnist_classification.datamodule.MNISTDataModuleConfig.val_percentage"], [40, "id0"]], "cneuromax.deeplearning.experiment.mnist_classification.datamodule_test": [[41, "module-cneuromax.deeplearning.experiment.mnist_classification.datamodule_test"]], "datamodule() (in module cneuromax.deeplearning.experiment.mnist_classification.datamodule_test)": [[41, "cneuromax.deeplearning.experiment.mnist_classification.datamodule_test.datamodule"]], "test_setup_fit() (in module cneuromax.deeplearning.experiment.mnist_classification.datamodule_test)": [[41, "cneuromax.deeplearning.experiment.mnist_classification.datamodule_test.test_setup_fit"]], "test_setup_test() (in module cneuromax.deeplearning.experiment.mnist_classification.datamodule_test)": [[41, "cneuromax.deeplearning.experiment.mnist_classification.datamodule_test.test_setup_test"]], "mnistdatamodule (class in cneuromax.deeplearning.experiment.mnist_classification)": [[42, "cneuromax.deeplearning.experiment.mnist_classification.MNISTDataModule"]], "mnistdatamoduleconfig (class in cneuromax.deeplearning.experiment.mnist_classification)": [[42, "cneuromax.deeplearning.experiment.mnist_classification.MNISTDataModuleConfig"]], "cneuromax.deeplearning.experiment.mnist_classification": [[42, "module-cneuromax.deeplearning.experiment.mnist_classification"]], "fit_dataset_mean (cneuromax.deeplearning.experiment.mnist_classification.mnistdatamoduleconfig attribute)": [[42, "cneuromax.deeplearning.experiment.mnist_classification.MNISTDataModuleConfig.fit_dataset_mean"], [42, "id1"]], "fit_dataset_std (cneuromax.deeplearning.experiment.mnist_classification.mnistdatamoduleconfig attribute)": [[42, "cneuromax.deeplearning.experiment.mnist_classification.MNISTDataModuleConfig.fit_dataset_std"], [42, "id2"]], "prepare_data() (cneuromax.deeplearning.experiment.mnist_classification.mnistdatamodule method)": [[42, "cneuromax.deeplearning.experiment.mnist_classification.MNISTDataModule.prepare_data"]], "setup() (cneuromax.deeplearning.experiment.mnist_classification.mnistdatamodule method)": [[42, "cneuromax.deeplearning.experiment.mnist_classification.MNISTDataModule.setup"]], "train_val_split (cneuromax.deeplearning.experiment.mnist_classification.mnistdatamodule attribute)": [[42, "cneuromax.deeplearning.experiment.mnist_classification.MNISTDataModule.train_val_split"]], "transform (cneuromax.deeplearning.experiment.mnist_classification.mnistdatamodule attribute)": [[42, "cneuromax.deeplearning.experiment.mnist_classification.MNISTDataModule.transform"]], "val_percentage (cneuromax.deeplearning.experiment.mnist_classification.mnistdatamoduleconfig attribute)": [[42, "cneuromax.deeplearning.experiment.mnist_classification.MNISTDataModuleConfig.val_percentage"], [42, "id0"]], "mnistclassificationlitmodule (class in cneuromax.deeplearning.experiment.mnist_classification.litmodule)": [[43, "cneuromax.deeplearning.experiment.mnist_classification.litmodule.MNISTClassificationLitModule"]], "accuracy (cneuromax.deeplearning.experiment.mnist_classification.litmodule.mnistclassificationlitmodule attribute)": [[43, "cneuromax.deeplearning.experiment.mnist_classification.litmodule.MNISTClassificationLitModule.accuracy"]], "cneuromax.deeplearning.experiment.mnist_classification.litmodule": [[43, "module-cneuromax.deeplearning.experiment.mnist_classification.litmodule"]], "forward() (cneuromax.deeplearning.experiment.mnist_classification.litmodule.mnistclassificationlitmodule method)": [[43, "cneuromax.deeplearning.experiment.mnist_classification.litmodule.MNISTClassificationLitModule.forward"]], "nnmodule (cneuromax.deeplearning.experiment.mnist_classification.litmodule.mnistclassificationlitmodule attribute)": [[43, "cneuromax.deeplearning.experiment.mnist_classification.litmodule.MNISTClassificationLitModule.nnmodule"]], "optimizer (cneuromax.deeplearning.experiment.mnist_classification.litmodule.mnistclassificationlitmodule attribute)": [[43, "cneuromax.deeplearning.experiment.mnist_classification.litmodule.MNISTClassificationLitModule.optimizer"]], "scheduler (cneuromax.deeplearning.experiment.mnist_classification.litmodule.mnistclassificationlitmodule attribute)": [[43, "cneuromax.deeplearning.experiment.mnist_classification.litmodule.MNISTClassificationLitModule.scheduler"]], "cneuromax.deeplearning": [[44, "module-cneuromax.deeplearning"]], "cneuromax": [[45, "module-cneuromax"]], "cneuromax.neuroevolution": [[46, "module-cneuromax.neuroevolution"]]}})